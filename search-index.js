var searchIndex = JSON.parse('{\
"leptess":{"doc":"Productive and safe Rust bindings/wrappers for Leptonica â€¦","tn":["AllowBlobDivision","AmbigsDebugLevel","ApplyboxDebug","ApplyboxExposurePattern","ApplyboxLearnCharsAndCharFragsMode","ApplyboxLearnNgramsMode","ApplyboxPage","AssumeFixedPitchCharSegment","BidiDebug","BlandUnrej","CertaintyScale","ChopCenterKnob","ChopCenteredMaxwidth","ChopDebug","ChopEnable","ChopGoodSplit","ChopInsideAngle","ChopMinOutlineArea","ChopMinOutlinePoints","ChopNewSeamPile","ChopOkSplit","ChopOverlapKnob","ChopSameDistance","ChopSeamPileSize","ChopSharpnessKnob","ChopSplitDistKnob","ChopSplitLength","ChopVerticalCreep","ChopWidthChangeKnob","ChopXyWeight","ChsLeadingPunct","ChsTrailingPunct1","ChsTrailingPunct2","ClassifyAdaptFeatureThreshold","ClassifyAdaptProtoThreshold","ClassifyAdaptedPruningFactor","ClassifyAdaptedPruningThreshold","ClassifyBlnNumericMode","ClassifyCharNormRange","ClassifyCharacterFragmentsGarbageCertaintyThreshold","ClassifyClassPrunerMultiplier","ClassifyClassPrunerThreshold","ClassifyCpAnglePadLoose","ClassifyCpAnglePadMedium","ClassifyCpAnglePadTight","ClassifyCpCutoffStrength","ClassifyCpEndPadLoose","ClassifyCpEndPadMedium","ClassifyCpEndPadTight","ClassifyCpSidePadLoose","ClassifyCpSidePadMedium","ClassifyCpSidePadTight","ClassifyDebugCharacterFragments","ClassifyDebugLevel","ClassifyEnableAdaptiveDebugger","ClassifyEnableAdaptiveMatcher","ClassifyEnableLearning","ClassifyFontName","ClassifyIntegerMatcherMultiplier","ClassifyLearnDebugStr","ClassifyLearningDebugLevel","ClassifyMaxCertaintyMargin","ClassifyMaxRatingRatio","ClassifyMaxSlope","ClassifyMinSlope","ClassifyMisfitJunkPenalty","ClassifyNonlinearNorm","ClassifyNormAdjCurl","ClassifyNormAdjMidpoint","ClassifyNormMethod","ClassifyNumCpLevels","ClassifyPicoFeatureLength","ClassifyPpAnglePad","ClassifyPpEndPad","ClassifyPpSidePad","ClassifySaveAdaptedTemplates","ClassifyUsePreAdaptedTemplates","ConflictSetIl1","CrunchAcceptOk","CrunchDebug","CrunchDelCert","CrunchDelHighWord","CrunchDelLowWord","CrunchDelMaxHt","CrunchDelMinHt","CrunchDelMinWidth","CrunchDelRating","CrunchEarlyConvertBadUnlvChs","CrunchEarlyMergeTessFails","CrunchIncludeNumerals","CrunchLeaveAcceptStrings","CrunchLeaveLcStrings","CrunchLeaveOkStrings","CrunchLeaveUcStrings","CrunchLongRepetitions","CrunchPoorGarbageCert","CrunchPoorGarbageRate","CrunchPotIndicators","CrunchPotPoorCert","CrunchPotPoorRate","CrunchRatingMax","CrunchSmallOutlinesSize","CrunchTerribleGarbage","CrunchTerribleRating","DawgDebugLevel","DebugFile","DebugFixSpaceLevel","DebugNoiseRemoval","DebugXHtLevel","DevanagariSplitDebugimage","DevanagariSplitDebuglevel","DisableCharacterFragments","DocDictCertaintyThreshold","DocDictPendingThreshold","DocumentTitle","Dotproduct","EdgesBoxarea","EdgesChildarea","EdgesChildrenCountLimit","EdgesChildrenFix","EdgesChildrenPerGrandchild","EdgesDebug","EdgesMaxChildrenLayers","EdgesMaxChildrenPerOutline","EdgesMinNonhole","EdgesPathareaRatio","EdgesUseNewOutlineComplexity","EditorDbwinHeight","EditorDbwinName","EditorDbwinWidth","EditorDbwinXpos","EditorDbwinYpos","EditorImageBlobBbColor","EditorImageMenuheight","EditorImageTextColor","EditorImageWinName","EditorImageWordBbColor","EditorImageXpos","EditorImageYpos","EditorWordHeight","EditorWordName","EditorWordWidth","EditorWordXpos","EditorWordYpos","EnableNoiseRemoval","EquationdetectSaveBiImage","EquationdetectSaveMergedImage","EquationdetectSaveSeedImage","EquationdetectSaveSptImage","FileType","FixspDoneMode","FixspNonNoiseLimit","FixspSmallOutlinesSize","ForceWordAssoc","FxDebugfile","GapmapBigGaps","GapmapDebug","GapmapNoIsolatedQuanta","GapmapUseEnds","HocrCharBoxes","HocrFontInfo","HyphenDebugLevel","InteractiveDisplayMode","JpgQuality","LanguageModelDebugLevel","LanguageModelMinCompoundLength","LanguageModelNgramNonmatchScore","LanguageModelNgramOn","LanguageModelNgramOrder","LanguageModelNgramRatingFactor","LanguageModelNgramScaleFactor","LanguageModelNgramSmallProb","LanguageModelNgramSpaceDelimitedLanguage","LanguageModelNgramUseOnlyFirstUft8Step","LanguageModelPenaltyCase","LanguageModelPenaltyChartype","LanguageModelPenaltyFont","LanguageModelPenaltyIncrement","LanguageModelPenaltyNonDictWord","LanguageModelPenaltyNonFreqDictWord","LanguageModelPenaltyPunc","LanguageModelPenaltyScript","LanguageModelPenaltySpacing","LanguageModelUseSigmoidalCertainty","LanguageModelViterbiListMaxNumPrunable","LanguageModelViterbiListMaxSize","LepTess","LoadBigramDawg","LoadFreqDawg","LoadNumberDawg","LoadPuncDawg","LoadSystemDawg","LoadUnambigDawg","LstmChoiceMode","LstmUseMatrix","MatcherAvgNoiseSize","MatcherBadMatchPad","MatcherClusteringMaxAngleDelta","MatcherDebugFlags","MatcherDebugLevel","MatcherDebugSeparateWindows","MatcherGoodThreshold","MatcherMinExamplesForPrototyping","MatcherPerfectThreshold","MatcherPermanentClassesMin","MatcherRatingMargin","MatcherReliableAdaptiveResult","MatcherSufficientExamplesForPrototyping","MaxPermuterAttempts","MergeFragmentsInMatrix","MinCharactersToTry","MinOrientationMargin","MinSaneXHtPixels","MultilangDebugLevel","NoiseCertBasechar","NoiseCertDisjoint","NoiseCertFactor","NoiseCertPunc","NoiseMaxperblob","NoiseMaxperword","NumericPunctuation","OcrDevanagariSplitStrategy","OkRepeatedChNonAlphanumWds","OldblCorrfix","OldblDotErrorSize","OldblHoledLosscount","OldblXhfix","OldblXhfract","Outlines2","OutlinesOdd","OutputAmbigWordsFile","PageSeparator","PagesegApplyMusicMask","PagesegDevanagariSplitStrategy","ParagraphDebugLevel","ParagraphTextBased","PitsyncFakeDepth","PitsyncJoinedEdge","PitsyncLinearVersion","PitsyncOffsetFreecutFraction","PolyAllowDetailedFx","PolyDebug","PolyWideObjectsBetter","PreserveInterwordSpaces","PrioritizeDivision","QualityBlobPc","QualityCharPc","QualityMinInitialAlphasReqd","QualityOutlinePc","QualityRejPc","QualityRowrejPc","RatingScale","Rej1IlTrustPermuterType","Rej1IlUseDictWord","RejAlphasInNumberPerm","RejTrustDocDawg","RejUseGoodPerm","RejUseSensibleWd","RejUseTessAccepted","RejUseTessBlanks","RejWholeOfMostlyRejectWordFract","RepairUnchoppedBlobs","SaveAltChoices","SaveDocWords","SegmentNonalphabeticScript","SegmentPenaltyDictCaseBad","SegmentPenaltyDictCaseOk","SegmentPenaltyDictFrequentWord","SegmentPenaltyDictNonword","SegmentPenaltyGarbage","SegsearchDebugLevel","SegsearchMaxCharWhRatio","SegsearchMaxFutileClassifications","SegsearchMaxPainPoints","SpeckleLargeMaxSize","SpeckleRatingPenalty","StopperAllowableCharacterBadness","StopperCertaintyPerChar","StopperDebugLevel","StopperNoAcceptableChoices","StopperNondictCertaintyBase","StopperPhase2CertaintyRejectionOffset","StopperSmallwordSize","StreamFilelist","SubscriptMaxYTop","SuperscriptBetteredCertainty","SuperscriptDebug","SuperscriptMinYBottom","SuperscriptScaledownRatio","SuperscriptWorseCertainty","SuspectAcceptRating","SuspectConstrain1Il","SuspectLevel","SuspectRatingPerCh","SuspectShortWords","TessBnMatching","TessCnMatching","TesseditAdaptionDebug","TesseditAmbigsTraining","TesseditBigramDebug","TesseditCertaintyThreshold","TesseditCharBlacklist","TesseditCharUnblacklist","TesseditCharWhitelist","TesseditClassMissScale","TesseditCreateAlto","TesseditCreateBoxfile","TesseditCreateHocr","TesseditCreateLstmbox","TesseditCreatePdf","TesseditCreateTsv","TesseditCreateTxt","TesseditCreateWordstrbox","TesseditDebugBlockRejection","TesseditDebugDocRejection","TesseditDebugFonts","TesseditDebugQualityMetrics","TesseditDisplayOutwords","TesseditDoInvert","TesseditDontBlkrejGoodWds","TesseditDontRowrejGoodWds","TesseditDumpChoices","TesseditDumpPagesegImages","TesseditEnableBigramCorrection","TesseditEnableDictCorrection","TesseditEnableDocDict","TesseditFixFuzzySpaces","TesseditFixHyphens","TesseditFlip0O","TesseditGoodDocStillRowrejWd","TesseditGoodQualityUnrej","TesseditImageBorder","TesseditInitConfigOnly","TesseditLoadSublangs","TesseditLowerFlipHyphen","TesseditMakeBoxesFromBoxes","TesseditMinimalRejPass1","TesseditMinimalRejection","TesseditOcrEngineMode","TesseditOverridePermuter","TesseditPageNumber","TesseditPagesegMode","TesseditParallelize","TesseditPreferJoinedPunct","TesseditPreserveBlkRejPerfectWds","TesseditPreserveMinWdLen","TesseditPreserveRowRejPerfectWds","TesseditRejectBadQualWds","TesseditRejectBlockPercent","TesseditRejectDocPercent","TesseditRejectMode","TesseditRejectRowPercent","TesseditRejectionDebug","TesseditResegmentFromBoxes","TesseditResegmentFromLineBoxes","TesseditRowRejGoodDocs","TesseditTessAdaptionMode","TesseditTestAdaption","TesseditTimingDebug","TesseditTrainFromBoxes","TesseditTrainLineRecognizer","TesseditTruncateWordchoiceLog","TesseditUnrejAnyWd","TesseditUpperFlipHyphen","TesseditUsePrimaryParamsModel","TesseditUseRejectSpaces","TesseditWholeWdRejRowPercent","TesseditWordForWord","TesseditWriteBlockSeparators","TesseditWriteImages","TesseditWriteParamsToFile","TesseditWriteRepCodes","TesseditWriteUnlv","TesseditZeroKelvinRejection","TesseditZeroRejection","TestPt","TestPtX","TestPtY","TextonlyPdf","TextordAllProp","TextordAscheightModeFraction","TextordAscxRatioMax","TextordAscxRatioMin","TextordBalanceFactor","TextordBaselineDebug","TextordBiasedSkewcalc","TextordBlockndocFixed","TextordBlocksallFixed","TextordBlocksallProp","TextordBlocksallTesting","TextordBlshiftMaxshift","TextordBlshiftXfraction","TextordChopWidth","TextordChopperTest","TextordDebugBaselines","TextordDebugBlob","TextordDebugBlock","TextordDebugBugs","TextordDebugPitchMetric","TextordDebugPitchTest","TextordDebugPrintable","TextordDebugTabfind","TextordDebugXheights","TextordDescheightModeFraction","TextordDescxRatioMax","TextordDescxRatioMin","TextordDisablePitchTest","TextordDotmatrixGap","TextordEquationDetect","TextordExcessBlobsize","TextordExpansionFactor","TextordFastPitchTest","TextordFixMakerowBug","TextordFixXheightBug","TextordForceMakePropWords","TextordFpChopError","TextordFpChopSnap","TextordFpChopping","TextordFpMinWidth","TextordFpiqrRatio","TextordHeavyNr","TextordInitialascIle","TextordInitialxIle","TextordInterpolatingSkew","TextordLinespaceIqrlimit","TextordLmsLineTrials","TextordMaxBlobOverlaps","TextordMaxNoiseSize","TextordMaxPitchIqr","TextordMinBlobHeightFraction","TextordMinBlobsInRow","TextordMinLinesize","TextordMinXheight","TextordMinxh","TextordNewInitialXheight","TextordNoRejects","TextordNoiseAreaRatio","TextordNoiseDebug","TextordNoiseHfract","TextordNoiseNormratio","TextordNoiseRejrows","TextordNoiseRejwords","TextordNoiseRowratio","TextordNoiseSizefraction","TextordNoiseSizelimit","TextordNoiseSncount","TextordNoiseSxfract","TextordNoiseSyfract","TextordNoiseTranslimit","TextordOccupancyThreshold","TextordOcropusMode","TextordOldBaselines","TextordOldXheight","TextordOldblDebug","TextordOldblJumplimit","TextordOldblMergeParts","TextordOldblParadef","TextordOldblSplitSplines","TextordOverlapX","TextordParallelBaselines","TextordPitchCheat","TextordPitchRange","TextordPitchRowsimilarity","TextordPitchScalebigwords","TextordProjectionScale","TextordReallyOldXheight","TextordRestoreUnderlines","TextordShowBlobs","TextordShowBoxes","TextordShowExpandedRows","TextordShowFinalBlobs","TextordShowFinalRows","TextordShowFixedCuts","TextordShowFixedWords","TextordShowInitialRows","TextordShowInitialWords","TextordShowNewWords","TextordShowPageCuts","TextordShowParallelRows","TextordShowRowCuts","TextordShowTables","TextordSingleHeightMode","TextordSkewIle","TextordSkewLag","TextordSkewsmoothOffset","TextordSkewsmoothOffset2","TextordSpaceSizeIsVariable","TextordSpacesizeRatiofp","TextordSpacesizeRatioprop","TextordSplineMedianwin","TextordSplineMinblobs","TextordSplineOutlierFraction","TextordSplineShiftFraction","TextordStraightBaselines","TextordTabfindAlignedGapFraction","TextordTabfindFindTables","TextordTabfindForceVerticalText","TextordTabfindOnlyStrokewidths","TextordTabfindShowBlocks","TextordTabfindShowColumns","TextordTabfindShowFinaltabs","TextordTabfindShowImages","TextordTabfindShowInitialPartitions","TextordTabfindShowInitialtabs","TextordTabfindShowPartitions","TextordTabfindShowRejectBlobs","TextordTabfindShowStrokewidths","TextordTabfindShowVlines","TextordTabfindVerticalText","TextordTabfindVerticalTextRatio","TextordTablefindRecognizeTables","TextordTablefindShowMark","TextordTablefindShowStats","TextordTabvectorVerticalBoxRatio","TextordTabvectorVerticalGapFraction","TextordTestLandscape","TextordTestMode","TextordTestX","TextordTestY","TextordTestregionBottom","TextordTestregionLeft","TextordTestregionRight","TextordTestregionTop","TextordUnderlineOffset","TextordUnderlineThreshold","TextordUnderlineWidth","TextordUseCjkFpModel","TextordWidthLimit","TextordWidthSmoothFactor","TextordWordsDefFixed","TextordWordsDefProp","TextordWordsDefaultMaxspace","TextordWordsDefaultMinspace","TextordWordsDefaultNonspace","TextordWordsDefiniteSpread","TextordWordsInitialLower","TextordWordsInitialUpper","TextordWordsMaxspace","TextordWordsMinMinspace","TextordWordsMinlarge","TextordWordsPitchsdThreshold","TextordWordsVetoPower","TextordWordsWidthIle","TextordWordstatsSmoothFactor","TextordXheightErrorMargin","TextordXheightModeFraction","TospAllFlipsFuzzy","TospBlockUseCertSpaces","TospDebugLevel","TospDontFoolWithSmallKerns","TospEnoughSmallGaps","TospEnoughSpaceSamplesForMedian","TospFewSamples","TospFlipCaution","TospFlipFuzzKnToSp","TospFlipFuzzSpToKn","TospForceWordbreakOnPunct","TospFuzzyKnFraction","TospFuzzyLimitAll","TospFuzzySpFraction","TospFuzzySpaceFactor","TospFuzzySpaceFactor1","TospFuzzySpaceFactor2","TospGapFactor","TospIgnoreBigGaps","TospIgnoreVeryBigGaps","TospImproveThresh","TospInitGuessKnMult","TospInitGuessXhtMult","TospKernGapFactor1","TospKernGapFactor2","TospKernGapFactor3","TospLargeKerning","TospMaxSaneKnThresh","TospMinSaneKnSp","TospNarrowAspectRatio","TospNarrowBlobsNotCert","TospNarrowFraction","TospNearLhEdge","TospOldSpKnThFactor","TospOldToBugFix","TospOldToConstrainSpKn","TospOldToMethod","TospOnlySmallGapsForKern","TospOnlyUsePropRows","TospOnlyUseXhtGaps","TospPassWideFuzzSpToContext","TospRecoveryIsolatedRowStats","TospRedoKernLimit","TospRepSpace","TospRowUseCertSpaces","TospRowUseCertSpaces1","TospRule9TestPunct","TospSanityMethod","TospShortRow","TospSillyKnSpGap","TospStatsUseXhtGaps","TospTableFuzzyKnSpRatio","TospTableKnSpRatio","TospTableXhtSpRatio","TospThresholdBias1","TospThresholdBias2","TospUsePreChopping","TospUseXhtGaps","TospWideAspectRatio","TospWideFraction","UnlvTildeCrunching","UnrecognisedChar","UseAmbigsForAdaption","UseOnlyFirstUft8Step","UserDefinedDpi","UserPatternsFile","UserPatternsSuffix","UserWordsFile","UserWordsSuffix","Variable","WordToDebug","WordrecBlobPause","WordrecDebugBlamer","WordrecDebugLevel","WordrecDisplayAllBlobs","WordrecDisplaySegmentations","WordrecDisplaySplits","WordrecEnableAssoc","WordrecMaxJoinChunks","WordrecRunBlamer","WordrecSkipNoTruthWords","WordsDefaultFixedLimit","WordsDefaultFixedSpace","WordsDefaultPropNonspace","WordsInitialLower","WordsInitialUpper","XHtAcceptanceTolerance","XHtMinChange","XheightPenaltyInconsistent","XheightPenaltySubscripts","as_cstr","borrow","borrow","borrow_mut","borrow_mut","capi","clone","clone_into","eq","fmt","from","from","get_alto_text","get_component_boxes","get_hocr_text","get_image_dimensions","get_lstm_box_text","get_regions","get_source_y_resolution","get_tsv_text","get_utf8_text","get_word_str_box_text","into","into","leptonica","mean_text_conf","new","recognize","set_fallback_source_resolution","set_image","set_image_from_mem","set_rectangle","set_source_resolution","set_variable","tesseract","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ADDED_BORDER","ASYMMETRIC_MORPH_BC","BIG_ENDIAN","BMP_ID","BOX","BOXA","BOXAA","BOXAA_VERSION_NUMBER","BOXA_VERSION_NUMBER","BUFSIZ","BYTE_ORDER","Box","Boxa","Boxaa","CCBORD","CCBORDA","CCB_GLOBAL_COORDS","CCB_LOCAL_COORDS","CCB_SAVE_ALL_PTS","CCB_SAVE_TURNING_PTS","CCBord","CCBorda","COLOR_BLUE","COLOR_GREEN","COLOR_RED","DEFAULT_CLIP_LOWER_1","DEFAULT_CLIP_LOWER_2","DEFAULT_CLIP_UPPER_1","DEFAULT_CLIP_UPPER_2","DEWARP_VERSION_NUMBER","DLLIST","DNA_VERSION_NUMBER","DPIX","DPIX_VERSION_NUMBER","DPix","DoubleLinkedList","EOF","ETEXT_DESC","EXIT_FAILURE","EXIT_SUCCESS","FALSE","FD_SETSIZE","FILE","FILENAME_MAX","FOPEN_MAX","FPIX","FPIXA","FPIX_VERSION_NUMBER","FPix","FPixa","GPLOT","GPLOT_OUTPUT","GPLOT_OUTPUT_GPLOT_EPS","GPLOT_OUTPUT_GPLOT_LATEX","GPLOT_OUTPUT_GPLOT_NONE","GPLOT_OUTPUT_GPLOT_PNG","GPLOT_OUTPUT_GPLOT_PNM","GPLOT_OUTPUT_GPLOT_PS","GPLOT_SCALING","GPLOT_SCALING_GPLOT_LINEAR_SCALE","GPLOT_SCALING_GPLOT_LOG_SCALE_X","GPLOT_SCALING_GPLOT_LOG_SCALE_X_Y","GPLOT_SCALING_GPLOT_LOG_SCALE_Y","GPLOT_STYLE","GPLOT_STYLE_GPLOT_DOTS","GPLOT_STYLE_GPLOT_IMPULSES","GPLOT_STYLE_GPLOT_LINES","GPLOT_STYLE_GPLOT_LINESPOINTS","GPLOT_STYLE_GPLOT_POINTS","GPLOT_VERSION_NUMBER","GPlot","HAVE_FMEMOPEN","HAVE_FSTATAT","HAVE_LIBGIF","HAVE_LIBJP2K","HAVE_LIBJPEG","HAVE_LIBPNG","HAVE_LIBTIFF","HAVE_LIBUNGIF","HAVE_LIBWEBP","HAVE_LIBWEBP_ANIM","HAVE_LIBZ","IFF_BMP","IFF_DEFAULT","IFF_GIF","IFF_JFIF_JPEG","IFF_JP2","IFF_LPDF","IFF_PNG","IFF_PNM","IFF_PS","IFF_SPIX","IFF_TIFF","IFF_TIFF_G3","IFF_TIFF_G4","IFF_TIFF_JPEG","IFF_TIFF_LZW","IFF_TIFF_PACKBITS","IFF_TIFF_RLE","IFF_TIFF_ZIP","IFF_UNKNOWN","IFF_WEBP","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","JBCLASSER","JBDATA","JB_CHARACTERS","JB_CONN_COMPS","JB_CORRELATION","JB_DATA_EXT","JB_RANKHAUS","JB_TEMPLATE_EXT","JB_WORDS","JbClasser","JbData","KERNEL_VERSION_NUMBER","LIBLEPT_MAJOR_VERSION","LIBLEPT_MINOR_VERSION","LIBLEPT_PATCH_VERSION","LITTLE_ENDIAN","L_ADD_ABOVE","L_ADD_AT_BOT","L_ADD_AT_LEFT","L_ADD_AT_RIGHT","L_ADD_AT_TOP","L_ADD_BELOW","L_ADD_LEFT","L_ADD_RIGHT","L_ADD_TRAIL_SLASH","L_ADJUST_BOT","L_ADJUST_CHOOSE_MAX","L_ADJUST_CHOOSE_MIN","L_ADJUST_LEFT","L_ADJUST_LEFT_AND_RIGHT","L_ADJUST_RIGHT","L_ADJUST_SKIP","L_ADJUST_TOP","L_ADJUST_TOP_AND_BOT","L_ALL","L_ALL_EDGES","L_ALPHA_CHANNEL","L_ALPHA_SHIFT","L_AMAP","L_AMAP_NODE","L_ARABIC_NUMERALS","L_ARITH_ADD","L_ARITH_DIVIDE","L_ARITH_MULTIPLY","L_ARITH_SUBTRACT","L_ASET","L_ASET_NODE","L_AUTO_BYTE","L_AUTO_DOWNSHIFT","L_BBUFFER","L_BIN_SORT","L_BLACK_IS_MAX","L_BLEND_GRAY","L_BLEND_GRAY_WITH_INVERSE","L_BLEND_TO_BLACK","L_BLEND_TO_WHITE","L_BLEND_WITH_INVERSE","L_BLUE_SHIFT","L_BLUE_WEIGHT","L_BMF","L_BOTH_DIRECTIONS","L_BOUNDARY_BG","L_BOUNDARY_FG","L_BOX_CENTER","L_BRING_IN_BLACK","L_BRING_IN_WHITE","L_BYTEA","L_Bmf","L_ByteBuffer","L_Bytea","L_CHECK_BOTH","L_CHECK_HEIGHT","L_CHECK_WIDTH","L_CHOOSE_CONSECUTIVE","L_CHOOSE_MAX","L_CHOOSE_MAXDIFF","L_CHOOSE_MAX_BOOST","L_CHOOSE_MIN","L_CHOOSE_MIN_BOOST","L_CHOOSE_SKIP_BY","L_CLEAR_PIXELS","L_CLIP_TO_FF","L_CLIP_TO_FFFF","L_CLIP_TO_ZERO","L_CLONE","L_COMBINE","L_COMPACTION","L_COMPARE_ABS_DIFF","L_COMPARE_SUBTRACT","L_COMPARE_XOR","L_COMP_DATA","L_CONTINUED_BORDER","L_COPY","L_COPY_CLONE","L_Compressed_Data","L_DEFAULT_ENCODE","L_DEWARP","L_DEWARPA","L_DISPLAY_WITH_IV","L_DISPLAY_WITH_OPEN","L_DISPLAY_WITH_XLI","L_DISPLAY_WITH_XV","L_DISPLAY_WITH_XZGV","L_DNA","L_DNAA","L_DNAHASH","L_DRAW_BLUE","L_DRAW_GREEN","L_DRAW_RANDOM","L_DRAW_RED","L_DRAW_RGB","L_DRAW_SPECIFIED","L_Dewarp","L_Dewarpa","L_Dna","L_DnaHash","L_Dnaa","L_EQUAL_TO_ZERO","L_EUCLIDEAN_DISTANCE","L_EXCLUDE_REGION","L_EXCLUSIVE_OR","L_FILL_BLACK","L_FILL_WHITE","L_FIRST_IMAGE","L_FLATE_ENCODE","L_FLIP_PIXELS","L_FLOAT_TYPE","L_FLOAT_VALUE","L_FOUND","L_FROM_BOT","L_FROM_LEFT","L_FROM_RIGHT","L_FROM_TOP","L_FULL_DOWNSHIFT","L_G4_ENCODE","L_GEOMETRIC_INTERSECTION","L_GEOMETRIC_UNION","L_GET_BLACK_VAL","L_GET_BOT","L_GET_LEFT","L_GET_RIGHT","L_GET_TOP","L_GET_WHITE_VAL","L_GREATER_THAN_ZERO","L_GREEN_SHIFT","L_GREEN_WEIGHT","L_HANDLE_ONLY","L_HEAP","L_HORIZ","L_HORIZONTAL_EDGES","L_HORIZONTAL_LINE","L_HORIZONTAL_RUNS","L_HS_HISTO","L_HV_HISTO","L_Heap","L_INCLUDE_REGION","L_INSERT","L_INTEGER_VALUE","L_INTERPOLATED","L_INTERSECTION","L_INT_TYPE","L_JP2K_ENCODE","L_JPEG_ENCODE","L_JPEG_FAIL_ON_BAD_DATA","L_JPEG_READ_LUMINANCE","L_KERNEL","L_Kernel","L_LANDSCAPE_MODE","L_LARGEST_AREA","L_LAST_IMAGE","L_LC_ALPHA","L_LC_ROMAN_NUMERALS","L_LESS_THAN_ZERO","L_LINEAR_INTERP","L_LINEAR_SCALE","L_LINEAR_WARP","L_LOG_SCALE","L_LOWER_LEFT","L_LOWER_RIGHT","L_LS_BYTE","L_LS_TWO_BYTES","L_MANHATTAN_DISTANCE","L_MAX_DIFF","L_MAX_DIFF_FROM_AVERAGE_2","L_MAX_MIN_DIFF_FROM_2","L_MEAN_ABSVAL","L_MEDIAN_VAL","L_MIN_DOWNSHIFT","L_MIRRORED_BORDER","L_MODE_COUNT","L_MODE_VAL","L_MORPH_CLOSE","L_MORPH_DILATE","L_MORPH_ERODE","L_MORPH_HMT","L_MORPH_OPEN","L_MS_BYTE","L_MS_TWO_BYTES","L_NEGATIVE","L_NEG_SLOPE_LINE","L_NEXT_IMAGE","L_NOCOPY","L_NON_NEGATIVE","L_NON_POSITIVE","L_NOT_FOUND","L_NO_CHROMA_SAMPLING_JPEG","L_NO_COMPACTION","L_OBLIQUE_LINE","L_PAINT_DARK","L_PAINT_LIGHT","L_PDF_DATA","L_PLOT_AT_BOT","L_PLOT_AT_LEFT","L_PLOT_AT_MID_HORIZ","L_PLOT_AT_MID_VERT","L_PLOT_AT_RIGHT","L_PLOT_AT_TOP","L_PORTRAIT_MODE","L_POSITIVE","L_POS_SLOPE_LINE","L_PTRA","L_PTRAA","L_Pdf_Data","L_Ptra","L_Ptraa","L_QUADRATIC_INTERP","L_QUADRATIC_WARP","L_QUEUE","L_Queue","L_RBTREE","L_RBTREE_NODE","L_RCH","L_RCHA","L_RDID","L_RECOG","L_RED_SHIFT","L_RED_WEIGHT","L_REGPARAMS","L_REG_COMPARE","L_REG_DISPLAY","L_REG_GENERATE","L_REMOVE","L_REMOVE_SMALL","L_REMOVE_TRAIL_SLASH","L_ROOT_MEAN_SQUARE","L_ROTATE_AREA_MAP","L_ROTATE_SAMPLING","L_ROTATE_SHEAR","L_RO_SC_TR","L_RO_TR_SC","L_RUN_OFF","L_RUN_ON","L_Rbtree","L_Rbtree_Node","L_Rch","L_Rcha","L_Rdid","L_Recog","L_RegParams","L_SAMPLED","L_SCAN_BOTH","L_SCAN_HORIZONTAL","L_SCAN_NEGATIVE","L_SCAN_POSITIVE","L_SCAN_VERTICAL","L_SC_RO_TR","L_SC_TR_RO","L_SELECT_AVERAGE","L_SELECT_BLUE","L_SELECT_BY_AREA","L_SELECT_BY_HEIGHT","L_SELECT_BY_MAX_DIMENSION","L_SELECT_BY_PERIMETER","L_SELECT_BY_WIDTH","L_SELECT_GREEN","L_SELECT_HEIGHT","L_SELECT_HUE","L_SELECT_IF_BOTH","L_SELECT_IF_EITHER","L_SELECT_IF_GT","L_SELECT_IF_GTE","L_SELECT_IF_LT","L_SELECT_IF_LTE","L_SELECT_MAX","L_SELECT_MIN","L_SELECT_RED","L_SELECT_SATURATION","L_SELECT_WIDTH","L_SELECT_XVAL","L_SELECT_YVAL","L_SET_BLACK","L_SET_BOT","L_SET_LEFT","L_SET_PIXELS","L_SET_RIGHT","L_SET_TOP","L_SET_WHITE","L_SEVERITY_ALL","L_SEVERITY_DEBUG","L_SEVERITY_ERROR","L_SEVERITY_EXTERNAL","L_SEVERITY_INFO","L_SEVERITY_NONE","L_SEVERITY_WARNING","L_SHEAR_ABOUT_CENTER","L_SHEAR_ABOUT_CORNER","L_SHELL_SORT","L_SLOPE_BORDER","L_SMALLEST_AREA","L_SOBEL_EDGE","L_SORT_BY_AREA","L_SORT_BY_ASPECT_RATIO","L_SORT_BY_BOT","L_SORT_BY_HEIGHT","L_SORT_BY_MAX_DIMENSION","L_SORT_BY_MIN_DIMENSION","L_SORT_BY_PERIMETER","L_SORT_BY_RIGHT","L_SORT_BY_WIDTH","L_SORT_BY_X","L_SORT_BY_Y","L_SORT_DECREASING","L_SORT_INCREASING","L_STACK","L_STANDARD_DEVIATION","L_STRCODE","L_STR_MEMREADER","L_STR_NAME","L_STR_READER","L_STR_TYPE","L_SUBPIXEL_ORDER_BGR","L_SUBPIXEL_ORDER_RGB","L_SUBPIXEL_ORDER_VBGR","L_SUBPIXEL_ORDER_VRGB","L_SUBTRACTION","L_SUB_ON_LOC_DIFF","L_SUB_ON_SIZE_DIFF","L_SUDOKU","L_SUDOKU_INIT","L_SUDOKU_STATE","L_SV_HISTO","L_Stack","L_StrCode","L_Sudoku","L_TAKE_ABSVAL","L_TEXT_ORIENT_DOWN","L_TEXT_ORIENT_LEFT","L_TEXT_ORIENT_RIGHT","L_TEXT_ORIENT_UNKNOWN","L_TEXT_ORIENT_UP","L_THIN_BG","L_THIN_FG","L_TIMER","L_TOPHAT_BLACK","L_TOPHAT_WHITE","L_TR_RO_SC","L_TR_SC_RO","L_TWO_SIDED_EDGE","L_UC_ALPHA","L_UC_ROMAN_NUMERALS","L_UINT_TYPE","L_UNION","L_UNKNOWN","L_UPPER_LEFT","L_UPPER_RIGHT","L_USE_ALL_BOXES","L_USE_ALL_TEMPLATES","L_USE_AVERAGE_TEMPLATES","L_USE_CAPPED_MAX","L_USE_CAPPED_MIN","L_USE_INNER","L_USE_MAXSIZE","L_USE_MINSIZE","L_USE_OUTER","L_USE_SAME_PARITY_BOXES","L_VARIANCE","L_VERT","L_VERTICAL_EDGES","L_VERTICAL_LINE","L_VERTICAL_RUNS","L_WALLTIMER","L_WARP_TO_LEFT","L_WARP_TO_RIGHT","L_WHITE_IS_MAX","L_WSHED","L_WShed","L_WallTimer","L_ZERO","L_ctermid","L_tmpnam","LeptDebugOK","LeptMsgSeverity","NUMA","NUMAA","NUMA_VERSION_NUMBER","NUM_GPLOT_OUTPUTS","NUM_GPLOT_STYLES","Numa","Numaa","PDP_ENDIAN","PIX","PIXA","PIXAA","PIXAA_VERSION_NUMBER","PIXAC","PIXACC","PIXACOMP_VERSION_NUMBER","PIXA_VERSION_NUMBER","PIXC","PIXCMAP","PIXTILING","PIX_CLR","PIX_DST","PIX_MASK","PIX_PAINT","PIX_SET","PIX_SRC","PIX_XOR","PTA","PTAA","PTA_VERSION_NUMBER","PTRDIFF_MAX","PTRDIFF_MIN","P_tmpdir","Pix","PixColormap","PixComp","PixTiling","Pixa","PixaComp","Pixaa","Pixacc","Pta","Ptaa","RAND_MAX","RB_TYPE","RECOG_VERSION_NUMBER","REMOVE_CMAP_BASED_ON_SRC","REMOVE_CMAP_TO_BINARY","REMOVE_CMAP_TO_FULL_COLOR","REMOVE_CMAP_TO_GRAYSCALE","REMOVE_CMAP_WITH_ALPHA","RGBA_QUAD","RGBA_Quad","Rb_Type","SARRAY","SARRAY_VERSION_NUMBER","SEEK_CUR","SEEK_END","SEEK_SET","SEL","SELA","SEL_DONT_CARE","SEL_HIT","SEL_MISS","SEL_VERSION_NUMBER","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","SPLIT_ON_BLANK_LINE","SPLIT_ON_BOTH","SPLIT_ON_LEADING_WHITE","SYMMETRIC_MORPH_BC","Sarray","Sel","Sela","TIFF_BIGEND_ID","TIFF_LITTLEEND_ID","TMP_MAX","TRUE","TessAltoRendererCreate","TessBaseAPI","TessBaseAPIAdaptToWordStr","TessBaseAPIAllWordConfidences","TessBaseAPIAnalyseLayout","TessBaseAPIClear","TessBaseAPIClearAdaptiveClassifier","TessBaseAPICreate","TessBaseAPIDelete","TessBaseAPIEnd","TessBaseAPIGetAltoText","TessBaseAPIGetAvailableLanguagesAsVector","TessBaseAPIGetBoolVariable","TessBaseAPIGetBoxText","TessBaseAPIGetComponentImages","TessBaseAPIGetComponentImages1","TessBaseAPIGetConnectedComponents","TessBaseAPIGetDatapath","TessBaseAPIGetDoubleVariable","TessBaseAPIGetHOCRText","TessBaseAPIGetInitLanguagesAsString","TessBaseAPIGetInputImage","TessBaseAPIGetInputName","TessBaseAPIGetIntVariable","TessBaseAPIGetIterator","TessBaseAPIGetLSTMBoxText","TessBaseAPIGetLoadedLanguagesAsVector","TessBaseAPIGetMutableIterator","TessBaseAPIGetOpenCLDevice","TessBaseAPIGetPageSegMode","TessBaseAPIGetRegions","TessBaseAPIGetSourceYResolution","TessBaseAPIGetStringVariable","TessBaseAPIGetStrips","TessBaseAPIGetTextDirection","TessBaseAPIGetTextlines","TessBaseAPIGetTextlines1","TessBaseAPIGetThresholdedImage","TessBaseAPIGetThresholdedImageScaleFactor","TessBaseAPIGetTsvText","TessBaseAPIGetUNLVText","TessBaseAPIGetUTF8Text","TessBaseAPIGetUnichar","TessBaseAPIGetWordStrBoxText","TessBaseAPIGetWords","TessBaseAPIInit1","TessBaseAPIInit2","TessBaseAPIInit3","TessBaseAPIInit4","TessBaseAPIInitForAnalysePage","TessBaseAPIInitLangMod","TessBaseAPIIsValidWord","TessBaseAPIMeanTextConf","TessBaseAPIPrintVariables","TessBaseAPIPrintVariablesToFile","TessBaseAPIProcessPage","TessBaseAPIProcessPages","TessBaseAPIReadConfigFile","TessBaseAPIReadDebugConfigFile","TessBaseAPIRecognize","TessBaseAPIRecognizeForChopTest","TessBaseAPIRect","TessBaseAPISetDebugVariable","TessBaseAPISetImage","TessBaseAPISetImage2","TessBaseAPISetInputImage","TessBaseAPISetInputName","TessBaseAPISetMinOrientationMargin","TessBaseAPISetOutputName","TessBaseAPISetPageSegMode","TessBaseAPISetRectangle","TessBaseAPISetSourceResolution","TessBaseAPISetVariable","TessBoxTextRendererCreate","TessCancelFunc","TessChoiceIterator","TessChoiceIteratorConfidence","TessChoiceIteratorDelete","TessChoiceIteratorGetUTF8Text","TessChoiceIteratorNext","TessDeleteIntArray","TessDeleteResultRenderer","TessDeleteText","TessDeleteTextArray","TessHOcrRendererCreate","TessHOcrRendererCreate2","TessLSTMBoxRendererCreate","TessMonitorCreate","TessMonitorDelete","TessMonitorGetCancelThis","TessMonitorGetProgress","TessMonitorSetCancelFunc","TessMonitorSetCancelThis","TessMonitorSetDeadlineMSecs","TessMonitorSetProgressFunc","TessMutableIterator","TessOcrEngineMode","TessOcrEngineMode_OEM_DEFAULT","TessOcrEngineMode_OEM_LSTM_ONLY","TessOcrEngineMode_OEM_TESSERACT_LSTM_COMBINED","TessOcrEngineMode_OEM_TESSERACT_ONLY","TessOrientation","TessOrientation_ORIENTATION_PAGE_DOWN","TessOrientation_ORIENTATION_PAGE_LEFT","TessOrientation_ORIENTATION_PAGE_RIGHT","TessOrientation_ORIENTATION_PAGE_UP","TessPDFRendererCreate","TessPageIterator","TessPageIteratorBaseline","TessPageIteratorBegin","TessPageIteratorBlockType","TessPageIteratorBoundingBox","TessPageIteratorCopy","TessPageIteratorDelete","TessPageIteratorGetBinaryImage","TessPageIteratorGetImage","TessPageIteratorIsAtBeginningOf","TessPageIteratorIsAtFinalElement","TessPageIteratorLevel","TessPageIteratorLevel_RIL_BLOCK","TessPageIteratorLevel_RIL_PARA","TessPageIteratorLevel_RIL_SYMBOL","TessPageIteratorLevel_RIL_TEXTLINE","TessPageIteratorLevel_RIL_WORD","TessPageIteratorNext","TessPageIteratorOrientation","TessPageIteratorParagraphInfo","TessPageSegMode","TessPageSegMode_PSM_AUTO","TessPageSegMode_PSM_AUTO_ONLY","TessPageSegMode_PSM_AUTO_OSD","TessPageSegMode_PSM_CIRCLE_WORD","TessPageSegMode_PSM_COUNT","TessPageSegMode_PSM_OSD_ONLY","TessPageSegMode_PSM_RAW_LINE","TessPageSegMode_PSM_SINGLE_BLOCK","TessPageSegMode_PSM_SINGLE_BLOCK_VERT_TEXT","TessPageSegMode_PSM_SINGLE_CHAR","TessPageSegMode_PSM_SINGLE_COLUMN","TessPageSegMode_PSM_SINGLE_LINE","TessPageSegMode_PSM_SINGLE_WORD","TessPageSegMode_PSM_SPARSE_TEXT","TessPageSegMode_PSM_SPARSE_TEXT_OSD","TessParagraphJustification","TessParagraphJustification_JUSTIFICATION_CENTER","TessParagraphJustification_JUSTIFICATION_LEFT","TessParagraphJustification_JUSTIFICATION_RIGHT","TessParagraphJustification_JUSTIFICATION_UNKNOWN","TessPolyBlockType","TessPolyBlockType_PT_CAPTION_TEXT","TessPolyBlockType_PT_COUNT","TessPolyBlockType_PT_EQUATION","TessPolyBlockType_PT_FLOWING_IMAGE","TessPolyBlockType_PT_FLOWING_TEXT","TessPolyBlockType_PT_HEADING_IMAGE","TessPolyBlockType_PT_HEADING_TEXT","TessPolyBlockType_PT_HORZ_LINE","TessPolyBlockType_PT_INLINE_EQUATION","TessPolyBlockType_PT_NOISE","TessPolyBlockType_PT_PULLOUT_IMAGE","TessPolyBlockType_PT_PULLOUT_TEXT","TessPolyBlockType_PT_TABLE","TessPolyBlockType_PT_UNKNOWN","TessPolyBlockType_PT_VERTICAL_TEXT","TessPolyBlockType_PT_VERT_LINE","TessProgressFunc","TessResultIterator","TessResultIteratorConfidence","TessResultIteratorCopy","TessResultIteratorDelete","TessResultIteratorGetChoiceIterator","TessResultIteratorGetPageIterator","TessResultIteratorGetPageIteratorConst","TessResultIteratorGetUTF8Text","TessResultIteratorNext","TessResultIteratorSymbolIsDropcap","TessResultIteratorSymbolIsSubscript","TessResultIteratorSymbolIsSuperscript","TessResultIteratorWordFontAttributes","TessResultIteratorWordIsFromDictionary","TessResultIteratorWordIsNumeric","TessResultIteratorWordRecognitionLanguage","TessResultRenderer","TessResultRendererAddImage","TessResultRendererBeginDocument","TessResultRendererEndDocument","TessResultRendererExtention","TessResultRendererImageNum","TessResultRendererInsert","TessResultRendererNext","TessResultRendererTitle","TessTextRendererCreate","TessTextlineOrder","TessTextlineOrder_TEXTLINE_ORDER_LEFT_TO_RIGHT","TessTextlineOrder_TEXTLINE_ORDER_RIGHT_TO_LEFT","TessTextlineOrder_TEXTLINE_ORDER_TOP_TO_BOTTOM","TessTsvRendererCreate","TessUnlvRendererCreate","TessVersion","TessWordStrBoxRendererCreate","TessWritingDirection","TessWritingDirection_WRITING_DIRECTION_LEFT_TO_RIGHT","TessWritingDirection_WRITING_DIRECTION_RIGHT_TO_LEFT","TessWritingDirection_WRITING_DIRECTION_TOP_TO_BOTTOM","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","UNDEF","UNIX_PATH_SEPCHAR","USE_BMPIO","USE_INLINE_ACCESSORS","USE_JP2KHEADER","USE_PDFIO","USE_PNMIO","USE_PSIO","WCONTINUED","WEXITED","WINT_MAX","WINT_MIN","WIN_PATH_SEPCHAR","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_STDIO_LIM_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_G_fpos64_t","_G_fpos_t","_IOFBF","_IOLBF","_IONBF","_IO_EOF_SEEN","_IO_ERR_SEEN","_IO_FILE","_IO_USER_LOCK","_IO_backup_base","_IO_buf_base","_IO_buf_end","_IO_codecvt","_IO_lock_t","_IO_marker","_IO_read_base","_IO_read_end","_IO_read_ptr","_IO_save_base","_IO_save_end","_IO_wide_data","_IO_write_base","_IO_write_end","_IO_write_ptr","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_STDIO_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__ENUM_IDTYPE_T","__FD_SETSIZE","__FD_ZERO_STOS","__FILE","__FILE_defined","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__LITTLE_ENDIAN","__LONG_DOUBLE_USES_FLOAT128","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","____FILE_defined","_____fpos64_t_defined","_____fpos_t_defined","____mbstate_t_defined","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__bindgen_anon_1","__bindgen_anon_2","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__count","__ctype_get_mb_cur_max","__cur_writer","__daddr_t","__data","__data","__data","__dev_t","__elision","__fd_mask","__fds_bits","__flags","__fpos64_t","__fpos_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g1_start32","__g_refs","__g_signals","__g_size","__getdelim","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__have_pthread_attr_t","__high","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__lock","__loff_t","__low","__low","__mbstate_t","__mbstate_t__bindgen_ty_1","__mode_t","__next","__next","__nlink_t","__nusers","__off64_t","__off_t","__old_x","__overflow","__owner","__pad1","__pad2","__pad3","__pad4","__pad5","__pid_t","__pos","__pos","__prev","__pthread_cond_s","__pthread_cond_s__bindgen_ty_1","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__pthread_cond_s__bindgen_ty_2","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__state","__state","__struct_FILE_defined","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uflow","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__value","__wch","__wchb","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__wseq32","__x","_bindgen_ty_1","_bindgen_ty_10","_bindgen_ty_11","_bindgen_ty_12","_bindgen_ty_13","_bindgen_ty_14","_bindgen_ty_15","_bindgen_ty_16","_bindgen_ty_17","_bindgen_ty_18","_bindgen_ty_19","_bindgen_ty_2","_bindgen_ty_20","_bindgen_ty_21","_bindgen_ty_22","_bindgen_ty_23","_bindgen_ty_24","_bindgen_ty_25","_bindgen_ty_26","_bindgen_ty_27","_bindgen_ty_28","_bindgen_ty_29","_bindgen_ty_3","_bindgen_ty_30","_bindgen_ty_31","_bindgen_ty_32","_bindgen_ty_33","_bindgen_ty_34","_bindgen_ty_35","_bindgen_ty_36","_bindgen_ty_37","_bindgen_ty_38","_bindgen_ty_39","_bindgen_ty_4","_bindgen_ty_40","_bindgen_ty_41","_bindgen_ty_42","_bindgen_ty_43","_bindgen_ty_44","_bindgen_ty_45","_bindgen_ty_46","_bindgen_ty_47","_bindgen_ty_48","_bindgen_ty_49","_bindgen_ty_5","_bindgen_ty_50","_bindgen_ty_51","_bindgen_ty_52","_bindgen_ty_53","_bindgen_ty_54","_bindgen_ty_55","_bindgen_ty_56","_bindgen_ty_57","_bindgen_ty_58","_bindgen_ty_59","_bindgen_ty_6","_bindgen_ty_60","_bindgen_ty_61","_bindgen_ty_62","_bindgen_ty_63","_bindgen_ty_64","_bindgen_ty_65","_bindgen_ty_66","_bindgen_ty_67","_bindgen_ty_68","_bindgen_ty_69","_bindgen_ty_7","_bindgen_ty_70","_bindgen_ty_71","_bindgen_ty_72","_bindgen_ty_73","_bindgen_ty_74","_bindgen_ty_75","_bindgen_ty_76","_bindgen_ty_77","_bindgen_ty_78","_bindgen_ty_79","_bindgen_ty_8","_bindgen_ty_80","_bindgen_ty_81","_bindgen_ty_82","_bindgen_ty_83","_bindgen_ty_84","_bindgen_ty_85","_bindgen_ty_86","_bindgen_ty_87","_bindgen_ty_88","_bindgen_ty_89","_bindgen_ty_9","_bindgen_ty_90","_bindgen_ty_91","_bindgen_ty_92","_bindgen_ty_93","_bindgen_ty_94","_chain","_codecvt","_cur_column","_fileno","_flags","_flags2","_freeres_buf","_freeres_list","_lock","_markers","_mode","_offset","_old_offset","_shortbuf","_unused2","_vtable_offset","_wide_data","a64l","abort","abs","addColorizedGrayToCmap","adjacentOnPixelInRaster","affineInvertXform","affineXformPt","affineXformSampledPt","aligned_alloc","alloc_fn","alloca","alpha","amapGetCountForColor","appendSubdirs","applyCubicFit","applyLinearFit","applyQuadraticFit","applyQuarticFit","array","array","array","array","array","array","array","array","array","arrayFindEachSequence","arrayFindSequence","arrayReplaceEachSequence","arraysize","at_quick_exit","atexit","atof","atoi","atol","atoll","auxstack","ave_done","barcodeDispatchDecoder","barcodeFormatIsSupported","baseindex","baseline1","baseline2","baseline3","baselinetab","bbufferCreate","bbufferDestroy","bbufferDestroyAndSaveData","bbufferExtendArray","bbufferRead","bbufferReadStream","bbufferWrite","bbufferWriteStream","beta","bilinearXformPt","bilinearXformSampledPt","blkcnt_t","blksize_t","blue","bmf","bmfCreate","bmfDestroy","bmfGetBaseline","bmfGetLineStrings","bmfGetPix","bmfGetStringWidth","bmfGetWidth","bmfGetWordWidths","bmf_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxAdjustSides","boxBoundingRegion","boxChangeRefcount","boxClipToRectangle","boxClipToRectangleParams","boxClone","boxCompareSize","boxContains","boxContainsPt","boxConvertToPta","boxCopy","boxCreate","boxCreateValid","boxDestroy","boxEqual","boxGetCenter","boxGetGeometry","boxGetRefcount","boxGetSideLocations","boxIntersectByLine","boxIntersects","boxIsValid","boxOverlapArea","boxOverlapDistance","boxOverlapFraction","boxOverlapRegion","boxPrintStreamInfo","boxRelocateOneSide","boxRotateOrth","boxSeparationDistance","boxSetGeometry","boxSetSide","boxSetSideLocations","boxSimilar","boxTransform","boxTransformOrdered","box_","boxa","boxa","boxa","boxa","boxa","boxa","boxaAddBox","boxaAdjustBoxSides","boxaAdjustHeightToTarget","boxaAdjustSides","boxaAdjustWidthToTarget","boxaAffineTransform","boxaBinSort","boxaClear","boxaClipToBox","boxaCombineOverlaps","boxaCombineOverlapsInPair","boxaCompareRegions","boxaConstrainSize","boxaContainedInBox","boxaContainedInBoxCount","boxaContainedInBoxa","boxaConvertToPta","boxaCopy","boxaCreate","boxaDestroy","boxaDisplayTiled","boxaEncapsulateAligned","boxaEqual","boxaExtendArray","boxaExtendArrayToSize","boxaExtractAsNuma","boxaExtractAsPta","boxaExtractCorners","boxaExtractSortedPattern","boxaFillSequence","boxaFindInvalidBoxes","boxaFindNearestBoxes","boxaGetArea","boxaGetAverageSize","boxaGetBox","boxaGetBoxGeometry","boxaGetCount","boxaGetCoverage","boxaGetExtent","boxaGetMedianVals","boxaGetNearestByDirection","boxaGetNearestToLine","boxaGetNearestToPt","boxaGetRankVals","boxaGetSizes","boxaGetValidBox","boxaGetValidCount","boxaGetWhiteblocks","boxaHandleOverlaps","boxaInitFull","boxaInsertBox","boxaIntersectsBox","boxaIntersectsBoxCount","boxaIsFull","boxaJoin","boxaLocationRange","boxaMakeAreaIndicator","boxaMakeSizeIndicator","boxaMakeWHRatioIndicator","boxaMedianDimensions","boxaMergeEvenOdd","boxaModifyWithBoxa","boxaPermutePseudorandom","boxaPermuteRandom","boxaPlotSides","boxaPlotSizes","boxaPruneSortedOnOverlap","boxaRead","boxaReadMem","boxaReadStream","boxaReconcileAllByMedian","boxaReconcileEvenOddHeight","boxaReconcilePairWidth","boxaReconcileSidesByMedian","boxaReconcileSizeByMedian","boxaRemoveBox","boxaRemoveBoxAndSave","boxaReplaceBox","boxaRotate","boxaRotateOrth","boxaSaveValid","boxaScale","boxaSelectByArea","boxaSelectBySize","boxaSelectByWHRatio","boxaSelectLargeULBox","boxaSelectRange","boxaSelectWithIndicator","boxaSetSide","boxaShiftWithPta","boxaSimilar","boxaSizeConsistency1","boxaSizeConsistency2","boxaSizeRange","boxaSizeVariation","boxaSmoothSequenceMedian","boxaSort","boxaSort2d","boxaSort2dByIndex","boxaSortByIndex","boxaSplitEvenOdd","boxaSwapBoxes","boxaTransform","boxaTransformOrdered","boxaTranslate","boxaWindowedMedian","boxaWrite","boxaWriteDebug","boxaWriteMem","boxaWriteStderr","boxaWriteStream","boxaaAddBox","boxaaAddBoxa","boxaaAlignBox","boxaaCopy","boxaaCreate","boxaaDestroy","boxaaDisplay","boxaaExtendArray","boxaaExtendArrayToSize","boxaaExtendWithInit","boxaaFlattenAligned","boxaaFlattenToBoxa","boxaaGetBox","boxaaGetBoxCount","boxaaGetBoxa","boxaaGetCount","boxaaGetExtent","boxaaInitFull","boxaaInsertBoxa","boxaaJoin","boxaaQuadtreeRegions","boxaaRead","boxaaReadFromFiles","boxaaReadMem","boxaaReadStream","boxaaRemoveBoxa","boxaaReplaceBoxa","boxaaSelectRange","boxaaSizeRange","boxaaTranspose","boxaaWrite","boxaaWriteMem","boxaaWriteStream","bps","bsearch","caddr_t","callSystemDebug","calloc","ccb","ccbCreate","ccbDestroy","ccbaAddCcb","ccbaCreate","ccbaDestroy","ccbaDisplayBorder","ccbaDisplayImage1","ccbaDisplayImage2","ccbaDisplaySPBorder","ccbaGenerateGlobalLocs","ccbaGenerateSPGlobalLocs","ccbaGenerateSinglePath","ccbaGenerateStepChains","ccbaGetCcb","ccbaGetCount","ccbaRead","ccbaReadStream","ccbaStepChainsToPixCoords","ccbaWrite","ccbaWriteSVG","ccbaWriteSVGString","ccbaWriteStream","centtab","changeFormatForMissingLib","charset_size","charset_type","check_columns","cidConvertToPdfData","cida","clearenv","clearerr","clearerr_unlocked","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmapEqual","cmapdata85","cmapdatahex","cmapflag","cmddata","cmdname","color","colormap","compareTilesByHisto","components","composeRGBAPixel","composeRGBPixel","comptype","concatenatePdf","concatenatePdfToData","convertFilesFittedToPS","convertFilesTo1bpp","convertFilesToPS","convertFilesToPdf","convertFlateToPS","convertFlateToPSEmbed","convertG4ToPS","convertG4ToPSEmbed","convertGrayCodeToInt","convertHSVToRGB","convertImageDataToPdf","convertImageDataToPdfData","convertIntToGrayCode","convertJpegToPS","convertJpegToPSEmbed","convertLABToRGB","convertLABToXYZ","convertNumberedMasksToBoxaa","convertOnBigEnd16","convertOnBigEnd32","convertOnLittleEnd16","convertOnLittleEnd32","convertPtaLineTo4cc","convertRGBToHSV","convertRGBToLAB","convertRGBToXYZ","convertRGBToYUV","convertSegmentedFilesToPdf","convertSegmentedPagesToPS","convertSepCharsInPath","convertSortedToNumberedPathnames","convertTiffMultipageToPS","convertTiffMultipageToPdf","convertToNUpFiles","convertToNUpPixa","convertToPSEmbed","convertToPdf","convertToPdfData","convertToPdfDataSegmented","convertToPdfSegmented","convertUnscaledFilesToPdf","convertUnscaledToPdfData","convertXYZToLAB","convertXYZToRGB","convertYUVToRGB","counta","create2dFloatArray","create2dIntArray","createMatrix2dRotate","createMatrix2dScale","createMatrix2dTranslate","ctermid","current","cx","cx","cy","cy","d","d","daddr_t","dahash","data","data","data","data","data","data","data","data","data","data85","datacomp","datanames","dealloc_fn","debug","debug","decodeAscii85","decodeBase64","delx","delx","delya","depth","descr","dev_t","dewa","dewarp","dewarpBuildLineModel","dewarpBuildPageModel","dewarpCreate","dewarpCreateRef","dewarpDebug","dewarpDestroy","dewarpFindHorizDisparity","dewarpFindHorizSlopeDisparity","dewarpFindVertDisparity","dewarpGetTextlineCenters","dewarpMinimize","dewarpPopulateFullRes","dewarpRead","dewarpReadMem","dewarpReadStream","dewarpRemoveShortLines","dewarpShowResults","dewarpSinglePage","dewarpSinglePageInit","dewarpSinglePageRun","dewarpWrite","dewarpWriteMem","dewarpWriteStream","dewarpaApplyDisparity","dewarpaApplyDisparityBoxa","dewarpaCreate","dewarpaCreateFromPixacomp","dewarpaDestroy","dewarpaDestroyDewarp","dewarpaGetDewarp","dewarpaInfo","dewarpaInsertDewarp","dewarpaInsertRefModels","dewarpaListPages","dewarpaModelStats","dewarpaModelStatus","dewarpaRead","dewarpaReadMem","dewarpaReadStream","dewarpaRestoreModels","dewarpaSetCheckColumns","dewarpaSetCurvatures","dewarpaSetMaxDistance","dewarpaSetValidModels","dewarpaShowArrays","dewarpaStripRefModels","dewarpaUseBothArrays","dewarpaWrite","dewarpaWriteMem","dewarpaWriteStream","dewarpcache","did","direction","directory","display","displayHSVColorRange","ditherToBinaryLineLow","div","div_t","dna","dna","dna_tochar","dpixAddMultConstant","dpixChangeRefcount","dpixClone","dpixConvertToFPix","dpixConvertToPix","dpixCopy","dpixCopyResolution","dpixCreate","dpixCreateTemplate","dpixDestroy","dpixEndianByteSwap","dpixGetData","dpixGetDimensions","dpixGetMax","dpixGetMin","dpixGetPixel","dpixGetRefcount","dpixGetResolution","dpixGetWpl","dpixLinearCombination","dpixRead","dpixReadMem","dpixReadStream","dpixResizeImageData","dpixScaleByInteger","dpixSetAllArbitrary","dpixSetData","dpixSetDimensions","dpixSetPixel","dpixSetResolution","dpixSetWpl","dpixWrite","dpixWriteMem","dpixWriteStream","dprintf","drand48","drand48_data","drand48_r","ecvt","ecvt_r","encodeAscii85","encodeBase64","end_ptr","erand48","erand48_r","exit","extractG4DataFromFile","extractMinMaxComponent","extractNumberFromFilename","extractRGBAValues","extractRGBValues","failure","fclose","fcvt","fcvt_r","fd_mask","fd_set","fdopen","feof","feof_unlocked","ferror","ferror_unlocked","fflush","fflush_unlocked","fgetJp2kResolution","fgetJpegComment","fgetJpegResolution","fgetPngColormapInfo","fgetPngResolution","fgetc","fgetc_unlocked","fgetpos","fgets","fhmtautogen","fhmtautogen1","fhmtautogen2","fhmtgen_low_1","fileAppendString","fileConcatenate","fileCopy","fileCorruptByDeletion","fileCorruptByMutation","fileFormatIsTiff","fileReplaceBytes","fileno","fileno","fileno_unlocked","filesAreIdentical","findFileFormat","findFileFormatBuffer","findFileFormatStream","findNextLargerPrime","findTiffCompression","finished","flockfile","fmemopen","fmorphautogen","fmorphautogen1","fmorphautogen2","fmorphopgen_low_1","fmorphopgen_low_2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fnbytesInFile","fonttab","fopen","fopenReadFromMemory","fopenReadStream","fopenWriteStream","fopenWriteWinTempfile","fp","fp_offset","fpix","fpixAddBorder","fpixAddContinuedBorder","fpixAddMirroredBorder","fpixAddMultConstant","fpixAddSlopeBorder","fpixAffine","fpixAffinePta","fpixAutoRenderContours","fpixChangeRefcount","fpixClone","fpixConvertToDPix","fpixConvertToPix","fpixConvolve","fpixConvolveSep","fpixCopy","fpixCopyResolution","fpixCreate","fpixCreateTemplate","fpixDestroy","fpixDisplayMaxDynamicRange","fpixEndianByteSwap","fpixFlipLR","fpixFlipTB","fpixGetData","fpixGetDimensions","fpixGetMax","fpixGetMin","fpixGetPixel","fpixGetRefcount","fpixGetResolution","fpixGetWpl","fpixLinearCombination","fpixPrintStream","fpixProjective","fpixProjectivePta","fpixRasterop","fpixRead","fpixReadMem","fpixReadStream","fpixRemoveBorder","fpixRenderContours","fpixResizeImageData","fpixRotate180","fpixRotate90","fpixRotateOrth","fpixScaleByInteger","fpixSetAllArbitrary","fpixSetData","fpixSetDimensions","fpixSetPixel","fpixSetResolution","fpixSetWpl","fpixThresholdToPix","fpixWrite","fpixWriteMem","fpixWriteStream","fpixaAddFPix","fpixaChangeRefcount","fpixaConvertLABToRGB","fpixaConvertLABToXYZ","fpixaConvertXYZToLAB","fpixaConvertXYZToRGB","fpixaCopy","fpixaCreate","fpixaDestroy","fpixaDisplayQuadtree","fpixaGetCount","fpixaGetData","fpixaGetFPix","fpixaGetFPixDimensions","fpixaGetPixel","fpixaSetPixel","fpos_t","fprintTiffInfo","fprintf","fptr","fputc","fputc_unlocked","fputs","fread","freadHeaderJp2k","freadHeaderJpeg","freadHeaderPng","freadHeaderPnm","freadHeaderSpix","freadHeaderTiff","fread_unlocked","free","freopen","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fscanf1","fseek","fseeko","fsetpos","fsfilcnt_t","fsid_t","ftell","ftello","ftrylockfile","ftype","fullarrays","fullhdispar","fullvdispar","fullydispar","function","funlockfile","fwrite","fwrite_unlocked","gamma","gaussDistribSampling","gaussjordan","gcvt","genConstrainedNumaInRange","genPathname","genRandomIntegerInRange","generateBinaryMaze","generatePtaBox","generatePtaBoxa","generatePtaFilledCircle","generatePtaFilledSquare","generatePtaGrid","generatePtaHashBox","generatePtaHashBoxa","generatePtaLine","generatePtaLineFromPt","generatePtaPolyline","generatePtaWideLine","generatePtaaBoxa","generatePtaaHashBoxa","generateUncompressedPS","getAffineXformCoeffs","getBilinearXformCoeffs","getCompositeParameters","getCutPathForHole","getExtendedCompositeParameters","getFilenamesInDirectory","getFormatExtension","getImagelibVersions","getImpliedFileFormat","getLeptonicaVersion","getLogBase2","getMorphBorderPixelColor","getNumberedPathnamesInDirectory","getOctcubeIndexFromRGB","getProjectiveXformCoeffs","getRGBFromIndex","getResA4Page","getResLetterPage","getSortedPathnamesInDirectory","getTiffResolution","getc","getc_unlocked","getchar","getchar_unlocked","getdelim","getenv","getline","getloadavg","getsubopt","getw","gid_t","global","gp_offset","gplotAddPlot","gplotCreate","gplotDestroy","gplotGenCommandFile","gplotGenDataFiles","gplotGeneralPix1","gplotGeneralPix2","gplotGeneralPixN","gplotMakeOutput","gplotMakeOutputPix","gplotRead","gplotSetScaling","gplotSimple1","gplotSimple2","gplotSimpleN","gplotSimplePix1","gplotSimplePix2","gplotSimplePixN","gplotSimpleXY1","gplotSimpleXY2","gplotSimpleXYN","gplotWrite","gplotfileoutputs","gplotstylenames","grayHistogramsToEMD","grayInterHistogramStats","green","h","h","h","h","h","h","h","h","h","h","h","h","hasref","hsuccess","hvalid","id","id_t","idtype_t","idtype_t_P_ALL","idtype_t_P_PGID","idtype_t_P_PID","ifunc","imax","index","index","informat","init","initsize","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioFormatTest","isPngInterlaced","itype","jbAccumulateComposites","jbAddPage","jbAddPageComponents","jbAddPages","jbClasserCreate","jbClasserDestroy","jbClassifyCorrelation","jbClassifyRankHaus","jbCorrelation","jbCorrelationInit","jbCorrelationInitWithoutComponents","jbDataDestroy","jbDataRead","jbDataRender","jbDataSave","jbDataWrite","jbGetComponents","jbGetLLCorners","jbGetULCorners","jbRankHaus","jbRankHausInit","jbTemplatesFromComposites","jbWordsInTextlines","jrand48","jrand48_r","kMaxCredibleResolution","kMinCredibleResolution","kPointsPerInch","kResolutionEstimationFactor","keep_pixaa","kernelCopy","kernelCreate","kernelCreateFromFile","kernelCreateFromPix","kernelCreateFromString","kernelDestroy","kernelDisplayInPix","kernelGetElement","kernelGetMinMax","kernelGetParameters","kernelGetSum","kernelInvert","kernelNormalize","kernelRead","kernelReadStream","kernelSetElement","kernelSetOrigin","kernelWrite","kernelWriteStream","kernwidth","key","key_t","keytype","l64a","l_CIDataDestroy","l_amapCreate","l_amapDelete","l_amapDestroy","l_amapFind","l_amapGetFirst","l_amapGetLast","l_amapGetNext","l_amapGetPrev","l_amapInsert","l_amapSize","l_angleBetweenVectors","l_asetCreate","l_asetCreateFromDna","l_asetCreateFromPta","l_asetCreateFromSarray","l_asetDelete","l_asetDestroy","l_asetFind","l_asetGetFirst","l_asetGetLast","l_asetGetNext","l_asetGetPrev","l_asetInsert","l_asetSize","l_binaryCompare","l_binaryCopy","l_binaryRead","l_binaryReadSelect","l_binaryReadSelectStream","l_binaryReadStream","l_binaryWrite","l_bootnum_gen1","l_bootnum_gen2","l_bootnum_gen3","l_bootnum_gen4","l_byteaAppendData","l_byteaAppendString","l_byteaCopy","l_byteaCopyData","l_byteaCreate","l_byteaDestroy","l_byteaFindEachSequence","l_byteaGetData","l_byteaGetSize","l_byteaInitFromFile","l_byteaInitFromMem","l_byteaInitFromStream","l_byteaJoin","l_byteaSplit","l_byteaWrite","l_byteaWriteStream","l_chooseDisplayProg","l_clearDataBit","l_clearDataDibit","l_clearDataQbit","l_compressGrayHistograms","l_convertCharstrToInt","l_dnaAddNumber","l_dnaChangeRefcount","l_dnaClone","l_dnaConvertToNuma","l_dnaCopy","l_dnaCopyParameters","l_dnaCreate","l_dnaCreateFromDArray","l_dnaCreateFromIArray","l_dnaDestroy","l_dnaDiffAdjValues","l_dnaEmpty","l_dnaFindValByHash","l_dnaGetCount","l_dnaGetDArray","l_dnaGetDValue","l_dnaGetIArray","l_dnaGetIValue","l_dnaGetParameters","l_dnaGetRefcount","l_dnaHashAdd","l_dnaHashCreate","l_dnaHashCreateFromDna","l_dnaHashCreateFromPta","l_dnaHashCreateFromSarray","l_dnaHashDestroy","l_dnaHashGetCount","l_dnaHashGetDna","l_dnaHashGetTotalCount","l_dnaInsertNumber","l_dnaIntersectionByAset","l_dnaIntersectionByHash","l_dnaJoin","l_dnaMakeHistoByHash","l_dnaMakeSequence","l_dnaRead","l_dnaReadStream","l_dnaRemoveDupsByAset","l_dnaRemoveDupsByHash","l_dnaRemoveNumber","l_dnaReplaceNumber","l_dnaSetCount","l_dnaSetParameters","l_dnaSetValue","l_dnaShiftValue","l_dnaUnionByAset","l_dnaWrite","l_dnaWriteStream","l_dnaaAddDna","l_dnaaAddNumber","l_dnaaCreate","l_dnaaCreateFull","l_dnaaDestroy","l_dnaaFlattenToDna","l_dnaaGetCount","l_dnaaGetDna","l_dnaaGetDnaCount","l_dnaaGetNumberCount","l_dnaaGetValue","l_dnaaRead","l_dnaaReadStream","l_dnaaReplaceDna","l_dnaaTruncate","l_dnaaWrite","l_dnaaWriteStream","l_fileDisplay","l_float32","l_float64","l_generateCIData","l_generateCIDataForPdf","l_generateFlateData","l_generateFlateDataPdf","l_generateG4Data","l_generateJpegData","l_generateJpegDataMem","l_getCurrentTime","l_getDataBit","l_getDataByte","l_getDataDibit","l_getDataFourBytes","l_getDataQbit","l_getDataTwoBytes","l_getFormattedDate","l_getStructStrFromFile","l_hashFloat64ToUint64","l_hashPtToUint64","l_hashStringToUint64","l_int16","l_int32","l_int64","l_int8","l_intptr_t","l_jpegSetQuality","l_makeTempFilename","l_ok","l_pdfSetDateAndVersion","l_pdfSetG4ImageMask","l_pngSetReadStrip16To8","l_productMat2","l_productMat3","l_productMat4","l_productMatVec","l_psWriteBoundingBox","l_rbtreeCreate","l_rbtreeDelete","l_rbtreeDestroy","l_rbtreeGetCount","l_rbtreeGetFirst","l_rbtreeGetLast","l_rbtreeGetNext","l_rbtreeGetPrev","l_rbtreeInsert","l_rbtreeLookup","l_rbtreePrint","l_setAlphaMaskBorder","l_setConvolveSampling","l_setDataBit","l_setDataBitVal","l_setDataByte","l_setDataDibit","l_setDataFourBytes","l_setDataQbit","l_setDataTwoBytes","l_setNeutralBoostVal","l_uint16","l_uint32","l_uint64","l_uint8","l_uintptr_t","l_uncompressGrayHistograms","labs","latticeh","latticew","lcong48","lcong48_r","ldiv","ldiv_t","left","leftcurv","leftslope","leptSetStderrHandler","lept_calloc","lept_cp","lept_direxists","lept_fclose","lept_fopen","lept_free","lept_isPrime","lept_mkdir","lept_mv","lept_rm","lept_rm_match","lept_rmdir","lept_rmfile","lept_roundftoi","lept_stderr","lheapAdd","lheapCreate","lheapDestroy","lheapGetCount","lheapGetElement","lheapPrint","lheapRemove","lheapSort","lheapSortStrictOrder","lineEndianByteSwap","linearInterpolatePixelColor","linearInterpolatePixelFloat","linearInterpolatePixelGray","linearScaleRGBVal","lineheight","linelab32","linem1","lines8","linet1","linew","links","listAddToHead","listAddToTail","listDestroy","listFindElement","listFindTail","listGetCount","listInsertAfter","listInsertBefore","listJoin","listRemoveElement","listRemoveFromHead","listRemoveFromTail","listReverse","llabs","lldiv","lldiv_t","local","locatePtRadially","locs","loff_t","logScaleRGBVal","lqueueAdd","lqueueCreate","lqueueDestroy","lqueueGetCount","lqueuePrint","lqueueRemove","lrand48","lrand48_r","lstackAdd","lstackCreate","lstackDestroy","lstackGetCount","lstackPrint","lstackRemove","lut","makeCheckerboardCornerSela","makeDoGKernel","makeFlatKernel","makeGaussianKernel","makeGaussianKernelSep","makeGrayQuantIndexTable","makeGrayQuantTableArb","makeLogBase2Tab","makeMSBitLocTab","makeMosaicStrips","makeOrientDecision","makePixelCentroidTab8","makePixelSumTab8","makePlotPtaFromNuma","makePlotPtaFromNumaGen","makeRGBIndexTables","makeRGBToIndexTables","makeRangeKernel","makeSubsampleTab2x","makeTempDirname","malloc","max_diff_edgecurv","max_diff_linecurv","max_edgecurv","max_edgeslope","max_ht_ratio","max_linecurv","max_splith","max_wh_ratio","maxarraysize","maxcurv","maxdist","maxheight","maxheight_u","maxpage","maxwidth","maxwidth","maxwidth_u","maxyshift","mblen","mbstowcs","mbtowc","mediabox","method","min_diff_linecurv","min_nopad","min_splitw","mincurv","mindepth","minheight_u","minisblack","minlines","minlines","minwidth","minwidth_u","mkdtemp","mkstemp","mkstemps","mktemp","mode","mode_t","modelsready","modifyTrailingSlash","morphSequenceVerify","mrand48","mrand48_r","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","naarea","naasum","naasum_u","naclass","naclass","nacomps","nactual","nacurves","nadely","nadely_r","nafgt","naindex","nalevels","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","name","namh","namidys","namodels","namoment","napage","napage","napages","narray","nasample","nasample_r","nascore","nascore","nascore_r","nash","nasi","nasum","nasum","nasum_u","natempl","natempl_r","nawidth","nawidth","nawidth_r","naxloc","naxloc","naxloc_r","nayloc","nbuckets","nbytes","nbytes85","nbytesInFile","nbytescomp","nclass","nclass","ncmap","ncolors","nelem","next","nextOnPixelInRaster","nguess","nhead","nlines","nlink_t","nother","npages","npages","nplots","nrand48","nrand48_r","nseeds","num","num_samples","numa","numaAddBorder","numaAddNumber","numaAddSpecifiedBorder","numaAddToNumber","numaArithOp","numaBinSort","numaChangeRefcount","numaChooseSortType","numaClipToInterval","numaClone","numaClose","numaContrastTRC","numaConvertToDna","numaConvertToInt","numaConvertToPta1","numaConvertToPta2","numaConvertToSarray","numaCopy","numaCopyParameters","numaCountNonzeroRuns","numaCountReversals","numaCreate","numaCreateFromFArray","numaCreateFromIArray","numaCreateFromString","numaCrossingsByPeaks","numaCrossingsByThreshold","numaDestroy","numaDifferentiateInterval","numaDilate","numaDiscretizeRankAndIntensity","numaEarthMoverDistance","numaEmpty","numaEqualizeTRC","numaErode","numaEvalBestHaarParameters","numaEvalHaarSum","numaFindExtrema","numaFindLocForThreshold","numaFindPeaks","numaFitMax","numaGammaTRC","numaGetBinSortIndex","numaGetBinnedMedian","numaGetCount","numaGetCountRelativeToZero","numaGetEdgeValues","numaGetFArray","numaGetFValue","numaGetHistogramStats","numaGetHistogramStatsOnInterval","numaGetIArray","numaGetIValue","numaGetMax","numaGetMeanDevFromMedian","numaGetMedian","numaGetMedianDevFromMedian","numaGetMin","numaGetMode","numaGetNonzeroRange","numaGetParameters","numaGetPartialSums","numaGetRankBinValues","numaGetRankValue","numaGetRefcount","numaGetSortIndex","numaGetSpanValues","numaGetStatsUsingHistogram","numaGetSum","numaGetSumOnInterval","numaHasOnlyIntegers","numaHistogramGetRankFromVal","numaHistogramGetValFromRank","numaInsertNumber","numaIntegrateInterval","numaInterpolateArbxInterval","numaInterpolateArbxVal","numaInterpolateEqxInterval","numaInterpolateEqxVal","numaInvert","numaInvertMap","numaIsSorted","numaJoin","numaLogicalOp","numaLowPassIntervals","numaMakeAbsValue","numaMakeConstant","numaMakeDelta","numaMakeHistogram","numaMakeHistogramAuto","numaMakeHistogramClipped","numaMakeRankFromHistogram","numaMakeSequence","numaMakeThresholdIndicator","numaNormalizeHistogram","numaOpen","numaPseudorandomSequence","numaQuantizeCrossingsByWidth","numaQuantizeCrossingsByWindow","numaRandomPermutation","numaRead","numaReadMem","numaReadStream","numaRebinHistogram","numaRemoveBorder","numaRemoveNumber","numaReplaceNumber","numaReverse","numaSelectCrossingThreshold","numaSetCount","numaSetParameters","numaSetValue","numaShiftValue","numaSimilar","numaSimpleStats","numaSort","numaSortAutoSelect","numaSortByIndex","numaSortGeneral","numaSortIndexAutoSelect","numaSortPair","numaSplitDistribution","numaSubsample","numaThresholdEdges","numaTransform","numaUniformSampling","numaWindowedMean","numaWindowedMeanSquare","numaWindowedMedian","numaWindowedStats","numaWindowedVariance","numaWrite","numaWriteDebug","numaWriteMem","numaWriteStderr","numaWriteStream","numaaAddNuma","numaaAddNumber","numaaCompareImagesByBoxes","numaaCreate","numaaCreateFull","numaaDestroy","numaaFlattenToNuma","numaaGetCount","numaaGetNuma","numaaGetNumaCount","numaaGetNumberCount","numaaGetPtrArray","numaaGetValue","numaaJoin","numaaRead","numaaReadMem","numaaReadStream","numaaReplaceNuma","numaaTruncate","numaaWrite","numaaWriteMem","numaaWriteStream","nwritten","nx","nx","ny","ny","obj1","obj2","obj3","obj4","obj5","objloc","objsize","off_t","offset","offset","on_exit","open_memstream","outformat","outname","overflow_arg_area","pageno","parent","parseForProtos","parseStringForNumbers","partifyFiles","partifyPixac","pathJoin","pclose","perror","pid_t","pix","pix","pix","pix","pix","pix","pixAbsDiffByColumn","pixAbsDiffByRow","pixAbsDiffInRect","pixAbsDiffOnLine","pixAbsDifference","pixAccumulate","pixAdaptThresholdToBinary","pixAdaptThresholdToBinaryGen","pixAddAlphaTo1bpp","pixAddAlphaToBlend","pixAddBlackOrWhiteBorder","pixAddBorder","pixAddBorderGeneral","pixAddConstantGray","pixAddContinuedBorder","pixAddGaussianNoise","pixAddGray","pixAddGrayColormap8","pixAddMinimalGrayColormap8","pixAddMirroredBorder","pixAddMixedBorder","pixAddRGB","pixAddRepeatedBorder","pixAddSingleTextblock","pixAddText","pixAddTextlines","pixAddWithIndicator","pixAffine","pixAffineColor","pixAffineGray","pixAffinePta","pixAffinePtaColor","pixAffinePtaGray","pixAffinePtaWithAlpha","pixAffineSampled","pixAffineSampledPta","pixAffineSequential","pixAlphaBlendUniform","pixAlphaIsOpaque","pixAnd","pixApplyInvBackgroundGrayMap","pixApplyInvBackgroundRGBMap","pixApplyVariableGrayMap","pixAssignToNearestColor","pixAutoPhotoinvert","pixAverageByColumn","pixAverageByRow","pixAverageInRect","pixAverageInRectRGB","pixAverageIntensityProfile","pixAverageOnLine","pixBackgroundNorm","pixBackgroundNormFlex","pixBackgroundNormGrayArray","pixBackgroundNormGrayArrayMorph","pixBackgroundNormMorph","pixBackgroundNormRGBArrays","pixBackgroundNormRGBArraysMorph","pixBackgroundNormSimple","pixBestCorrelation","pixBilateral","pixBilateralExact","pixBilateralGray","pixBilateralGrayExact","pixBilinear","pixBilinearColor","pixBilinearGray","pixBilinearPta","pixBilinearPtaColor","pixBilinearPtaGray","pixBilinearPtaWithAlpha","pixBilinearSampled","pixBilinearSampledPta","pixBlend","pixBlendBackgroundToColor","pixBlendBoxaRandom","pixBlendCmap","pixBlendColor","pixBlendColorByChannel","pixBlendGray","pixBlendGrayAdapt","pixBlendGrayInverse","pixBlendHardLight","pixBlendInRect","pixBlendMask","pixBlendWithGrayMask","pixBlockBilateralExact","pixBlockconv","pixBlockconvAccum","pixBlockconvGray","pixBlockconvGrayTile","pixBlockconvGrayUnnormalized","pixBlockconvTiled","pixBlockrank","pixBlocksum","pixCensusTransform","pixCentroid","pixCentroid8","pixChangeRefcount","pixChooseOutputFormat","pixCleanBackgroundToWhite","pixCleanupByteProcessing","pixClearAll","pixClearInRect","pixClearPixel","pixClipBoxToEdges","pixClipBoxToForeground","pixClipMasked","pixClipRectangle","pixClipRectangles","pixClipToForeground","pixClone","pixClose","pixCloseBrick","pixCloseBrickDwa","pixCloseCompBrick","pixCloseCompBrickDwa","pixCloseCompBrickExtendDwa","pixCloseGeneralized","pixCloseGray","pixCloseGray3","pixCloseSafe","pixCloseSafeBrick","pixCloseSafeCompBrick","pixColorContent","pixColorFraction","pixColorGray","pixColorGrayCmap","pixColorGrayMasked","pixColorGrayMaskedCmap","pixColorGrayRegions","pixColorGrayRegionsCmap","pixColorMagnitude","pixColorMorph","pixColorMorphSequence","pixColorSegment","pixColorSegmentClean","pixColorSegmentCluster","pixColorSegmentRemoveColors","pixColorShiftRGB","pixColorizeGray","pixColorsForQuantization","pixColumnStats","pixCombineMasked","pixCombineMaskedGeneral","pixCompareBinary","pixCompareGray","pixCompareGrayByHisto","pixCompareGrayOrRGB","pixComparePhotoRegionsByHisto","pixCompareRGB","pixCompareRankDifference","pixCompareTiled","pixCompareWithTranslation","pixComponentFunction","pixConformsToRectangle","pixConnComp","pixConnCompAreaTransform","pixConnCompBB","pixConnCompIncrAdd","pixConnCompIncrInit","pixConnCompPixa","pixConnCompTransform","pixContrastNorm","pixContrastTRC","pixContrastTRCMasked","pixConvert16To8","pixConvert1To16","pixConvert1To2","pixConvert1To2Cmap","pixConvert1To32","pixConvert1To4","pixConvert1To4Cmap","pixConvert1To8","pixConvert1To8Cmap","pixConvert24To32","pixConvert2To8","pixConvert32To16","pixConvert32To24","pixConvert32To8","pixConvert4To8","pixConvert8To16","pixConvert8To2","pixConvert8To32","pixConvert8To4","pixConvertCmapTo1","pixConvertColorToSubpixelRGB","pixConvertForPSWrap","pixConvertGrayToColormap","pixConvertGrayToColormap8","pixConvertGrayToFalseColor","pixConvertGrayToSubpixelRGB","pixConvertHSVToRGB","pixConvertLossless","pixConvertRGBToBinaryArb","pixConvertRGBToCmap","pixConvertRGBToColormap","pixConvertRGBToGray","pixConvertRGBToGrayArb","pixConvertRGBToGrayFast","pixConvertRGBToGrayMinMax","pixConvertRGBToGraySatBoost","pixConvertRGBToHSV","pixConvertRGBToHue","pixConvertRGBToLAB","pixConvertRGBToLuminance","pixConvertRGBToSaturation","pixConvertRGBToValue","pixConvertRGBToXYZ","pixConvertRGBToYUV","pixConvertTo1","pixConvertTo16","pixConvertTo1Adaptive","pixConvertTo1BySampling","pixConvertTo2","pixConvertTo32","pixConvertTo32BySampling","pixConvertTo4","pixConvertTo8","pixConvertTo8BySampling","pixConvertTo8Colormap","pixConvertTo8Or32","pixConvertToDPix","pixConvertToFPix","pixConvertToPdf","pixConvertToPdfData","pixConvertToPdfDataSegmented","pixConvertToPdfSegmented","pixConvertToSubpixelRGB","pixConvertYUVToRGB","pixConvolve","pixConvolveRGB","pixConvolveRGBSep","pixConvolveSep","pixConvolveWithBias","pixCopy","pixCopyBorder","pixCopyColormap","pixCopyDimensions","pixCopyInputFormat","pixCopyRGBComponent","pixCopyResolution","pixCopySpp","pixCopyText","pixCopyWithBoxa","pixCorrelationBinary","pixCorrelationScore","pixCorrelationScoreShifted","pixCorrelationScoreSimple","pixCorrelationScoreThresholded","pixCountArbInRect","pixCountByColumn","pixCountByRow","pixCountConnComp","pixCountPixels","pixCountPixelsByColumn","pixCountPixelsByRow","pixCountPixelsInRect","pixCountPixelsInRow","pixCountRGBColors","pixCountTextColumns","pixCreate","pixCreateFromPixcomp","pixCreateHeader","pixCreateNoInit","pixCreateRGBImage","pixCreateTemplate","pixCreateTemplateNoInit","pixCreateWithCmap","pixCropAlignedToCentroid","pixCropToMatch","pixCropToSize","pixDarkenGray","pixDecideIfPhotoImage","pixDecideIfTable","pixDecideIfText","pixDeserializeFromMemory","pixDeskew","pixDeskewBarcode","pixDeskewBoth","pixDeskewGeneral","pixDeskewLocal","pixDestroy","pixDestroyColormap","pixDilate","pixDilateBrick","pixDilateBrickDwa","pixDilateCompBrick","pixDilateCompBrickDwa","pixDilateCompBrickExtendDwa","pixDilateGray","pixDilateGray3","pixDisplay","pixDisplayColorArray","pixDisplayDiffBinary","pixDisplayHitMissSel","pixDisplayLayersRGBA","pixDisplayMatchedPattern","pixDisplayPta","pixDisplayPtaPattern","pixDisplayPtaa","pixDisplayPtaaPattern","pixDisplaySelectedPixels","pixDisplayWithTitle","pixDisplayWrite","pixDistanceFunction","pixDitherTo2bpp","pixDitherTo2bppSpec","pixDitherToBinary","pixDitherToBinarySpec","pixDrawBoxa","pixDrawBoxaRandom","pixEmbedForRotation","pixEndianByteSwap","pixEndianByteSwapNew","pixEndianTwoByteSwap","pixEndianTwoByteSwapNew","pixEqual","pixEqualWithAlpha","pixEqualWithCmap","pixEqualizeTRC","pixErode","pixErodeBrick","pixErodeBrickDwa","pixErodeCompBrick","pixErodeCompBrickDwa","pixErodeCompBrickExtendDwa","pixErodeGray","pixErodeGray3","pixEstimateBackground","pixExpandBinaryPower2","pixExpandBinaryReplicate","pixExpandReplicate","pixExtendByReplication","pixExtractBarcodeCrossings","pixExtractBarcodeWidths1","pixExtractBarcodeWidths2","pixExtractBarcodes","pixExtractBorderConnComps","pixExtractBoundary","pixExtractData","pixExtractOnLine","pixExtractRawTextlines","pixExtractTextlines","pixFHMTGen_1","pixFMorphopGen_1","pixFMorphopGen_2","pixFadeWithGray","pixFastTophat","pixFewColorsMedianCutQuantMixed","pixFewColorsOctcubeQuant1","pixFewColorsOctcubeQuant2","pixFewColorsOctcubeQuantMixed","pixFillBgFromBorder","pixFillClosedBorders","pixFillHolesToBoundingRect","pixFillMapHoles","pixFillPolygon","pixFilterComponentBySize","pixFinalAccumulate","pixFinalAccumulateThreshold","pixFindAreaFraction","pixFindAreaFractionMasked","pixFindAreaPerimRatio","pixFindBaselines","pixFindCheckerboardCorners","pixFindColorRegions","pixFindCornerPixels","pixFindDifferentialSquareSum","pixFindEqualValues","pixFindHistoPeaksHSV","pixFindHorizontalRuns","pixFindLargeRectangles","pixFindLargestRectangle","pixFindMaxHorizontalRunOnLine","pixFindMaxRuns","pixFindMaxVerticalRunOnLine","pixFindNormalizedSquareSum","pixFindOverlapFraction","pixFindPageForeground","pixFindPerimSizeRatio","pixFindPerimToAreaRatio","pixFindRectangleComps","pixFindRectangleInCC","pixFindRepCloseTile","pixFindSkew","pixFindSkewAndDeskew","pixFindSkewOrthogonalRange","pixFindSkewSweep","pixFindSkewSweepAndSearch","pixFindSkewSweepAndSearchScore","pixFindSkewSweepAndSearchScorePivot","pixFindStrokeLength","pixFindStrokeWidth","pixFindThreshFgExtent","pixFindVerticalRuns","pixFindWordAndCharacterBoxes","pixFixedOctcubeQuant256","pixFixedOctcubeQuantGenRGB","pixFlipFHMTGen","pixFlipLR","pixFlipPixel","pixFlipTB","pixForegroundFraction","pixFractionFgInMask","pixFreeData","pixGammaTRC","pixGammaTRCMasked","pixGammaTRCWithAlpha","pixGenHalftoneMask","pixGenPhotoHistos","pixGenTextblockMask","pixGenTextlineMask","pixGenerateCIData","pixGenerateFromPta","pixGenerateHalftoneMask","pixGenerateMaskByBand","pixGenerateMaskByBand32","pixGenerateMaskByDiscr32","pixGenerateMaskByValue","pixGeneratePtaBoundary","pixGenerateSelBoundary","pixGenerateSelRandom","pixGenerateSelWithRuns","pixGetAllCCBorders","pixGetAutoFormat","pixGetAverageMasked","pixGetAverageMaskedRGB","pixGetAverageTiled","pixGetAverageTiledRGB","pixGetBackgroundGrayMap","pixGetBackgroundGrayMapMorph","pixGetBackgroundRGBMap","pixGetBackgroundRGBMapMorph","pixGetBinnedColor","pixGetBinnedComponentRange","pixGetBlackOrWhiteVal","pixGetCmapHistogram","pixGetCmapHistogramInRect","pixGetCmapHistogramMasked","pixGetColorAmapHistogram","pixGetColorHistogram","pixGetColorHistogramMasked","pixGetColorNearMaskBoundary","pixGetColormap","pixGetColumnStats","pixGetData","pixGetDepth","pixGetDifferenceHistogram","pixGetDifferenceStats","pixGetDimensions","pixGetEdgeProfile","pixGetExtremeValue","pixGetGrayHistogram","pixGetGrayHistogramInRect","pixGetGrayHistogramMasked","pixGetGrayHistogramTiled","pixGetHeight","pixGetInputFormat","pixGetInvBackgroundMap","pixGetLastOffPixelInRun","pixGetLastOnPixelInRun","pixGetLinePtrs","pixGetLocalSkewAngles","pixGetLocalSkewTransform","pixGetMaxValueInRect","pixGetMomentByColumn","pixGetMostPopulatedColors","pixGetOuterBorder","pixGetOuterBordersPtaa","pixGetPSNR","pixGetPerceptualDiff","pixGetPixel","pixGetPixelAverage","pixGetPixelStats","pixGetRGBComponent","pixGetRGBComponentCmap","pixGetRGBHistogram","pixGetRGBLine","pixGetRGBPixel","pixGetRandomPixel","pixGetRangeValues","pixGetRankColorArray","pixGetRankValue","pixGetRankValueMasked","pixGetRankValueMaskedRGB","pixGetRasterData","pixGetRefcount","pixGetRegionsBinary","pixGetResolution","pixGetRowStats","pixGetRunCentersOnLine","pixGetRunsOnLine","pixGetSortedNeighborValues","pixGetSpp","pixGetText","pixGetTileCount","pixGetWidth","pixGetWordBoxesInTextlines","pixGetWordsInTextlines","pixGetWpl","pixGetXRes","pixGetYRes","pixGlobalNormNoSatRGB","pixGlobalNormRGB","pixGrayMorphSequence","pixGrayQuantFromCmap","pixGrayQuantFromHisto","pixHDome","pixHMT","pixHMTDwa_1","pixHShear","pixHShearCenter","pixHShearCorner","pixHShearIP","pixHShearLI","pixHalfEdgeByBandpass","pixHasHighlightRed","pixHaustest","pixHolesByFilling","pixInitAccumulate","pixIntersectionOfMorphOps","pixInvert","pixItalicWords","pixLinearEdgeFade","pixLinearMapToTargetColor","pixLinearTRCTiled","pixLocToColorTransform","pixLocalExtrema","pixLocateBarcodes","pixMakeAlphaFromMask","pixMakeArbMaskFromRGB","pixMakeColorSquare","pixMakeCoveringOfRectangles","pixMakeFrameMask","pixMakeHistoHS","pixMakeHistoHV","pixMakeHistoSV","pixMakeMaskFromLUT","pixMakeMaskFromVal","pixMakeRangeMaskHS","pixMakeRangeMaskHV","pixMakeRangeMaskSV","pixMakeSymmetricMask","pixMaskBoxa","pixMaskConnComp","pixMaskOverColorPixels","pixMaskOverColorRange","pixMaskOverGrayPixels","pixMaskedThreshOnBackgroundNorm","pixMaxDynamicRange","pixMaxDynamicRangeRGB","pixMeanInRectangle","pixMeanSquareAccum","pixMeasureEdgeSmoothness","pixMeasureSaturation","pixMedianCutHisto","pixMedianCutQuant","pixMedianCutQuantGeneral","pixMedianCutQuantMixed","pixMedianFilter","pixMinMaxNearLine","pixMinMaxTiles","pixMinOrMax","pixMirrorDetect","pixMirrorDetectDwa","pixMirroredTiling","pixModifyBrightness","pixModifyHue","pixModifySaturation","pixModifyStrokeWidth","pixMorphCompSequence","pixMorphCompSequenceDwa","pixMorphDwa_1","pixMorphDwa_2","pixMorphGradient","pixMorphSequence","pixMorphSequenceByComponent","pixMorphSequenceByRegion","pixMorphSequenceDwa","pixMorphSequenceMasked","pixMosaicColorShiftRGB","pixMultConstAccumulate","pixMultConstantColor","pixMultConstantGray","pixMultMatrixColor","pixMultiplyByColor","pixMultiplyGray","pixNumColors","pixNumSignificantGrayColors","pixNumberOccupiedOctcubes","pixOctcubeHistogram","pixOctcubeQuantFromCmap","pixOctcubeQuantMixedWithGray","pixOctreeColorQuant","pixOctreeColorQuantGeneral","pixOctreeQuantByPopulation","pixOctreeQuantNumColors","pixOpen","pixOpenBrick","pixOpenBrickDwa","pixOpenCompBrick","pixOpenCompBrickDwa","pixOpenCompBrickExtendDwa","pixOpenGeneralized","pixOpenGray","pixOpenGray3","pixOr","pixOrientCorrect","pixOrientDetect","pixOrientDetectDwa","pixOtsuAdaptiveThreshold","pixOtsuThreshOnBackgroundNorm","pixPadToCenterCentroid","pixPaintBoxa","pixPaintBoxaRandom","pixPaintSelfThroughMask","pixPaintThroughMask","pixPlotAlongPta","pixPrepare1bpp","pixPrintStreamInfo","pixProcessBarcodes","pixProjective","pixProjectiveColor","pixProjectiveGray","pixProjectivePta","pixProjectivePtaColor","pixProjectivePtaGray","pixProjectivePtaWithAlpha","pixProjectiveSampled","pixProjectiveSampledPta","pixQuadraticVShear","pixQuadraticVShearLI","pixQuadraticVShearSampled","pixQuadtreeMean","pixQuadtreeVariance","pixQuantFromCmap","pixQuantizeIfFewColors","pixRandomHarmonicWarp","pixRankBinByStrip","pixRankColumnTransform","pixRankFilter","pixRankFilterGray","pixRankFilterRGB","pixRankFilterWithScaling","pixRankHaustest","pixRankRowTransform","pixRasterop","pixRasteropFullImage","pixRasteropHip","pixRasteropIP","pixRasteropVip","pixRead","pixReadBarcodeWidths","pixReadBarcodes","pixReadFromMultipageTiff","pixReadHeader","pixReadHeaderMem","pixReadIndexed","pixReadJp2k","pixReadJpeg","pixReadMem","pixReadMemBmp","pixReadMemFromMultipageTiff","pixReadMemGif","pixReadMemJp2k","pixReadMemJpeg","pixReadMemPng","pixReadMemPnm","pixReadMemSpix","pixReadMemTiff","pixReadMemWebP","pixReadStream","pixReadStreamBmp","pixReadStreamGif","pixReadStreamJp2k","pixReadStreamJpeg","pixReadStreamPng","pixReadStreamPnm","pixReadStreamSpix","pixReadStreamTiff","pixReadStreamWebP","pixReadTiff","pixReadWithHint","pixReduceBinary2","pixReduceRankBinary2","pixReduceRankBinaryCascade","pixRemoveAlpha","pixRemoveBorder","pixRemoveBorderConnComps","pixRemoveBorderGeneral","pixRemoveBorderToSize","pixRemoveColormap","pixRemoveColormapGeneral","pixRemoveMatchedPattern","pixRemoveSeededComponents","pixRemoveUnusedColors","pixRemoveWithIndicator","pixRenderBox","pixRenderBoxArb","pixRenderBoxBlend","pixRenderBoxa","pixRenderBoxaArb","pixRenderBoxaBlend","pixRenderContours","pixRenderGridArb","pixRenderHashBox","pixRenderHashBoxArb","pixRenderHashBoxBlend","pixRenderHashBoxa","pixRenderHashBoxaArb","pixRenderHashBoxaBlend","pixRenderHashMaskArb","pixRenderLine","pixRenderLineArb","pixRenderLineBlend","pixRenderPlotFromNuma","pixRenderPlotFromNumaGen","pixRenderPolygon","pixRenderPolyline","pixRenderPolylineArb","pixRenderPolylineBlend","pixRenderPta","pixRenderPtaArb","pixRenderPtaBlend","pixRenderRandomCmapPtaa","pixResizeImageData","pixResizeToMatch","pixReversalProfile","pixRotate","pixRotate180","pixRotate2Shear","pixRotate3Shear","pixRotate90","pixRotateAM","pixRotateAMColor","pixRotateAMColorCorner","pixRotateAMColorFast","pixRotateAMCorner","pixRotateAMGray","pixRotateAMGrayCorner","pixRotateBinaryNice","pixRotateBySampling","pixRotateOrth","pixRotateShear","pixRotateShearCenter","pixRotateShearCenterIP","pixRotateShearIP","pixRotateWithAlpha","pixRowStats","pixRunHistogramMorph","pixRunlengthTransform","pixSauvolaBinarize","pixSauvolaBinarizeTiled","pixSaveTiled","pixSaveTiledOutline","pixSaveTiledWithText","pixScale","pixScaleAndTransferAlpha","pixScaleAreaMap","pixScaleAreaMap2","pixScaleAreaMapToSize","pixScaleBinary","pixScaleByIntSampling","pixScaleBySampling","pixScaleBySamplingToSize","pixScaleColor2xLI","pixScaleColor4xLI","pixScaleColorLI","pixScaleGeneral","pixScaleGray2xLI","pixScaleGray2xLIDither","pixScaleGray2xLIThresh","pixScaleGray4xLI","pixScaleGray4xLIDither","pixScaleGray4xLIThresh","pixScaleGrayLI","pixScaleGrayMinMax","pixScaleGrayMinMax2","pixScaleGrayRank2","pixScaleGrayRankCascade","pixScaleGrayToBinaryFast","pixScaleLI","pixScaleMipmap","pixScaleRGBToBinaryFast","pixScaleRGBToGray2","pixScaleRGBToGrayFast","pixScaleResolution","pixScaleSmooth","pixScaleSmoothToSize","pixScaleToGray","pixScaleToGray16","pixScaleToGray2","pixScaleToGray3","pixScaleToGray4","pixScaleToGray6","pixScaleToGray8","pixScaleToGrayFast","pixScaleToGrayMipmap","pixScaleToResolution","pixScaleToSize","pixScaleToSizeRel","pixScaleWithAlpha","pixScanForEdge","pixScanForForeground","pixSearchBinaryMaze","pixSearchGrayMaze","pixSeedfill","pixSeedfill4","pixSeedfill4BB","pixSeedfill8","pixSeedfill8BB","pixSeedfillBB","pixSeedfillBinary","pixSeedfillBinaryRestricted","pixSeedfillGray","pixSeedfillGrayBasin","pixSeedfillGrayInv","pixSeedfillGrayInvSimple","pixSeedfillGraySimple","pixSeedfillMorph","pixSeedspread","pixSelectByAreaFraction","pixSelectByPerimSizeRatio","pixSelectByPerimToAreaRatio","pixSelectBySize","pixSelectByWidthHeightRatio","pixSelectComponentBySize","pixSelectLargeULComp","pixSelectMinInConnComp","pixSelectedLocalExtrema","pixSelectiveConnCompFill","pixSerializeToMemory","pixSetAll","pixSetAllArbitrary","pixSetAllGray","pixSetAlphaOverWhite","pixSetBlackOrWhite","pixSetBlackOrWhiteBoxa","pixSetBorderRingVal","pixSetBorderVal","pixSetChromaSampling","pixSetCmapPixel","pixSetColormap","pixSetComponentArbitrary","pixSetData","pixSetDepth","pixSetDimensions","pixSetHeight","pixSetInRect","pixSetInRectArbitrary","pixSetInputFormat","pixSetLowContrast","pixSetMasked","pixSetMaskedCmap","pixSetMaskedGeneral","pixSetMirroredBorder","pixSetOrClearBorder","pixSetPadBits","pixSetPadBitsBand","pixSetPixel","pixSetPixelColumn","pixSetRGBComponent","pixSetRGBPixel","pixSetResolution","pixSetSelectCmap","pixSetSelectMaskedCmap","pixSetSpecial","pixSetSpp","pixSetStrokeWidth","pixSetText","pixSetTextblock","pixSetTextline","pixSetUnderTransparency","pixSetWidth","pixSetWpl","pixSetXRes","pixSetYRes","pixSetZlibCompression","pixSetupByteProcessing","pixShiftAndTransferAlpha","pixShiftByComponent","pixSimpleCaptcha","pixSimpleColorQuantize","pixSizesEqual","pixSmoothConnectedRegions","pixSnapColor","pixSnapColorCmap","pixSobelEdgeFilter","pixSplitComponentIntoBoxa","pixSplitComponentWithProfile","pixSplitDistributionFgBg","pixSplitIntoBoxa","pixSplitIntoCharacters","pixStereoFromPair","pixStretchHorizontal","pixStretchHorizontalLI","pixStretchHorizontalSampled","pixStrokeWidthTransform","pixSubsampleBoundaryPixels","pixSubtract","pixSubtractGray","pixSwapAndDestroy","pixTRCMap","pixTRCMapGeneral","pixTestClipToForeground","pixTestForSimilarity","pixThinConnected","pixThinConnectedBySet","pixThreshold8","pixThresholdByConnComp","pixThresholdByHisto","pixThresholdForFgBg","pixThresholdGrayArb","pixThresholdOn8bpp","pixThresholdPixelSum","pixThresholdSpreadNorm","pixThresholdTo2bpp","pixThresholdTo4bpp","pixThresholdToBinary","pixThresholdToValue","pixTilingCreate","pixTilingDestroy","pixTilingGetCount","pixTilingGetSize","pixTilingGetTile","pixTilingNoStripOnPaint","pixTilingPaintTile","pixTophat","pixTransferAllData","pixTranslate","pixTwoSidedEdgeFilter","pixUnionOfMorphOps","pixUnpackBinary","pixUnsharpMasking","pixUnsharpMaskingFast","pixUnsharpMaskingGray","pixUnsharpMaskingGray1D","pixUnsharpMaskingGray2D","pixUnsharpMaskingGrayFast","pixUpDownDetect","pixUpDownDetectDwa","pixUpDownDetectGeneral","pixUpDownDetectGeneralDwa","pixUsesCmapColor","pixVShear","pixVShearCenter","pixVShearCorner","pixVShearIP","pixVShearLI","pixVarThresholdToBinary","pixVarianceByColumn","pixVarianceByRow","pixVarianceInRect","pixVarianceInRectangle","pixWarpStereoscopic","pixWindowedMean","pixWindowedMeanSquare","pixWindowedStats","pixWindowedVariance","pixWindowedVarianceOnLine","pixWordBoxesByDilation","pixWordMaskByDilation","pixWrite","pixWriteAutoFormat","pixWriteCompressedToPS","pixWriteDebug","pixWriteImpliedFormat","pixWriteJp2k","pixWriteJpeg","pixWriteMem","pixWriteMemBmp","pixWriteMemGif","pixWriteMemJp2k","pixWriteMemJpeg","pixWriteMemPS","pixWriteMemPam","pixWriteMemPdf","pixWriteMemPng","pixWriteMemPnm","pixWriteMemSpix","pixWriteMemTiff","pixWriteMemTiffCustom","pixWriteMemWebP","pixWriteMixedToPS","pixWritePSEmbed","pixWritePng","pixWriteSegmentedPageToPS","pixWriteStream","pixWriteStreamAsciiPnm","pixWriteStreamBmp","pixWriteStreamGif","pixWriteStreamJp2k","pixWriteStreamJpeg","pixWriteStreamPS","pixWriteStreamPam","pixWriteStreamPdf","pixWriteStreamPng","pixWriteStreamPnm","pixWriteStreamSpix","pixWriteStreamTiff","pixWriteStreamTiffWA","pixWriteStreamWebP","pixWriteStringPS","pixWriteTiff","pixWriteTiffCustom","pixWriteWebP","pixXor","pixZero","pixa","pixa","pixa","pixaAccumulateSamples","pixaAddBorderGeneral","pixaAddBox","pixaAddPix","pixaAddPixWithText","pixaAddTextNumber","pixaAddTextlines","pixaAnyColormaps","pixaBinSort","pixaCentroids","pixaChangeRefcount","pixaClear","pixaClipToForeground","pixaClipToPix","pixaCompareInPdf","pixaComparePhotoRegionsByHisto","pixaConstrainedSelect","pixaConvertTo1","pixaConvertTo32","pixaConvertTo8","pixaConvertTo8Colormap","pixaConvertToNUpPixa","pixaConvertToPdf","pixaConvertToPdfData","pixaConvertToSameDepth","pixaCopy","pixaCountPixels","pixaCountText","pixaCreate","pixaCreateFromBoxa","pixaCreateFromPix","pixaCreateFromPixacomp","pixaDestroy","pixaDisplay","pixaDisplayBoxaa","pixaDisplayLinearly","pixaDisplayMultiTiled","pixaDisplayOnLattice","pixaDisplayRandomCmap","pixaDisplayTiled","pixaDisplayTiledAndScaled","pixaDisplayTiledByIndex","pixaDisplayTiledInColumns","pixaDisplayTiledInRows","pixaDisplayTiledWithText","pixaDisplayUnsplit","pixaEqual","pixaExtendArrayToSize","pixaExtendByMorph","pixaExtendByScaling","pixaExtractColumnFromEachPix","pixaFindAreaFraction","pixaFindAreaFractionMasked","pixaFindDimensions","pixaFindPerimSizeRatio","pixaFindPerimToAreaRatio","pixaFindStrokeWidth","pixaFindWidthHeightProduct","pixaFindWidthHeightRatio","pixaGetAlignedStats","pixaGetBox","pixaGetBoxGeometry","pixaGetBoxa","pixaGetBoxaCount","pixaGetCount","pixaGetDepthInfo","pixaGetFont","pixaGetLinePtrs","pixaGetPix","pixaGetPixArray","pixaGetPixDimensions","pixaGetRenderingDepth","pixaHasColor","pixaInitFull","pixaInsertPix","pixaInterleave","pixaIsFull","pixaJoin","pixaMakeFromTiledPix","pixaMakeFromTiledPixa","pixaMakeSizeIndicator","pixaModifyStrokeWidth","pixaMorphSequenceByComponent","pixaMorphSequenceByRegion","pixaRead","pixaReadBoth","pixaReadFiles","pixaReadFilesSA","pixaReadMem","pixaReadMemMultipageTiff","pixaReadMultipageTiff","pixaReadStream","pixaRemoveOutliers1","pixaRemoveOutliers2","pixaRemovePix","pixaRemovePixAndSave","pixaRemoveSelected","pixaRenderComponent","pixaReplacePix","pixaRotate","pixaRotateOrth","pixaSaveFont","pixaScale","pixaScaleBySampling","pixaScaleToSize","pixaScaleToSizeRel","pixaSelectByAreaFraction","pixaSelectByNumConnComp","pixaSelectByPerimSizeRatio","pixaSelectByPerimToAreaRatio","pixaSelectBySize","pixaSelectByWidthHeightRatio","pixaSelectRange","pixaSelectToPdf","pixaSelectWithIndicator","pixaSelectWithString","pixaSetBoxa","pixaSetFullSizeBoxa","pixaSetStrokeWidth","pixaSetText","pixaSizeRange","pixaSort","pixaSort2dByIndex","pixaSortByIndex","pixaSplitIntoFiles","pixaSplitPix","pixaThinConnected","pixaTranslate","pixaVerifyDepth","pixaVerifyDimensions","pixaWrite","pixaWriteCompressedToPS","pixaWriteDebug","pixaWriteFiles","pixaWriteMem","pixaWriteMemMultipageTiff","pixaWriteMemWebPAnim","pixaWriteMultipageTiff","pixaWriteStream","pixaWriteStreamInfo","pixaWriteStreamWebPAnim","pixaWriteWebPAnim","pixa_id","pixa_tr","pixa_u","pixaa","pixaa","pixaaAddBox","pixaaAddPix","pixaaAddPixa","pixaaClear","pixaaCreate","pixaaCreateFromPixa","pixaaDestroy","pixaaDisplay","pixaaDisplayByPixa","pixaaDisplayTiledAndScaled","pixaaExtendArray","pixaaFlattenToPixa","pixaaGetBoxa","pixaaGetCount","pixaaGetPix","pixaaGetPixa","pixaaInitFull","pixaaIsFull","pixaaJoin","pixaaRead","pixaaReadFromFiles","pixaaReadMem","pixaaReadStream","pixaaReplacePixa","pixaaScaleToSize","pixaaScaleToSizeVar","pixaaSelectRange","pixaaSizeRange","pixaaTruncate","pixaaVerifyDepth","pixaaVerifyDimensions","pixaaWrite","pixaaWriteMem","pixaaWriteStream","pixaa_u","pixaccAdd","pixaccCreate","pixaccCreateFromPix","pixaccDestroy","pixaccFinal","pixaccGetOffset","pixaccGetPix","pixaccMultConst","pixaccMultConstAccumulate","pixaccSubtract","pixacompAddBox","pixacompAddPix","pixacompAddPixcomp","pixacompConvertToPdf","pixacompConvertToPdfData","pixacompCreate","pixacompCreateFromFiles","pixacompCreateFromPixa","pixacompCreateFromSA","pixacompCreateWithInit","pixacompDestroy","pixacompDisplayTiledAndScaled","pixacompFastConvertToPdfData","pixacompGetBox","pixacompGetBoxGeometry","pixacompGetBoxa","pixacompGetBoxaCount","pixacompGetCount","pixacompGetOffset","pixacompGetPix","pixacompGetPixDimensions","pixacompGetPixcomp","pixacompInterleave","pixacompJoin","pixacompRead","pixacompReadMem","pixacompReadStream","pixacompReplacePix","pixacompReplacePixcomp","pixacompSetOffset","pixacompWrite","pixacompWriteFiles","pixacompWriteMem","pixacompWriteStream","pixacompWriteStreamInfo","pixad","pixadb_ave","pixadb_boot","pixadb_split","pixat","pixatd","pixc","pixcmapAddBlackOrWhite","pixcmapAddColor","pixcmapAddNearestColor","pixcmapAddNewColor","pixcmapAddRGBA","pixcmapClear","pixcmapColorToGray","pixcmapContrastTRC","pixcmapConvertHSVToRGB","pixcmapConvertRGBToHSV","pixcmapConvertRGBToYUV","pixcmapConvertTo4","pixcmapConvertTo8","pixcmapConvertToHex","pixcmapConvertYUVToRGB","pixcmapCopy","pixcmapCountGrayColors","pixcmapCreate","pixcmapCreateLinear","pixcmapCreateRandom","pixcmapDeserializeFromMemory","pixcmapDestroy","pixcmapGammaTRC","pixcmapGetColor","pixcmapGetColor32","pixcmapGetCount","pixcmapGetDepth","pixcmapGetDistanceToColor","pixcmapGetFreeCount","pixcmapGetIndex","pixcmapGetMinDepth","pixcmapGetNearestGrayIndex","pixcmapGetNearestIndex","pixcmapGetRGBA","pixcmapGetRGBA32","pixcmapGetRangeValues","pixcmapGetRankIntensity","pixcmapGrayToColor","pixcmapHasColor","pixcmapIsBlackAndWhite","pixcmapIsOpaque","pixcmapIsValid","pixcmapRead","pixcmapReadMem","pixcmapReadStream","pixcmapResetColor","pixcmapSerializeToMemory","pixcmapSetAlpha","pixcmapSetBlackAndWhite","pixcmapShiftByComponent","pixcmapShiftIntensity","pixcmapToArrays","pixcmapToOctcubeLUT","pixcmapToRGBTable","pixcmapUsableColor","pixcmapWrite","pixcmapWriteMem","pixcmapWriteStream","pixcompCopy","pixcompCreateFromFile","pixcompCreateFromPix","pixcompCreateFromString","pixcompDestroy","pixcompDetermineFormat","pixcompGetDimensions","pixcompGetParameters","pixcompWriteFile","pixcompWriteStreamInfo","pixdb_ave","pixdb_range","pixelFractionalShift","pixelLinearMapToTargetColor","pixelShiftByComponent","pixlab","pixm","pixs","pixs","pixs","pixt","plotdata","plotlabels","plotstyles","pmsCreate","pmsCustomAlloc","pmsCustomDealloc","pmsDestroy","pmsGetAlloc","pmsGetLevelForAlloc","pmsGetLevelForDealloc","pmsLogInfo","popen","posix_memalign","poststream","predictor","prev","printf","projectiveXformPt","projectiveXformSampledPt","pselect","pta","pta","ptaAddPt","ptaAffineTransform","ptaChangeRefcount","ptaClone","ptaContainsPt","ptaConvertToBox","ptaConvertToBoxa","ptaConvertToNuma","ptaCopy","ptaCopyRange","ptaCreate","ptaCreateFromNuma","ptaCropToMask","ptaCyclicPerm","ptaDestroy","ptaEmpty","ptaEqual","ptaFindPtByHash","ptaGetArrays","ptaGetBoundaryPixels","ptaGetBoundingRegion","ptaGetCount","ptaGetCubicLSF","ptaGetIPt","ptaGetInsideBox","ptaGetLinearLSF","ptaGetMinMax","ptaGetNeighborPixLocs","ptaGetPixelsFromPix","ptaGetPt","ptaGetQuadraticLSF","ptaGetQuarticLSF","ptaGetRange","ptaGetRankValue","ptaGetRefcount","ptaGetSortIndex","ptaInsertPt","ptaIntersectionByAset","ptaIntersectionByHash","ptaJoin","ptaNoisyLinearLSF","ptaNoisyQuadraticLSF","ptaPtInsidePolygon","ptaRead","ptaReadMem","ptaReadStream","ptaRemoveDupsByAset","ptaRemoveDupsByHash","ptaRemovePt","ptaReplicatePattern","ptaReverse","ptaRotate","ptaScale","ptaSelectByValue","ptaSelectRange","ptaSetPt","ptaSort","ptaSort2d","ptaSortByIndex","ptaSubsample","ptaTestIntersection","ptaTransform","ptaTranslate","ptaTranspose","ptaUnionByAset","ptaUnionByHash","ptaWrite","ptaWriteDebug","ptaWriteMem","ptaWriteStream","pta_u","ptaa","ptaaAddPt","ptaaAddPta","ptaaCreate","ptaaDestroy","ptaaGetBoundaryPixels","ptaaGetCount","ptaaGetPt","ptaaGetPta","ptaaIndexLabeledPixels","ptaaInitFull","ptaaJoin","ptaaRead","ptaaReadMem","ptaaReadStream","ptaaReplacePta","ptaaSortByIndex","ptaaTruncate","ptaaWrite","ptaaWriteDebug","ptaaWriteMem","ptaaWriteStream","ptaa_u","ptac","ptact","ptall","ptas","ptaul","ptaul","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","ptra","ptraAdd","ptraCompactArray","ptraConcatenatePdf","ptraConcatenatePdfToData","ptraCreate","ptraDestroy","ptraGetActualCount","ptraGetMaxIndex","ptraGetPtrToItem","ptraInsert","ptraJoin","ptraRemove","ptraRemoveLast","ptraReplace","ptraReverse","ptraSwap","ptraaCreate","ptraaDestroy","ptraaFlattenToPtra","ptraaGetPtra","ptraaGetSize","ptraaInsertPtra","ptype","putc","putc_unlocked","putchar","putchar_unlocked","putenv","puts","putw","qecvt","qecvt_r","qfcvt","qfcvt_r","qgcvt","qsort","quad_t","quadtreeGetChildren","quadtreeGetParent","quadtreeMaxLevels","quick_exit","quot","quot","quot","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rankhaus","rasteropHipLow","rasteropLow","rasteropUniLow","rasteropVipLow","rch","rchDestroy","rchExtract","rcha","rchaDestroy","rchaExtract","readHeaderJp2k","readHeaderJpeg","readHeaderMemJp2k","readHeaderMemJpeg","readHeaderMemPng","readHeaderMemPnm","readHeaderMemTiff","readHeaderMemWebP","readHeaderPng","readHeaderPnm","readHeaderSpix","readHeaderTiff","readHeaderWebP","readResolutionMemJpeg","realloc","reallocNew","reallocarray","realpath","recogAddDigitPadTemplates","recogAddSample","recogAverageSamples","recogCorrelationBestChar","recogCorrelationBestRow","recogCreate","recogCreateDid","recogCreateFromPixa","recogCreateFromPixaNoFinish","recogCreateFromRecog","recogDebugAverages","recogDecode","recogDestroy","recogDestroyDid","recogDidExists","recogExtractNumbers","recogExtractPixa","recogFilterPixaBySize","recogGetClassIndex","recogGetClassString","recogGetCount","recogGetDid","recogIdentifyMultiple","recogIdentifyPix","recogIdentifyPixa","recogIsPaddingNeeded","recogMakeBootDigitRecog","recogMakeBootDigitTemplates","recogModifyTemplate","recogPadDigitTrainingSet","recogProcessLabeled","recogProcessToIdentify","recogRead","recogReadMem","recogReadStream","recogRemoveOutliers1","recogRemoveOutliers2","recogSetChannelParams","recogSetParams","recogShowAverageTemplates","recogShowContent","recogShowMatch","recogShowMatchesInRange","recogSkipIdentify","recogSortPixaByClass","recogSplitIntoCharacters","recogStringToIndex","recogTrainFromBoot","recogTrainLabeled","recogTrainingFinished","recogWrite","recogWriteMem","recogWriteStream","red","redfactor","redfactor","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","reformatPacked64","refpage","regTestCheckFile","regTestCleanup","regTestCompareFiles","regTestComparePix","regTestCompareSimilarPix","regTestCompareStrings","regTestCompareValues","regTestGenLocalFilename","regTestSetup","regTestWriteDataAndCheck","regTestWritePixAndCheck","reg_save_area","register_t","rem","rem","rem","remove","rename","renameat","res","resetMorphBoundaryCondition","returnErrorFloat","returnErrorInt","returnErrorPtr","rewind","right","rightcurv","rightslope","root","rootname","rpmatch","rptr","runlengthMembershipOnLine","saConcatenatePdf","saConcatenatePdfToData","saConvertFilesToPdf","saConvertFilesToPdfData","saConvertUnscaledFilesToPdf","saConvertUnscaledFilesToPdfData","sa_text","sacmap","safiles","samphdispar","sample","sampling","sampling","sampvdispar","sampydispar","saprex","sarrayAddString","sarrayAppend","sarrayAppendRange","sarrayChangeRefcount","sarrayClear","sarrayClone","sarrayConvertFilesFittedToPS","sarrayConvertFilesToPS","sarrayConvertWordsToLines","sarrayCopy","sarrayCreate","sarrayCreateInitialized","sarrayCreateLinesFromString","sarrayCreateWordsFromString","sarrayDestroy","sarrayFindStringByHash","sarrayGenerateIntegers","sarrayGetArray","sarrayGetCount","sarrayGetRefcount","sarrayGetString","sarrayIntersectionByAset","sarrayIntersectionByHash","sarrayJoin","sarrayLookupCSKV","sarrayPadToSameSize","sarrayParseRange","sarrayRead","sarrayReadMem","sarrayReadStream","sarrayRemoveDupsByAset","sarrayRemoveDupsByHash","sarrayRemoveString","sarrayReplaceString","sarraySelectByRange","sarraySelectBySubstring","sarraySort","sarraySortByIndex","sarraySplitString","sarrayToString","sarrayToStringRange","sarrayUnionByAset","sarrayWrite","sarrayWriteMem","sarrayWriteStream","satext","scaleh","scalew","scaling","scanf","scanf1","score","seed48","seed48_r","sel","selCopy","selCreate","selCreateBrick","selCreateComb","selCreateFromColorPix","selCreateFromPix","selCreateFromPta","selCreateFromString","selDestroy","selDisplayInPix","selFindMaxTranslations","selGetElement","selGetName","selGetParameters","selGetTypeAtOrigin","selMakePlusSign","selPrintToString","selRead","selReadFromColorImage","selReadStream","selRotateOrth","selSetElement","selSetName","selSetOrigin","selWrite","selWriteStream","sela4and8ccThin","sela4ccThin","sela8ccThin","selaAddBasic","selaAddCrossJunctions","selaAddDwaCombs","selaAddDwaLinear","selaAddHitMiss","selaAddSel","selaAddTJunctions","selaCreate","selaCreateFromColorPixa","selaCreateFromFile","selaDestroy","selaDisplayInPix","selaFindSelByName","selaGetBrickName","selaGetCombName","selaGetCount","selaGetSel","selaGetSelnames","selaMakeThinSets","selaRead","selaReadStream","selaWrite","selaWriteStream","select","selectComposableSels","selectComposableSizes","selectDefaultPdfEncoding","setLeptDebugOK","setLineDataVal","setMsgSeverity","setPixMemoryManager","setPixelLow","setbuf","setbuffer","setenv","setlinebuf","setsize","setstate","setstate_r","setvbuf","setwidth","showExtractNumbers","sigset_t","size","size","size","size","size_t","sizehaus","skip_horiz","snprintf","spacewidth","special","spglobal","splitPathAtDirectory","splitPathAtExtension","splitStringToParagraphs","splocal","spp","spp","sprintf","srand","srand48","srand48_r","srandom","srandom_r","sreadHeaderSpix","sscanf","sscanf1","ssize_t","stack","start","startTimer","startTimerNested","startWallTimer","start_sec","start_usec","startx","startx","state","state","stderr","stdin","stdout","step","stopTimer","stopTimerNested","stopWallTimer","stop_sec","stop_usec","strcodeCreate","strcodeCreateFromFile","strcodeFinalize","strcodeGenerate","stringCat","stringCheckForChars","stringCompareLexical","stringConcatNew","stringCopy","stringCopySegment","stringFindEachSubstr","stringFindSubstr","stringJoin","stringJoinIP","stringLength","stringNew","stringRemoveChars","stringReplace","stringReplaceEachSubstr","stringReplaceSubstr","stringReverse","stringSplitOnToken","strip","strtod","strtof","strtokSafe","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtouq","success","sudokuCreate","sudokuDestroy","sudokuGenerate","sudokuOutput","sudokuReadFile","sudokuReadString","sudokuSolve","sudokuTestUniqueness","sumtab","suseconds_t","sx","sx","sy","sy","sys_errlist","sys_nerr","system","tempfile","templ_use","tempnam","testname","text","text","text","thresh","threshold","thresholdToBinaryLineLow","tiffGetCount","time_t","timer_t","timespec","timeval","title","title","tmpfile","tmpnam","tmpnam_r","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trailer","train_done","trellisscore","trellistempl","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstart","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","ungetc","unsetenv","useboth","ushort","utype","va_list","valloc","value","vdprintf","vertlinesep","vfprintf","vfscanf","vfscanf1","vprintf","vscanf","vscanf1","vsnprintf","vsprintf","vsscanf","vsscanf1","vsuccess","vvalid","w","w","w","w","w","w","w","w","w","w","w","w","wchar_t","wcstombs","wctomb","weightfactor","wh","width","widthtab","wpl","wpl","wpl","writeImageCompressedToPSFile","writeImageFileInfo","writeMultipageTiff","writeMultipageTiffSA","wshedApply","wshedBasins","wshedCreate","wshedDestroy","wshedRenderColors","wshedRenderFill","x","x","xlabel","xloc","xoverlap","xrefloc","xres","xres","xres","xres","xy","y","y","ylabel","yloc","yoverlap","yres","yres","yres","yres","ysuccess","zlibCompress","zlibUncompress","Box","Boxa","BoxaRefIterator","InvalidPathNulByte","InvalidUtf8Path","MemoryTooLarge","Pix","PixError","ReadFrom","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_valid","drop","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","get_box","get_h","get_n","get_w","into","into","into","into","into","into_iter","into_iter","ne","new","next","pix_read","pix_read_mem","raw","raw","source","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","source","source","MAX_CREDIBLE_RESOLUTION","MIN_CREDIBLE_RESOLUTION","TessApi","TessInitError","TessSetVariableError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","get_alto_text","get_component_images","get_hocr_text","get_image_dimensions","get_lstm_box_text","get_regions","get_source_y_resolution","get_tsv_text","get_utf8_text","get_word_str_box_text","into","into","into","mean_text_conf","ne","new","raw","recognize","set_image","set_rectangle","set_source_resolution","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["leptessleptess::capileptess::leptonica","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","leptess::leptonica::PixError","","","leptess::tesseract","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Use divisible blobs chopping","Debug level for unichar ambiguities","Debug level","Exposure value follows this pattern in the image filename. â€¦","Learn both character fragments (as is done in the special â€¦","Each bounding box is assumed to contain ngrams. Only learn â€¦","Page number to apply boxes from","include fixed-pitch heuristics in char segmentation","Debug level for BiDi","unrej potential with no checks","Certainty scaling factor","Split center adjustment","Width of (smaller) chopped blobs above which we donâ€™t â€¦","Chop debug","Chop enable","Good split limit","Min Inside Angle Bend","Min Outline Area","Min Number of Points on Outline","Use new seam_pile","OK split limit","Split overlap adjustment","Same distance","Max number of seams in seam_pile","Split sharpness adjustment","Split length adjustment","Split Length","Vertical creep","Width change adjustment","X / Y  length weight","Leading punctuation","1st Trailing punctuation","2nd Trailing punctuation","Threshold for good features during adaptive 0-255","Threshold for good protos during adaptive 0-255","Prune poor adapted results this much worse than best result","Threshold at which classify_adapted_pruning_factor starts","Assume the input is numbers [0-9].","Character Normalization Range ...","Exclude fragments that do not look like whole characters â€¦","Class Pruner Multiplier 0-255:","Class Pruner Threshold 0-255","Class Pruner Angle Pad Loose","Class Pruner Angle Pad Medium","CLass Pruner Angle Pad Tight","Class Pruner CutoffStrength:","Class Pruner End Pad Loose","Class Pruner End Pad Medium","Class Pruner End Pad Tight","Class Pruner Side Pad Loose","Class Pruner Side Pad Medium","Class Pruner Side Pad Tight","Bring up graphical debugging windows for fragments training","Classify debug level","Enable match debugger","Enable adaptive classifier","Enable adaptive classifier","Default font name to be used in training","Integer Matcher Multiplier  0-255:","Class str to debug learning","Learning Debug Level:","Veto difference between classifier certainties","Veto ratio between classifier ratings","Slope above which lines are called vertical","Slope below which lines are called horizontal","Penalty to apply when a non-alnum is vertically out of its â€¦","Non-linear stroke-density normalization","Norm adjust curl ...","Norm adjust midpoint ...","Normalization Method   ...","Number of Class Pruner Levels","Pico Feature Length","Proto Pruner Angle Pad","Proto Prune End Pad","Proto Pruner Side Pad","Save adapted templates to a file","Use pre-adapted classifier templates","Il1 conflict set","Use acceptability in okstring","As it says","POTENTIAL crunch cert lt this","Del if word gt xht x this above bl","Del if word gt xht x this below bl","Del if word ht gt xht x this","Del if word ht lt xht x this","Del if word width lt xht x this","POTENTIAL crunch rating lt this","Take out ~^ early?","Before word crunch?","Fiddle alpha figures","Donâ€™t pot crunch sensible strings","Donâ€™t crunch words with long lower case strings","Donâ€™t touch sensible strings","Donâ€™t crunch words with long lower case strings","Crunch words with long repetitions","crunch garbage cert lt this","crunch garbage rating lt this","How many potential indicators needed","POTENTIAL crunch cert lt this","POTENTIAL crunch rating lt this","For adj length in rating per ch","Small if lt xht x this","As it says","crunch rating lt this","Set to 1 for general debug info, to 2 for more details, to â€¦","File to send tprintf output to","Contextual fixspace debug","Debug reassignment of small outlines","Reestimate debug","Whether to create a debug image for split shiro-rekha â€¦","Debug level for split shiro-rekha process.","Do not include character fragments in the results of the â€¦","Worst certainty for words that can be inserted into the â€¦","Worst certainty for using pending dictionary","Title of output document (used for hOCR and PDF output)","Function used for calculation of dot product","Min area fraction of grandchild for box","Min area fraction of child outline","Max holes allowed in blob","Remove boxy parents of char-like children","Importance ratio for chucking outlines","turn on debugging for this module","Max layers of nested children inside a character outline","Max number of children inside a character outline","Min pixels for potential char in box","Max lensq/area for acceptable child outline","Use the new outline complexity module","Editor debug window height","Editor debug window name","Editor debug window width","Editor debug window X Pos","Editor debug window Y Pos","Blob bounding box colour","Add to image height for menu bar","Correct text colour","Editor image window name","Word bounding box colour","Editor image X Pos","Editor image Y Pos","Word window height","BL normalized word window","Word window width","Word window X Pos","Word window Y Pos","Remove and conditionally reassign small outlines when they â€¦","Save input bi image","Save the merged image","Save the seed image","Save special character image","Filename extension","What constitues done for spacing","How many non-noise blbs either side?","Small if lt xht x this","force associator to run regardless of what enable_assoc isâ€¦","Name of debugfile","xht multiplier","Say which blocks have tables","Ensure gaps not less than 2quanta wide","Use large space at start and end of rows","Add coordinates for each character to hocr output","Add font info to hocr output","Debug level for hyphenated words.","Run interactively?","Set JPEG quality level","Language model debug level","Minimum length of compound words","Average classifier score of a non-matching unichar.","Turn on/off the use of character ngram model","Maximum order of the character ngram model","Factor to bring log-probs into the same range as ratings â€¦","Strength of the character ngram model relative to the â€¦","To avoid overly small denominators use this as the floor â€¦","Words are delimited by space","Use only the first UTF8 step of the given string when â€¦","Penalty for inconsistent case","Penalty for inconsistent character type","Penalty for inconsistent font","Penalty increment","Penalty for non-dictionary words","Penalty for words not in the frequent word dictionary","Penalty for inconsistent punctuation","Penalty for inconsistent script","Penalty for inconsistent spacing","Use sigmoidal score for certainty","Maximum number of prunable (those for which PrunablePath() â€¦","Maximum size of viterbi lists recorded in BLOB_CHOICEs","High level wrapper for Tesseract and Leptonica","Load dawg with special word bigrams.","Load frequent word dawg.","Load dawg with number patterns.","Load dawg with punctuation patterns.","Load system word dawg.","Load unambiguous word dawg.","Allows to include alternative symbols choices in the hOCR â€¦","Use ratings matrix/beam search with lstm","Avg. noise blob length","Bad Match Pad (0-1)","Maximum angle delta for prototype clustering","Matcher Debug Flags","Matcher Debug Level","Use two different windows for debugging the matching: One â€¦","Good Match (0-1)","Reliable Config Threshold","Perfect Match (0-1)","Min # of permanent classes","New template margin (0-1)","Great Match (0-1)","Enable adaption even if the ambiguities have not been seen","Maximum number of different character choices to consider â€¦","Merge the fragments in the ratings matrix and delete them â€¦","Specify minimum characters to try during OSD","Min acceptable orientation margin","Reject any x-ht lt or eq than this","Print multilang debug info.","Hingepoint for base char certainty","Hingepoint for disjoint certainty","Scaling on certainty diff from Hingepoint","Threshold for new punc char certainty","Max diacritics to apply to a blob","Max diacritics to apply to a word","Punct. chs expected WITHIN numbers","Whether to use the top-line splitting process for â€¦","Allow NN to unrej","Improve correlation of heights","Max aspect ratio of a dot","Max lost before fallback line used","Fix bug in modes threshold for xheights","Fraction of est allowed in calc","Non standard number of outlines","Non standard number of outlines","Output file for ambiguities found in the dictionary","Page separator (default is form feed control character)","Detect music staff and remove intersecting components","Whether to use the top-line splitting process for â€¦","Print paragraph debug info.","Run paragraph detection on the post-text-recognition (more â€¦","Max advance fake generation","Dist inside big blob for chopping","Use new fast algorithm","Fraction of cut for free cuts","Allow feature extractors to see the original outline","Debug old poly","More accurate approx on wide things","Preserve multiple interword spaces","Prioritize blob division over chopping","good_quality_doc gte good blobs limit","good_quality_doc gte good char limit","alphas in a good word","good_quality_doc lte outline error limit","good_quality_doc lte rejection limit","good_quality_doc gte good char limit","Rating scaling factor","Donâ€™t double check","Use dictword test","Extend permuter check","Use DOC dawg in 11l conf. detector","Individual rejection control","Extend permuter check","Individual rejection control","Individual rejection control","if &gt;this fract","Fix blobs that arenâ€™t chopped","Save alternative paths found during chopping and â€¦","Save Document Words","Donâ€™t use any alphabetic-specific tricks. Set to true in â€¦","Default score multiplier for word matches, which may have â€¦","Score multiplier for word matches that have good case â€¦","Score multiplier for word matches which have good case and â€¦","Score multiplier for glyph fragment segmentations which do â€¦","Score multiplier for poorly cased strings that are not in â€¦","SegSearch debug level","Maximum character width-to-height ratio","Maximum number of pain point classifications per chunk â€¦","Maximum number of pain points stored in the queue","Max large speckle size","Penalty to add to worst rating for noise","Max certaintly variation allowed in a word (in sigma)","Certainty to add for each dict char above small word size.","Stopper debug level","Make AcceptableChoice() always return false. Useful when â€¦","Certainty threshold for non-dict words","Reject certainty offset","Size of dict word to be treated as non-dict word","Stream a filelist from stdin","Maximum top of a character measured as a multiple of xâ€¦","What reduction in badness do we think sufficient to choose â€¦","Debug level for sub &amp; superscript fixer","Minimum bottom of a character measured as a multiple of xâ€¦","A superscript scaled down more than this is unbelievably â€¦","How many times worse certainty does a superscript position â€¦","Accept good rating limit","UNLV keep 1Il chars rejected","Suspect marker level","Donâ€™t touch bad rating limit","Donâ€™t suspect dict wds longer than this","Baseline Normalized Matching","Character Normalized Matching","Generate and print debug information for adaption","Perform training for ambiguities","Amount of debug output for bigram correction.","Good blob limit","Blacklist of chars not to recognize","List of chars to override tessedit_char_blacklist","Whitelist of chars to recognize","Scale factor for features not used","Write .xml ALTO file","Output text with boxes","Write .html hOCR output file","Write .box file for LSTM training","Write .pdf output file","Write .tsv output file","Write .txt output file","Write WordStr format .box output file","Block and Row stats","Page stats","Output font info per char","Output data to debug file","Draw output words","Try inverting the image in `LSTMRecognizeWord`","Use word segmentation quality metric","Use word segmentation quality metric","Dump char choices","Dump intermediate images made during page segmentation","Enable correction based on the word bigram dictionary.","Enable single word correction based on the dictionary.","Add words to the document dictionary","Try to improve fuzzy spaces","Crunch double hyphens?","Contextual 0O O0 flips","rej good doc wd if more than this fraction rejected","Reduce rejection on good docs","Rej blbs near image edge limit","Only initialize with the config file. Useful if the â€¦","List of languages to load with this one","Aspect ratio dot/hyphen test","Generate more boxes from boxed chars","Do minimal rejection on pass 1 output","Only reject tess failures","Which OCR engine(s) to run (Tesseract, LSTM, both). â€¦","According to dict_word","-1 -&gt; All pages, else specific page to process","Page seg mode: 0=osd only, 1=auto+osd, 2=auto_only, â€¦","Run in parallel where possible","Reward punctuation joins","Only rej partially rejected words in block rejection","Only preserve wds longer than this","Only rej partially rejected words in row rejection","Reject all bad quality wds","%rej allowed before rej whole block","%rej allowed before rej whole doc","Rejection algorithm","%rej allowed before rej whole row","Adaption debug","Take segmentation and labeling from box file","Conversion of word/line box file to char box file","Apply row rejection to good docs","Adaptation decision algorithm for tess","Test adaption criteria","Print timing stats","Generate training data from boxed chars","Break input into lines and remap boxes if present","Max words to keep in list","Donâ€™t bother with word plausibility","Aspect ratio dot/hyphen test","In multilingual mode use params model of the primary â€¦","Reject spaces?","Number of row rejects in whole word rejects which prevents â€¦","Make output have exactly one word per WERD","Write block separators in output","Capture the image from the IPE","Write all parameters to the given file.","Write repetition char code","Write .unlv output file","Donâ€™t reject ANYTHING AT ALL","Donâ€™t reject ANYTHING","Test for point","xcoord","ycoord","Create PDF with only one invisible text layer","All doc is proportial text","Min pile height to make ascheight","Max cap/xheight","Min cap/xheight","Ding rate for unbalanced char cells","Baseline debug level","Bias skew estimates with line length","Attempt whole doc/block fixed pitch","Moan about prop blocks","Moan about fixed pitch blocks","Dump stats when moaning","Max baseline shift","Min size of baseline shift","Max width before chopping","Chopper is being tested.","Debug baseline generation","Print test blob information","Block to do debug on","Turn on output related to bugs in tab finding","Write full metric stuff","Debug on fixed pitch test","Make debug windows printable","Debug tab finding","Test xheight algorithms","Min pile height to make descheight","Max desc/xheight","Min desc/xheight","Turn off dp fixed pitch algorithm","Max pixel gap for broken pixed pitch","Turn on equation detector","New row made if blob makes row this big","Factor to expand rows by in expand_rows","Do even faster pitch algorithm","Prevent multiple baselines","Use spline baseline","Force proportional word segmentation on all rows","Max allowed bending of chop cells","Max distance of chop pt from vertex","Do fixed pitch chopping","Min width of decent blobs","Pitch IQR/Gap IQR threshold","Vigorously remove noise","Ile of sizes for xheight guess","Ile of sizes for xheight guess","Interpolate across gaps","Max iqr/median for linespace","Number of linew fits to do","Max number of blobs a big blob can overlap","Pixel size of noise","Xh fraction noise in pitch","Min blob height/top to include blob top into xheight stats","Min blobs before gradient counted","* blob height for initial linesize","Min credible pixel xheight","fraction of linesize for min xheight","Use test xheight mechanism","Donâ€™t remove noise blobs","Fraction of bounding box for noise","Debug row garbage detector","Height fraction to discard outlines as speckle noise","Dot to norm ratio for deletion","Reject noise-like rows","Reject noise-like words","Dot to norm ratio for deletion","Fraction of size for maxima","Fraction of x for big t count","super norm blobs to save row","xh fract width error for norm blobs","xh fract height error for norm blobs","Transitions for normal blob","Fraction of neighbourhood","Make baselines for ocropus","Use old baseline algorithm","Use old xheight algorithm","Debug old baseline generation","X fraction for new partition","Merge suspect partitions","Use para default mechanism","Split stepped splines","Fraction of linespace for good overlap","Force parallel baselines","Use correct answer for fixed/prop","Max range test on pitch","Fraction of xheight for sameness","Scale scores on big words","Ding rate for mid-cuts","Use original wiseowl xheight","Chop underlines &amp; put back","Display unsorted blobs","Display unsorted blobs","Display rows after expanding","Display blob bounds after pre-ass","Display rows after final fitting","Draw fixed pitch cell boundaries","Display forced fixed pitch words","Display row accumulation","Display separate words","Display separate words","Draw page-level cuts","Display page correlated rows","Draw row-level cuts","Show table regions","Script has no xheight, so use a single mode","Ile of gradients for page skew","Lag for skew on row accumulation","For smooth factor","For smooth factor","If true, word delimiter spaces are assumed to have â€¦","Min ratio space/nonspace","Min ratio space/nonspace","Size of window for spline segmentation","Min blobs in each spline segment","Fraction of line spacing for outlier","Fraction of line spacing for quad","Force straight baselines","Fraction of height used as a minimum gap for aligned blobs.","run table detection","Force using vertical text page mode","Only run stroke widths","Show final block bounds","Show column bounds","Show tab vectors","Show image blobs","Show partition bounds","Show tab candidates","Show partition bounds, waiting if &gt;1","Show blobs rejected as noise","Show stroke widths","Debug line finding","Enable vertical detection","Fraction of textlines deemed vertical to use vertical page â€¦","Enables the table recognizer for table layout and filteringâ€¦","Debug table marking steps in detail","Show page stats used in table finding","Fraction of box matches required to declare a line vertical","max fraction of mean blob width allowed for vertical gaps â€¦","Tests refer to land/port","Do current test","coord of test pt","coord of test pt","Bottom edge of debug rectangle","Left edge of debug reporting rectangle","Right edge of debug rectangle","Top edge of debug reporting rectangle","Fraction of x to ignore","Fraction of width occupied","Multiple of line_size for underline","Use CJK fixed pitch model","Max width of blobs to make rows","Smoothing width stats","Threshold for definite fixed","Threshold for definite prop","Max believable third space","Fraction of xheight","Fraction of xheight","Non-fuzzy spacing region","Max initial cluster size","Min initial cluster spacing","Multiple of xheight","Fraction of xheight","Fraction of valid gaps needed","Pitch sync threshold","Rows required to outvote a veto","Ile of blob widths for space est","Smoothing gap stats","Accepted variation","Min pile height to make xheight","Pass ANY flip to context?","Only stat OBVIOUS spaces","Debug data","Limit use of xht gap with odd small kns","Fract of kerns reqd for isolated row stats","or should we use mean","No.gaps reqd with 1 large gap to treat as a table","Donâ€™t autoflip kn to sp when large separation","Default flip","Default flip","Force word breaks on punct to break long lines in nonâ€¦","New fuzzy kn alg","Donâ€™t restrict kn-&gt;sp fuzzy limit to tables","New fuzzy sp alg","Fract of xheight for fuzz sp","Fract of xheight for fuzz sp","Fract of xheight for fuzz sp","gap ratio to flip sp-&gt;kern","xht multiplier","xht multiplier","Enable improvement heuristic","Thresh guess - mult kn by this","Thresh guess - mult xht by this","gap ratio to flip kern-&gt;sp","gap ratio to flip kern-&gt;sp","gap ratio to flip kern-&gt;sp","Limit use of xht gap with large kns","Multiplier on kn to limit thresh","Donâ€™t trust spaces less than this time kn","narrow if w/h less than this","Only stat OBVIOUS spaces","Fract of xheight for narrow","Donâ€™t reduce box if the top left is non blank","Factor for defining space threshold in terms of space and â€¦","Fix suspected bug in old code","Constrain relative values of inter and intra-word gaps for â€¦","Space stats use prechopping?","Better guess","Block stats to use fixed pitch rows?","Only use within xht gap for wd breaks","How wide fuzzies need context","Use row alone when inadequate cert spaces","No.samples reqd to reestimate for row","rep gap multiplier for space","Only stat OBVIOUS spaces","Only stat OBVIOUS spaces","Donâ€™t chng kn to space next to punct","How to avoid being silly","No.gaps reqd with few cert spaces to use certs","Donâ€™t let sp minus kn get too small","Use within xht gap for wd breaks","Fuzzy if less than this","Min difference of kn &amp; sp in table","Expect spaces bigger than this","how far between kern and space?","how far between kern and space?","Space stats use prechopping?","Use within xht gap for wd breaks","wide if w/h less than this","Fract of xheight for wide","Mark v.bad words for tilde crunch","Output char for unidentified blobs","Use ambigs for deciding whether to adapt to a character","Use only the first UTF8 step of the given string when â€¦","Specify DPI for input image","A filename of user-provided patterns.","A suffix of user-provided patterns located in tessdata.","A filename of user-provided words.","A suffix of user-provided words located in tessdata.","Enum representing different variable options accepted by â€¦","Word for which stopper debug information should be printed â€¦","Blob pause","Print blamer debug messages","Debug level for wordrec","Display Blobs","Display Segmentations","Display splits","Associator Enable","Max number of broken pieces to associate","Try to set the blame for errors","Only run OCR for words that had truth recorded in â€¦","Allowed size variance","Fraction of xheight","Fraction of xheight","Max initial cluster size","Min initial cluster spacing","Max allowed deviation of blob top outside of font data","Min change in xht before actually trying it","Score penalty (0.1 = 10%) added if an xheight is â€¦","Score penalty (0.1 = 10%) added if there are subscripts or â€¦","Get the variableâ€™s name as used by Tesseract","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Extract text from image as XML-formatted string with Alto â€¦","Get the given level kind of components (block, textline, â€¦","Extract text from image as HTML with bounding box â€¦","","Returns a box file for LSTM training from the internal â€¦","","","Extract text from image as TSV-formatted string.","Extract text from current selected region of the image. By â€¦","Extract text from image as a string formatted in the same â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Low level wrapper for Leptonica C API","","","","Override image resolution if not detected","Set image to use for OCR.","Set the source image from an in-memory file","Restrict OCR to a specific region of the image.","Override image resolution. Can be used to suppress â€œâ€¦","Set the value of an internal Tesseract parameter.","Low level wrapper for Tesseracteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderapper around Leptonicaâ€™s <code>Box</code> structure","","","","","","","","","","","","","","","","","","","","Wrapper for <code>boxCreateValid</code>","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Convinience wrapper for Self::create_valid","","Read an image from a local file.","Like pix_read, but reads the image from memory instead of â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the given level kind of components (block, textline, â€¦","","Get the dimensions of the currently loaded image, or None â€¦","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Provide an image for Tesseract to recognize.","","Override image resolution. Can be used to suppress â€œâ€¦","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,0,1,1,1,1,2,1,2,2,2,2,2,2,2,2,2,2,2,1,0,2,2,2,2,2,2,2,2,2,0,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,3,3,3,3,3,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,8,9,10,11,12,13,14,14,0,0,0,0,4,0,0,0,0,0,0,15,16,0,17,0,8,9,10,0,16,0,18,17,0,0,0,0,0,0,0,0,14,19,19,14,14,14,0,0,0,0,0,20,21,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,0,16,0,20,21,0,0,0,22,23,0,16,0,0,4,0,16,17,17,17,17,3,0,24,25,22,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,17,17,0,0,0,5,6,7,8,9,10,11,12,13,0,16,0,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,27,15,28,28,14,17,17,17,29,29,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,31,32,33,34,35,36,37,38,39,0,0,0,40,0,0,0,0,0,0,38,41,0,0,42,43,43,43,43,0,0,0,0,0,0,0,0,44,0,0,0,0,30,41,0,0,0,0,0,0,0,0,41,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,71,83,84,87,96,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,41,41,73,0,77,0,0,0,0,0,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,0,76,76,95,75,75,70,82,0,42,0,0,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,101,79,81,79,81,82,95,0,42,65,66,79,81,82,92,94,95,100,76,76,75,0,74,40,0,0,31,32,44,39,100,0,74,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,41,35,43,99,0,0,0,0,63,64,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,101,0,0,0,0,0,0,0,45,46,47,48,49,50,51,26,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,20,21,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,69,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,0,43,0,0,0,0,0,99,102,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,0,0,0,0,0,0,0,0,0,0,0,68,44,74,74,74,100,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,72,74,76,42,78,82,85,90,91,92,94,95,74,74,74,77,0,0,0,0,0,100,36,97,99,82,101,64,0,0,0,0,0,0,0,0,0,0,0,0,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,70,0,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,78,0,0,0,0,70,74,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,40,40,40,40,41,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,41,73,41,41,41,74,73,42,41,73,42,41,41,41,0,0,0,77,42,73,41,41,74,40,41,76,73,74,41,41,0,0,0,0,99,0,73,0,0,0,0,31,62,32,63,33,34,35,38,72,77,80,39,83,84,86,87,88,89,93,96,100,42,41,41,42,78,42,36,74,44,44,42,98,40,31,62,32,63,33,65,34,35,36,67,37,38,72,73,80,39,83,84,86,87,88,89,93,96,79,40,74,73,44,42,78,73,44,98,44,98,44,44,40,40,41,44,41,44,44,98,44,44,98,44,44,98,64,76,76,0,76,42,78,77,76,37,66,0,101,37,74,0,40,42,78,75,0,0,40,101,41,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,74,91,74,91,77,77,77,77,77,77,77,0,90,96,0,0,75,75,102,74,70,0,0,0,0,0,0,0,0,71,72,78,83,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,84,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,42,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,41,41,41,42,42,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,40,40,74,44,40,40,75,75,75,0,0,0,0,0,0,0,0,0,0,77,76,66,0,0,0,0,89,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,42,42,42,40,42,78,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,56,57,0,60,0,60,60,0,0,0,42,0,0,0,0,41,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,73,74,31,32,33,65,71,82,83,85,86,88,92,93,94,0,74,0,0,0,0,0,0,0,0,0,0,0,102,0,55,56,57,0,0,0,76,0,0,0,0,0,70,74,74,69,75,0,60,0,0,0,0,0,0,0,41,77,42,74,97,73,74,74,74,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,41,41,75,0,0,97,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,44,0,0,65,43,95,44,0,42,74,0,43,82,71,0,0,0,71,76,82,0,0,0,0,0,0,0,0,0,0,37,71,0,0,0,61,61,31,32,60,101,0,0,0,71,0,0,0,61,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,41,0,79,81,79,81,0,0,0,99,41,0,99,82,95,97,42,41,0,0,0,0,0,0,75,77,0,0,0,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,77,41,44,44,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,99,59,58,59,58,76,45,46,47,48,49,50,51,26,15,28,24,25,52,53,54,3,55,56,57,27,58,59,18,22,23,16,17,14,29,20,19,21,5,6,7,8,9,10,11,12,13,60,4,61,31,62,32,63,64,33,65,34,35,66,36,67,37,68,69,70,38,43,71,72,73,74,75,76,77,42,78,79,80,81,82,39,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,44,99,100,101,40,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,68,0,0,70,0,43,0,0,0,0,0,0,0,0,0,0,74,74,72,74,76,42,78,82,85,90,91,92,94,95,0,0,0,42,77,97,43,82,92,94,0,0,0,0,0,0,0,0,0,0,85,88,75,97,91,77,82,92,94,95,77,85,88,75,97,91,82,92,94,95,74,0,0,0,0,0,103,103,103,0,0,103,104,105,106,107,103,104,105,106,107,103,104,104,104,104,103,103,104,105,106,107,103,103,103,104,106,105,106,105,105,106,107,103,104,106,107,104,104,107,0,0,105,106,103,103,105,106,107,103,104,105,106,107,103,104,105,106,107,103,104,108,109,110,0,0,0,0,0,111,112,113,111,112,113,111,111,112,111,111,112,112,113,111,112,113,113,113,113,113,113,113,113,113,113,113,111,112,113,113,111,113,113,113,113,113,113,111,112,111,112,113,111,112,113,111,112,113],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["variable",4]],["cstr",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["variable",4]],["variable",4]],[[["",0],["",0]]],[[["variable",4],["variable",4]],["bool",0]],[[["variable",4],["formatter",3]],["result",6]],[[]],[[]],[[["leptess",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["leptess",3],["tesspageiteratorlevel",6],["bool",0]],["option",4,[["boxa",3]]]],[[["leptess",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["leptess",3]],["option",4]],[[["leptess",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["leptess",3]],["option",4,[["boxa",3]]]],[[["leptess",3]],["i32",0]],[[["leptess",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["leptess",3]],["result",4,[["string",3],["utf8error",3]]]],[[["leptess",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[]],[[]],null,[[["leptess",3]],["i32",0]],[[["option",4,[["str",0]]],["str",0]],["result",4,[["leptess",3],["tessiniterror",3]]]],[[["leptess",3]],["i32",0]],[[["leptess",3],["i32",0]]],[[["leptess",3],["asref",8,[["path",3]]]],["result",4,[["pixerror",4]]]],[[["leptess",3]],["result",4,[["pixerror",4]]]],[[["leptess",3],["asref",8,[["box",3]]]]],[[["leptess",3],["i32",0]]],[[["leptess",3],["variable",4],["str",0]],["result",4,[["tesssetvariableerror",3]]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0]],["tessresultrenderer",0]],null,[[["tessbaseapi",0],["u32",0],["i8",0]],["i32",0]],[[["tessbaseapi",0]],["i32",0]],[[["tessbaseapi",0]],["tesspageiterator",0]],[[["tessbaseapi",0]]],[[["tessbaseapi",0]]],[[],["tessbaseapi",0]],[[["tessbaseapi",0]]],[[["tessbaseapi",0]]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0],["i8",0],["i32",0]],["i32",0]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0],["u32",0],["i32",0],["pixa",0],["i32",0]],["boxa",0]],[[["tessbaseapi",0],["u32",0],["i32",0],["i32",0],["i32",0],["pixa",0],["i32",0],["i32",0]],["boxa",0]],[[["tessbaseapi",0],["pixa",0]],["boxa",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0],["i8",0],["f64",0]],["i32",0]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0]],["pix",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0],["i8",0],["i32",0]],["i32",0]],[[["tessbaseapi",0]],["tessresultiterator",0]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0]],["tessmutableiterator",0]],[[["tessbaseapi",0],["c_void",0]],["u64",0]],[[["tessbaseapi",0]],["u32",0]],[[["tessbaseapi",0],["pixa",0]],["boxa",0]],[[["tessbaseapi",0]],["i32",0]],[[["tessbaseapi",0],["i8",0]],["i8",0]],[[["tessbaseapi",0],["pixa",0],["i32",0]],["boxa",0]],[[["tessbaseapi",0],["i32",0],["f32",0]],["i32",0]],[[["tessbaseapi",0],["pixa",0],["i32",0]],["boxa",0]],[[["tessbaseapi",0],["i32",0],["i32",0],["pixa",0],["i32",0],["i32",0]],["boxa",0]],[[["tessbaseapi",0]],["pix",0]],[[["tessbaseapi",0]],["i32",0]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0]],["i8",0]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0],["i32",0]],["i8",0]],[[["tessbaseapi",0],["pixa",0]],["boxa",0]],[[["tessbaseapi",0],["i8",0],["i8",0],["u32",0],["i8",0],["i32",0]],["i32",0]],[[["tessbaseapi",0],["i8",0],["i8",0],["u32",0]],["i32",0]],[[["tessbaseapi",0],["i8",0],["i8",0]],["i32",0]],[[["tessbaseapi",0],["i8",0],["i8",0],["u32",0],["i8",0],["i32",0],["i8",0],["i8",0],["u64",0],["i32",0]],["i32",0]],[[["tessbaseapi",0]]],[[["tessbaseapi",0],["i8",0],["i8",0]],["i32",0]],[[["tessbaseapi",0],["i8",0]],["i32",0]],[[["tessbaseapi",0]],["i32",0]],[[["tessbaseapi",0],["_io_file",0]]],[[["tessbaseapi",0],["i8",0]],["i32",0]],[[["tessbaseapi",0],["pix",0],["i32",0],["i8",0],["i8",0],["i32",0],["tessresultrenderer",0]],["i32",0]],[[["tessbaseapi",0],["i8",0],["i8",0],["i32",0],["tessresultrenderer",0]],["i32",0]],[[["tessbaseapi",0],["i8",0]]],[[["tessbaseapi",0],["i8",0]]],[[["tessbaseapi",0],["etext_desc",0]],["i32",0]],[[["tessbaseapi",0],["etext_desc",0]],["i32",0]],[[["tessbaseapi",0],["u8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["tessbaseapi",0],["i8",0],["i8",0]],["i32",0]],[[["tessbaseapi",0],["u8",0],["i32",0],["i32",0],["i32",0],["i32",0]]],[[["tessbaseapi",0],["pix",0]]],[[["tessbaseapi",0],["pix",0]]],[[["tessbaseapi",0],["i8",0]]],[[["tessbaseapi",0],["f64",0]]],[[["tessbaseapi",0],["i8",0]]],[[["tessbaseapi",0],["u32",0]]],[[["tessbaseapi",0],["i32",0],["i32",0],["i32",0],["i32",0]]],[[["tessbaseapi",0],["i32",0]]],[[["tessbaseapi",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0]],["tessresultrenderer",0]],null,null,[[["tesschoiceiterator",0]],["f32",0]],[[["tesschoiceiterator",0]]],[[["tesschoiceiterator",0]],["i8",0]],[[["tesschoiceiterator",0]],["i32",0]],[[["i32",0]]],[[["tessresultrenderer",0]]],[[["i8",0]]],[[["i8",0]]],[[["i8",0]],["tessresultrenderer",0]],[[["i8",0],["i32",0]],["tessresultrenderer",0]],[[["i8",0]],["tessresultrenderer",0]],[[],["etext_desc",0]],[[["etext_desc",0]]],[[["etext_desc",0]],["c_void",0]],[[["etext_desc",0]],["i32",0]],[[["etext_desc",0],["option",4]]],[[["etext_desc",0],["c_void",0]]],[[["etext_desc",0],["i32",0]]],[[["etext_desc",0],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,[[["i8",0],["i8",0],["i32",0]],["tessresultrenderer",0]],null,[[["tesspageiterator",0],["u32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["tesspageiterator",0]]],[[["tesspageiterator",0]],["u32",0]],[[["tesspageiterator",0],["u32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["tesspageiterator",0]],["tesspageiterator",0]],[[["tesspageiterator",0]]],[[["tesspageiterator",0],["u32",0]],["pix",0]],[[["tesspageiterator",0],["u32",0],["i32",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["tesspageiterator",0],["u32",0]],["i32",0]],[[["tesspageiterator",0],["u32",0],["u32",0]],["i32",0]],null,null,null,null,null,null,[[["tesspageiterator",0],["u32",0]],["i32",0]],[[["tesspageiterator",0],["u32",0],["u32",0],["u32",0],["f32",0]]],[[["tesspageiterator",0],["u32",0],["i32",0],["i32",0],["i32",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tessresultiterator",0],["u32",0]],["f32",0]],[[["tessresultiterator",0]],["tessresultiterator",0]],[[["tessresultiterator",0]]],[[["tessresultiterator",0]],["tesschoiceiterator",0]],[[["tessresultiterator",0]],["tesspageiterator",0]],[[["tessresultiterator",0]],["tesspageiterator",0]],[[["tessresultiterator",0],["u32",0]],["i8",0]],[[["tessresultiterator",0],["u32",0]],["i32",0]],[[["tessresultiterator",0]],["i32",0]],[[["tessresultiterator",0]],["i32",0]],[[["tessresultiterator",0]],["i32",0]],[[["tessresultiterator",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["tessresultiterator",0]],["i32",0]],[[["tessresultiterator",0]],["i32",0]],[[["tessresultiterator",0]],["i8",0]],null,[[["tessresultrenderer",0],["tessbaseapi",0]],["i32",0]],[[["tessresultrenderer",0],["i8",0]],["i32",0]],[[["tessresultrenderer",0]],["i32",0]],[[["tessresultrenderer",0]],["i8",0]],[[["tessresultrenderer",0]],["i32",0]],[[["tessresultrenderer",0],["tessresultrenderer",0]]],[[["tessresultrenderer",0]],["tessresultrenderer",0]],[[["tessresultrenderer",0]],["i8",0]],[[["i8",0]],["tessresultrenderer",0]],null,null,null,null,[[["i8",0]],["tessresultrenderer",0]],[[["i8",0]],["tessresultrenderer",0]],[[],["i8",0]],[[["i8",0]],["tessresultrenderer",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u64",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0],["u64",0],["i32",0],["_io_file",0]],["i64",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["_io_file",0],["i32",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["_io_file",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0]],["i64",0]],[[]],[[["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["f32",0],["f32",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u64",0],["u64",0]],["c_void",0]],null,[[["u64",0]],["c_void",0]],null,[[["l_rbtree",0],["u32",0]],["i32",0]],[[["i8",0],["i8",0]],["i8",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],null,null,null,null,null,null,null,null,null,[[["u8",0],["u64",0],["u8",0],["u64",0]],["l_dna",0]],[[["u8",0],["u64",0],["u8",0],["u64",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["u8",0],["u64",0],["u8",0],["u64",0],["u64",0],["i32",0]],["u8",0]],null,[[["option",4]],["i32",0]],[[["option",4]],["i32",0]],[[["i8",0]],["f64",0]],[[["i8",0]],["i32",0]],[[["i8",0]],["i64",0]],[[["i8",0]],["i64",0]],null,null,[[["i8",0],["i32",0],["i32",0]],["i8",0]],[[["i32",0]],["i32",0]],null,null,null,null,null,[[["u8",0],["i32",0]],["l_bytebuffer",0]],[[["l_bytebuffer",0]]],[[["l_bytebuffer",0],["u64",0]],["u8",0]],[[["l_bytebuffer",0],["i32",0]],["i32",0]],[[["l_bytebuffer",0],["u8",0],["i32",0]],["i32",0]],[[["l_bytebuffer",0],["_io_file",0],["i32",0]],["i32",0]],[[["l_bytebuffer",0],["u8",0],["u64",0],["u64",0]],["i32",0]],[[["l_bytebuffer",0],["_io_file",0],["u64",0],["u64",0]],["i32",0]],null,[[["f32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],null,null,null,null,[[["i8",0],["i32",0]],["l_bmf",0]],[[["l_bmf",0]]],[[["l_bmf",0],["i8",0],["i32",0]],["i32",0]],[[["l_bmf",0],["i8",0],["i32",0],["i32",0],["i32",0]],["sarray",0]],[[["l_bmf",0],["i8",0]],["pix",0]],[[["l_bmf",0],["i8",0],["i32",0]],["i32",0]],[[["l_bmf",0],["i8",0],["i32",0]],["i32",0]],[[["l_bmf",0],["i8",0],["sarray",0]],["numa",0]],nullbox",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["box",0],["box",0]],["box",0]],[[["box",0],["i32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0]],["box",0]],[[["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0]],["box",0]],[[["box",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["box",0],["i32",0]],["i32",0]],[[["box",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["box",0],["i32",0]],["pta",0]],[[["box",0]],["box",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["box",0]]],[[["box",0],["box",0],["i32",0]],["i32",0]],[[["box",0],["f32",0],["f32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["box",0],["i32",0]],["i32",0]],[[["box",0],["i32",0]],["i32",0]],[[["box",0],["box",0],["i32",0]],["i32",0]],[[["box",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["box",0],["f32",0]],["i32",0]],[[["box",0],["box",0]],["box",0]],[[["_io_file",0],["box",0]],["i32",0]],[[["box",0],["box",0],["i32",0],["i32",0]],["box",0]],[[["box",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["box",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["box",0],["i32",0],["i32",0],["f32",0],["f32",0]],["box",0]],[[["box",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["box",0]],null,null,null,null,null,null,null,[[["boxa",0],["box",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["f32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["numa",0]],["boxa",0]],[[["boxa",0]],["i32",0]],[[["boxa",0],["box",0]],["boxa",0]],[[["boxa",0],["pixa",0]],["boxa",0]],[[["boxa",0],["boxa",0],["boxa",0],["boxa",0],["pixa",0]],["i32",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0],["f32",0],["f32",0],["pix",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["box",0]],["boxa",0]],[[["boxa",0],["box",0],["i32",0]],["i32",0]],[[["boxa",0],["boxa",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0]],["pta",0]],[[["boxa",0],["i32",0]],["boxa",0]],[[["i32",0]],["boxa",0]],[[["boxa",0]]],[[["boxa",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["boxa",0],["i32",0],["i32",0]],["boxaa",0]],[[["boxa",0],["boxa",0],["i32",0],["numa",0],["i32",0]],["i32",0]],[[["boxa",0]],["i32",0]],[[["boxa",0],["i32",0]],["i32",0]],[[["boxa",0],["numa",0],["numa",0],["numa",0],["numa",0],["numa",0],["numa",0],["i32",0]],["i32",0]],[[["boxa",0],["pta",0],["pta",0],["pta",0],["pta",0],["pta",0],["pta",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0]],["pta",0]],[[["boxa",0],["numa",0]],["numaa",0]],[[["boxa",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0]],["numa",0]],[[["boxa",0],["i32",0],["i32",0],["numaa",0],["numaa",0]],["i32",0]],[[["boxa",0],["i32",0]],["i32",0]],[[["boxa",0],["f32",0],["f32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0]],["box",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["box",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0]],["box",0]],[[["boxa",0],["i32",0],["i32",0]],["box",0]],[[["boxa",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["numa",0],["numa",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0]],["box",0]],[[["boxa",0]],["i32",0]],[[["boxa",0],["box",0],["i32",0],["i32",0],["f32",0],["i32",0],["f32",0],["i32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["f32",0],["f32",0],["numa",0]],["boxa",0]],[[["boxa",0],["box",0]],["i32",0]],[[["boxa",0],["i32",0],["box",0]],["i32",0]],[[["boxa",0],["box",0]],["boxa",0]],[[["boxa",0],["box",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0]],["i32",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0]],["numa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["boxa",0],["f32",0],["i32",0]],["numa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["boxa",0],["boxa",0],["i32",0]],["boxa",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0]],["boxa",0]],[[["boxa",0],["boxa",0]],["boxa",0]],[[["boxa",0],["i8",0],["numa",0],["numa",0],["numa",0],["numa",0],["pix",0]],["i32",0]],[[["boxa",0],["i8",0],["numa",0],["numa",0],["pix",0]],["i32",0]],[[["boxa",0],["f32",0]],["boxa",0]],[[["i8",0]],["boxa",0]],[[["u8",0],["u64",0]],["boxa",0]],[[["_io_file",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["pixa",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["f32",0],["numa",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["pixa",0]],["boxa",0]],[[["boxa",0],["i32",0],["f32",0],["f32",0],["f32",0],["numa",0],["numa",0],["f32",0]],["boxa",0]],[[["boxa",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["box",0]],["i32",0]],[[["boxa",0],["i32",0],["box",0]],["i32",0]],[[["boxa",0],["f32",0],["f32",0],["f32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["i32",0]],["boxa",0]],[[["boxa",0],["f32",0],["f32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["f32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["f32",0],["i32",0]],["box",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["numa",0],["i32",0]],["boxa",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["pta",0],["i32",0]],["boxa",0]],[[["boxa",0],["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["numa",0]],["i32",0]],[[["boxa",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["boxa",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["numa",0]],["boxa",0]],[[["boxa",0],["numaa",0],["i32",0],["i32",0],["i32",0]],["boxaa",0]],[[["boxa",0],["numaa",0]],["boxaa",0]],[[["boxa",0],["numa",0]],["boxa",0]],[[["boxa",0],["i32",0],["boxa",0],["boxa",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0]],["i32",0]],[[["boxa",0],["i32",0],["i32",0],["f32",0],["f32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["boxa",0]],[[["boxa",0],["f32",0],["f32",0]],["boxa",0]],[[["boxa",0],["i32",0],["i32",0]],["boxa",0]],[[["i8",0],["boxa",0]],["i32",0]],[[["i8",0],["boxa",0]],["i32",0]],[[["u8",0],["u64",0],["boxa",0]],["i32",0]],[[["boxa",0]],["i32",0]],[[["_io_file",0],["boxa",0]],["i32",0]],[[["boxaa",0],["i32",0],["box",0],["i32",0]],["i32",0]],[[["boxaa",0],["boxa",0],["i32",0]],["i32",0]],[[["boxaa",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["boxaa",0],["i32",0]],["boxaa",0]],[[["i32",0]],["boxaa",0]],[[["boxaa",0]]],[[["pix",0],["boxaa",0],["i32",0],["i32",0],["u32",0],["u32",0],["i32",0],["i32",0]],["pix",0]],[[["boxaa",0]],["i32",0]],[[["boxaa",0],["i32",0]],["i32",0]],[[["boxaa",0],["i32",0],["boxa",0]],["i32",0]],[[["boxaa",0],["i32",0],["box",0],["i32",0]],["boxa",0]],[[["boxaa",0],["numa",0],["i32",0]],["boxa",0]],[[["boxaa",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["boxaa",0]],["i32",0]],[[["boxaa",0],["i32",0],["i32",0]],["boxa",0]],[[["boxaa",0]],["i32",0]],[[["boxaa",0],["i32",0],["i32",0],["box",0],["boxa",0]],["i32",0]],[[["boxaa",0],["boxa",0]],["i32",0]],[[["boxaa",0],["i32",0],["boxa",0]],["i32",0]],[[["boxaa",0],["boxaa",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0]],["boxaa",0]],[[["i8",0]],["boxaa",0]],[[["i8",0],["i8",0],["i32",0],["i32",0]],["boxaa",0]],[[["u8",0],["u64",0]],["boxaa",0]],[[["_io_file",0]],["boxaa",0]],[[["boxaa",0],["i32",0]],["i32",0]],[[["boxaa",0],["i32",0],["boxa",0]],["i32",0]],[[["boxaa",0],["i32",0],["i32",0],["i32",0]],["boxaa",0]],[[["boxaa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["boxaa",0]],["boxaa",0]],[[["i8",0],["boxaa",0]],["i32",0]],[[["u8",0],["u64",0],["boxaa",0]],["i32",0]],[[["_io_file",0],["boxaa",0]],["i32",0]],null,[[["c_void",0],["c_void",0],["u64",0],["u64",0],["option",4]],["c_void",0]],null,[[["i8",0]]],[[["u64",0],["u64",0]],["c_void",0]],null,[[["pix",0]],["ccbord",0]],[[["ccbord",0]]],[[["ccborda",0],["ccbord",0]],["i32",0]],[[["pix",0],["i32",0]],["ccborda",0]],[[["ccborda",0]]],[[["ccborda",0]],["pix",0]],[[["ccborda",0]],["pix",0]],[[["ccborda",0]],["pix",0]],[[["ccborda",0]],["pix",0]],[[["ccborda",0]],["i32",0]],[[["ccborda",0],["i32",0]],["i32",0]],[[["ccborda",0]],["i32",0]],[[["ccborda",0]],["i32",0]],[[["ccborda",0],["i32",0]],["ccbord",0]],[[["ccborda",0]],["i32",0]],[[["i8",0]],["ccborda",0]],[[["_io_file",0]],["ccborda",0]],[[["ccborda",0],["i32",0]],["i32",0]],[[["i8",0],["ccborda",0]],["i32",0]],[[["i8",0],["ccborda",0]],["i32",0]],[[["i8",0],["ccborda",0]],["i8",0]],[[["_io_file",0],["ccborda",0]],["i32",0]],null,[[["i32",0]]],null,null,null,[[["l_compressed_data",0],["i8",0],["u8",0],["u64",0]],["i32",0]],null,[[],["i32",0]],[[["_io_file",0]]],[[["_io_file",0]]],null,null,[[["tessresultrenderer",3]],["tessresultrenderer",3]],[[["tessbaseapi",3]],["tessbaseapi",3]],[[["tesspageiterator",3]],["tesspageiterator",3]],[[["tessresultiterator",3]],["tessresultiterator",3]],[[["tessmutableiterator",3]],["tessmutableiterator",3]],[[["tesschoiceiterator",3]],["tesschoiceiterator",3]],[[["etext_desc",3]],["etext_desc",3]],[[["__fsid_t",3]],["__fsid_t",3]],[[["__mbstate_t",3]],["__mbstate_t",3]],[[["__mbstate_t__bindgen_ty_1",19]],["__mbstate_t__bindgen_ty_1",19]],[[["_g_fpos_t",3]],["_g_fpos_t",3]],[[["_g_fpos64_t",3]],["_g_fpos64_t",3]],[[["_io_marker",3]],["_io_marker",3]],[[["_io_codecvt",3]],["_io_codecvt",3]],[[["_io_wide_data",3]],["_io_wide_data",3]],[[["_io_file",3]],["_io_file",3]],[[["div_t",3]],["div_t",3]],[[["ldiv_t",3]],["ldiv_t",3]],[[["lldiv_t",3]],["lldiv_t",3]],[[["__sigset_t",3]],["__sigset_t",3]],[[["timeval",3]],["timeval",3]],[[["timespec",3]],["timespec",3]],[[["fd_set",3]],["fd_set",3]],[[["__pthread_internal_list",3]],["__pthread_internal_list",3]],[[["__pthread_internal_slist",3]],["__pthread_internal_slist",3]],[[["__pthread_mutex_s",3]],["__pthread_mutex_s",3]],[[["__pthread_rwlock_arch_t",3]],["__pthread_rwlock_arch_t",3]],[[["__pthread_cond_s",3]],["__pthread_cond_s",3]],[[["__pthread_cond_s__bindgen_ty_1",19]],["__pthread_cond_s__bindgen_ty_1",19]],[[["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]],[[["__pthread_cond_s__bindgen_ty_2",19]],["__pthread_cond_s__bindgen_ty_2",19]],[[["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]],[[["pthread_mutexattr_t",19]],["pthread_mutexattr_t",19]],[[["pthread_condattr_t",19]],["pthread_condattr_t",19]],[[["pthread_attr_t",19]],["pthread_attr_t",19]],[[["pthread_mutex_t",19]],["pthread_mutex_t",19]],[[["pthread_cond_t",19]],["pthread_cond_t",19]],[[["pthread_rwlock_t",19]],["pthread_rwlock_t",19]],[[["pthread_rwlockattr_t",19]],["pthread_rwlockattr_t",19]],[[["pthread_barrier_t",19]],["pthread_barrier_t",19]],[[["pthread_barrierattr_t",19]],["pthread_barrierattr_t",19]],[[["random_data",3]],["random_data",3]],[[["drand48_data",3]],["drand48_data",3]],[[["l_walltimer",3]],["l_walltimer",3]],[[["numa",3]],["numa",3]],[[["numaa",3]],["numaa",3]],[[["l_dna",3]],["l_dna",3]],[[["l_dnaa",3]],["l_dnaa",3]],[[["l_dnahash",3]],["l_dnahash",3]],[[["sarray",3]],["sarray",3]],[[["l_bytea",3]],["l_bytea",3]],[[["l_bytebuffer",3]],["l_bytebuffer",3]],[[["l_heap",3]],["l_heap",3]],[[["doublelinkedlist",3]],["doublelinkedlist",3]],[[["l_ptra",3]],["l_ptra",3]],[[["l_ptraa",3]],["l_ptraa",3]],[[["l_queue",3]],["l_queue",3]],[[["rb_type",19]],["rb_type",19]],[[["l_rbtree",3]],["l_rbtree",3]],[[["l_rbtree_node",3]],["l_rbtree_node",3]],[[["l_stack",3]],["l_stack",3]],[[["l_bmf",3]],["l_bmf",3]],[[["ccbord",3]],["ccbord",3]],[[["ccborda",3]],["ccborda",3]],[[["l_dewarpa",3]],["l_dewarpa",3]],[[["l_dewarp",3]],["l_dewarp",3]],[[["gplot",3]],["gplot",3]],[[["l_compressed_data",3]],["l_compressed_data",3]],[[["l_pdf_data",3]],["l_pdf_data",3]],[[["jbclasser",3]],["jbclasser",3]],[[["jbdata",3]],["jbdata",3]],[[["sel",3]],["sel",3]],[[["sela",3]],["sela",3]],[[["l_kernel",3]],["l_kernel",3]],[[["pix",3]],["pix",3]],[[["pixcolormap",3]],["pixcolormap",3]],[[["rgba_quad",3]],["rgba_quad",3]],[[["pixa",3]],["pixa",3]],[[["pixaa",3]],["pixaa",3]],[[["box",3]],["box",3]],[[["boxa",3]],["boxa",3]],[[["boxaa",3]],["boxaa",3]],[[["pta",3]],["pta",3]],[[["ptaa",3]],["ptaa",3]],[[["pixacc",3]],["pixacc",3]],[[["pixtiling",3]],["pixtiling",3]],[[["fpix",3]],["fpix",3]],[[["fpixa",3]],["fpixa",3]],[[["dpix",3]],["dpix",3]],[[["pixcomp",3]],["pixcomp",3]],[[["pixacomp",3]],["pixacomp",3]],[[["l_recog",3]],["l_recog",3]],[[["l_rch",3]],["l_rch",3]],[[["l_rcha",3]],["l_rcha",3]],[[["l_rdid",3]],["l_rdid",3]],[[["l_regparams",3]],["l_regparams",3]],[[["l_strcode",3]],["l_strcode",3]],[[["l_sudoku",3]],["l_sudoku",3]],[[["l_wshed",3]],["l_wshed",3]],[[["__va_list_tag",3]],["__va_list_tagpixcolormap",0],["pixcolormap",0],["i32",0],["i32",0]],["i32",0]],null,null,null,null,null,null,null,[[["numaa",0],["numaa",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["pixa",0]],["i32",0]],null,[[["i32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],null,[[["i8",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["i8",0],["i8",0],["f32",0],["f32",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["u32",0]],["u32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i8",0],["i32",0],["i32",0],["i32",0],["i8",0],["l_pdf_data",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i8",0],["l_pdf_data",0],["i32",0]],["i32",0]],[[["u32",0]],["u32",0]],[[["i8",0],["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0]],["boxaa",0]],[[["u16",0]],["u16",0]],[[["u32",0]],["u32",0]],[[["u16",0]],["u16",0]],[[["u32",0]],["u32",0]],[[["pta",0]],["pta",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["boxaa",0],["i32",0],["f32",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i8",0]],["i32",0]],[[["i8",0],["i32",0]],["i32",0]],[[["sarray",0],["i32",0],["i32",0],["i32",0]],["sarray",0]],[[["i8",0],["i8",0],["f32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i8",0],["i32",0],["i32",0],["i32",0],["i8",0],["l_pdf_data",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i8",0],["l_pdf_data",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["boxa",0],["i32",0],["f32",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["boxa",0],["i32",0],["f32",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],null,[[["i32",0],["i32",0]],["f32",0]],[[["i32",0],["i32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0]],["f32",0]],[[["f32",0],["f32",0]],["f32",0]],[[["f32",0],["f32",0]],["f32",0]],[[["i8",0]],["i8",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0],["i32",0],["i32",0]],["u8",0]],[[["i8",0],["i32",0],["i32",0]],["u8",0]],null,null,null,null,null,null,null,null,[[["l_dewarp",0],["i32",0],["i8",0]],["i32",0]],[[["l_dewarp",0],["i8",0]],["i32",0]],[[["pix",0],["i32",0]],["l_dewarp",0]],[[["i32",0],["i32",0]],["l_dewarp",0]],[[["l_dewarp",0],["i8",0],["i32",0]],["i32",0]],[[["l_dewarp",0]]],[[["l_dewarp",0],["ptaa",0]],["i32",0]],[[["l_dewarp",0],["pix",0],["f32",0],["i32",0]],["i32",0]],[[["l_dewarp",0],["ptaa",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["ptaa",0]],[[["l_dewarp",0]],["i32",0]],[[["l_dewarp",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["l_dewarp",0]],[[["u8",0],["u64",0]],["l_dewarp",0]],[[["_io_file",0]],["l_dewarp",0]],[[["pix",0],["ptaa",0],["f32",0],["i32",0]],["ptaa",0]],[[["l_dewarpa",0],["sarray",0],["boxa",0],["i32",0],["i32",0],["i8",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["l_dewarpa",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["l_dewarpa",0]],["i32",0]],[[["pix",0],["pix",0],["l_dewarpa",0],["pix",0],["i32",0]],["i32",0]],[[["i8",0],["l_dewarp",0]],["i32",0]],[[["u8",0],["u64",0],["l_dewarp",0]],["i32",0]],[[["_io_file",0],["l_dewarp",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["pix",0],["i32",0],["i32",0],["i32",0],["pix",0],["i8",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0],["boxa",0],["i8",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_dewarpa",0]],[[["pixacomp",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_dewarpa",0]],[[["l_dewarpa",0]]],[[["l_dewarpa",0],["i32",0]],["i32",0]],[[["l_dewarpa",0],["i32",0]],["l_dewarp",0]],[[["_io_file",0],["l_dewarpa",0]],["i32",0]],[[["l_dewarpa",0],["l_dewarp",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["i32",0]],["i32",0]],[[["l_dewarpa",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["l_dewarpa",0]],[[["u8",0],["u64",0]],["l_dewarpa",0]],[[["_io_file",0]],["l_dewarpa",0]],[[["l_dewarpa",0]],["i32",0]],[[["l_dewarpa",0],["i32",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["l_dewarpa",0],["i32",0]],["i32",0]],[[["l_dewarpa",0],["i32",0],["i32",0]],["i32",0]],[[["l_dewarpa",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["l_dewarpa",0]],["i32",0]],[[["l_dewarpa",0],["i32",0]],["i32",0]],[[["i8",0],["l_dewarpa",0]],["i32",0]],[[["u8",0],["u64",0],["l_dewarpa",0]],["i32",0]],[[["_io_file",0],["l_dewarpa",0]],["i32",0]],null,null,null,null,null,[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["u32",0],["i32",0],["u32",0],["u32",0],["i32",0],["i32",0],["i32",0]]],[[["i32",0],["i32",0]],["div_t",3]],null,null,null,null,[[["dpix",0],["f64",0],["f64",0]],["i32",0]],[[["dpix",0],["i32",0]],["i32",0]],[[["dpix",0]],["dpix",0]],[[["dpix",0]],["fpix",0]],[[["dpix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["dpix",0],["dpix",0]],["dpix",0]],[[["dpix",0],["dpix",0]],["i32",0]],[[["i32",0],["i32",0]],["dpix",0]],[[["dpix",0]],["dpix",0]],[[["dpix",0]]],[[["dpix",0],["dpix",0]],["dpix",0]],[[["dpix",0]],["f64",0]],[[["dpix",0],["i32",0],["i32",0]],["i32",0]],[[["dpix",0],["f64",0],["i32",0],["i32",0]],["i32",0]],[[["dpix",0],["f64",0],["i32",0],["i32",0]],["i32",0]],[[["dpix",0],["i32",0],["i32",0],["f64",0]],["i32",0]],[[["dpix",0]],["i32",0]],[[["dpix",0],["i32",0],["i32",0]],["i32",0]],[[["dpix",0]],["i32",0]],[[["dpix",0],["dpix",0],["dpix",0],["f32",0],["f32",0]],["dpix",0]],[[["i8",0]],["dpix",0]],[[["u8",0],["u64",0]],["dpix",0]],[[["_io_file",0]],["dpix",0]],[[["dpix",0],["dpix",0]],["i32",0]],[[["dpix",0],["i32",0]],["dpix",0]],[[["dpix",0],["f64",0]],["i32",0]],[[["dpix",0],["f64",0]],["i32",0]],[[["dpix",0],["i32",0],["i32",0]],["i32",0]],[[["dpix",0],["i32",0],["i32",0],["f64",0]],["i32",0]],[[["dpix",0],["i32",0],["i32",0]],["i32",0]],[[["dpix",0],["i32",0]],["i32",0]],[[["i8",0],["dpix",0]],["i32",0]],[[["u8",0],["u64",0],["dpix",0]],["i32",0]],[[["_io_file",0],["dpix",0]],["i32",0]],[[["i32",0],["i8",0]],["i32",0]],[[],["f64",0]],null,[[["drand48_data",0],["f64",0]],["i32",0]],[[["f64",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["f64",0],["i32",0],["i32",0],["i32",0],["i8",0],["u64",0]],["i32",0]],[[["u8",0],["i32",0],["i32",0]],["i8",0]],[[["u8",0],["i32",0],["i32",0]],["i8",0]],null,[[["u16",0]],["f64",0]],[[["u16",0],["drand48_data",0],["f64",0]],["i32",0]],[[["i32",0]]],[[["i8",0],["u8",0],["u64",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0]]],[[["u32",0],["i32",0],["i32",0],["i32",0]]],null,[[["_io_file",0]],["i32",0]],[[["f64",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["f64",0],["i32",0],["i32",0],["i32",0],["i8",0],["u64",0]],["i32",0]],null,null,[[["i32",0],["i8",0]],["_io_file",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["u8",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["pixcolormap",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0],["_g_fpos_t",0]],["i32",0]],[[["i8",0],["i32",0],["_io_file",0]],["i8",0]],[[["sela",0],["i32",0],["i8",0]],["i32",0]],[[["sela",0],["i32",0],["i8",0]],["i32",0]],[[["sela",0],["i32",0],["i8",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["u32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["f32",0],["f32",0],["i8",0]],["i32",0]],[[["i8",0],["f32",0],["f32",0],["i8",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["u8",0],["u64",0],["i8",0]],["i32",0]],[[["_io_file",0]],["i32",0]],null,[[["_io_file",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0]],["i32",0]],[[["u8",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0]],["i32",0]],[[["i32",0],["u32",0]],["i32",0]],[[["_io_file",0],["i32",0]],["i32",0]],null,[[["_io_file",0]]],[[["c_void",0],["u64",0],["i8",0]],["_io_file",0]],[[["sela",0],["i32",0],["i8",0]],["i32",0]],[[["sela",0],["i32",0],["i8",0]],["i32",0]],[[["sela",0],["i32",0],["i8",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["u32",0],["i32",0],["i32",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["u32",0],["i32",0],["i32",0]],["i32",0]],[[["tessresultrenderer",3],["formatter",3]],["result",4,[["error",3]]]],[[["tessbaseapi",3],["formatter",3]],["result",4,[["error",3]]]],[[["tesspageiterator",3],["formatter",3]],["result",4,[["error",3]]]],[[["tessresultiterator",3],["formatter",3]],["result",4,[["error",3]]]],[[["tessmutableiterator",3],["formatter",3]],["result",4,[["error",3]]]],[[["tesschoiceiterator",3],["formatter",3]],["result",4,[["error",3]]]],[[["etext_desc",3],["formatter",3]],["result",4,[["error",3]]]],[[["__fsid_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["_io_marker",3],["formatter",3]],["result",4,[["error",3]]]],[[["_io_codecvt",3],["formatter",3]],["result",4,[["error",3]]]],[[["_io_wide_data",3],["formatter",3]],["result",4,[["error",3]]]],[[["_io_file",3],["formatter",3]],["result",4,[["error",3]]]],[[["div_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["ldiv_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["lldiv_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["__sigset_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["timeval",3],["formatter",3]],["result",4,[["error",3]]]],[[["timespec",3],["formatter",3]],["result",4,[["error",3]]]],[[["fd_set",3],["formatter",3]],["result",4,[["error",3]]]],[[["__pthread_internal_list",3],["formatter",3]],["result",4,[["error",3]]]],[[["__pthread_internal_slist",3],["formatter",3]],["result",4,[["error",3]]]],[[["__pthread_mutex_s",3],["formatter",3]],["result",4,[["error",3]]]],[[["__pthread_rwlock_arch_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["random_data",3],["formatter",3]],["result",4,[["error",3]]]],[[["drand48_data",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_walltimer",3],["formatter",3]],["result",4,[["error",3]]]],[[["numa",3],["formatter",3]],["result",4,[["error",3]]]],[[["numaa",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_dna",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_dnaa",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_dnahash",3],["formatter",3]],["result",4,[["error",3]]]],[[["sarray",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_bytea",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_bytebuffer",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_heap",3],["formatter",3]],["result",4,[["error",3]]]],[[["doublelinkedlist",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_ptra",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_ptraa",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_queue",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_rbtree",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_stack",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_bmf",3],["formatter",3]],["result",4,[["error",3]]]],[[["ccbord",3],["formatter",3]],["result",4,[["error",3]]]],[[["ccborda",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_dewarpa",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_dewarp",3],["formatter",3]],["result",4,[["error",3]]]],[[["gplot",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_compressed_data",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_pdf_data",3],["formatter",3]],["result",4,[["error",3]]]],[[["jbclasser",3],["formatter",3]],["result",4,[["error",3]]]],[[["jbdata",3],["formatter",3]],["result",4,[["error",3]]]],[[["sel",3],["formatter",3]],["result",4,[["error",3]]]],[[["sela",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_kernel",3],["formatter",3]],["result",4,[["error",3]]]],[[["pix",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixcolormap",3],["formatter",3]],["result",4,[["error",3]]]],[[["rgba_quad",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixa",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixaa",3],["formatter",3]],["result",4,[["error",3]]]],[[["box",3],["formatter",3]],["result",4,[["error",3]]]],[[["boxa",3],["formatter",3]],["result",4,[["error",3]]]],[[["boxaa",3],["formatter",3]],["result",4,[["error",3]]]],[[["pta",3],["formatter",3]],["result",4,[["error",3]]]],[[["ptaa",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixacc",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixtiling",3],["formatter",3]],["result",4,[["error",3]]]],[[["fpix",3],["formatter",3]],["result",4,[["error",3]]]],[[["fpixa",3],["formatter",3]],["result",4,[["error",3]]]],[[["dpix",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixcomp",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixacomp",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_recog",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_rch",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_rcha",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_rdid",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_regparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_strcode",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_sudoku",3],["formatter",3]],["result",4,[["error",3]]]],[[["l_wshed",3],["formatter",3]],["result",4,[["error",3]]]],[[["__va_list_tag",3],["formatter",3]],["result",4,[["error",3]]]],[[["_io_file",0]],["u64",0]],null,[[["i8",0],["i8",0]],["_io_file",0]],[[["u8",0],["u64",0]],["_io_file",0]],[[["i8",0]],["_io_file",0]],[[["i8",0],["i8",0]],["_io_file",0]],[[],["_io_file",0]],null,null,null,[[["fpix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["fpix",0]],[[["fpix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["fpix",0]],[[["fpix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["fpix",0]],[[["fpix",0],["f32",0],["f32",0]],["i32",0]],[[["fpix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["fpix",0]],[[["fpix",0],["f32",0],["f32",0]],["fpix",0]],[[["fpix",0],["pta",0],["pta",0],["i32",0],["f32",0]],["fpix",0]],[[["fpix",0],["i32",0]],["pix",0]],[[["fpix",0],["i32",0]],["i32",0]],[[["fpix",0]],["fpix",0]],[[["fpix",0]],["dpix",0]],[[["fpix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["fpix",0],["l_kernel",0],["i32",0]],["fpix",0]],[[["fpix",0],["l_kernel",0],["l_kernel",0],["i32",0]],["fpix",0]],[[["fpix",0],["fpix",0]],["fpix",0]],[[["fpix",0],["fpix",0]],["i32",0]],[[["i32",0],["i32",0]],["fpix",0]],[[["fpix",0]],["fpix",0]],[[["fpix",0]]],[[["fpix",0]],["pix",0]],[[["fpix",0],["fpix",0]],["fpix",0]],[[["fpix",0],["fpix",0]],["fpix",0]],[[["fpix",0],["fpix",0]],["fpix",0]],[[["fpix",0]],["f32",0]],[[["fpix",0],["i32",0],["i32",0]],["i32",0]],[[["fpix",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["fpix",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["fpix",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["fpix",0]],["i32",0]],[[["fpix",0],["i32",0],["i32",0]],["i32",0]],[[["fpix",0]],["i32",0]],[[["fpix",0],["fpix",0],["fpix",0],["f32",0],["f32",0]],["fpix",0]],[[["_io_file",0],["fpix",0],["i32",0]],["i32",0]],[[["fpix",0],["f32",0],["f32",0]],["fpix",0]],[[["fpix",0],["pta",0],["pta",0],["i32",0],["f32",0]],["fpix",0]],[[["fpix",0],["i32",0],["i32",0],["i32",0],["i32",0],["fpix",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["fpix",0]],[[["u8",0],["u64",0]],["fpix",0]],[[["_io_file",0]],["fpix",0]],[[["fpix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["fpix",0]],[[["fpix",0],["f32",0],["f32",0]],["pix",0]],[[["fpix",0],["fpix",0]],["i32",0]],[[["fpix",0],["fpix",0]],["fpix",0]],[[["fpix",0],["i32",0]],["fpix",0]],[[["fpix",0],["i32",0]],["fpix",0]],[[["fpix",0],["i32",0]],["fpix",0]],[[["fpix",0],["f32",0]],["i32",0]],[[["fpix",0],["f32",0]],["i32",0]],[[["fpix",0],["i32",0],["i32",0]],["i32",0]],[[["fpix",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["fpix",0],["i32",0],["i32",0]],["i32",0]],[[["fpix",0],["i32",0]],["i32",0]],[[["fpix",0],["f32",0]],["pix",0]],[[["i8",0],["fpix",0]],["i32",0]],[[["u8",0],["u64",0],["fpix",0]],["i32",0]],[[["_io_file",0],["fpix",0]],["i32",0]],[[["fpixa",0],["fpix",0],["i32",0]],["i32",0]],[[["fpixa",0],["i32",0]],["i32",0]],[[["fpixa",0]],["pix",0]],[[["fpixa",0]],["fpixa",0]],[[["fpixa",0]],["fpixa",0]],[[["fpixa",0]],["pix",0]],[[["fpixa",0],["i32",0]],["fpixa",0]],[[["i32",0]],["fpixa",0]],[[["fpixa",0]]],[[["fpixa",0],["i32",0],["i32",0]],["pix",0]],[[["fpixa",0]],["i32",0]],[[["fpixa",0],["i32",0]],["f32",0]],[[["fpixa",0],["i32",0],["i32",0]],["fpix",0]],[[["fpixa",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["fpixa",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["fpixa",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],null,[[["_io_file",0],["i8",0]],["i32",0]],[[["_io_file",0],["i8",0]],["i32",0]],null,[[["i32",0],["_io_file",0]],["i32",0]],[[["i32",0],["_io_file",0]],["i32",0]],[[["i8",0],["_io_file",0]],["i32",0]],[[["c_void",0],["u64",0],["u64",0],["_io_file",0]],["u64",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["c_void",0],["u64",0],["u64",0],["_io_file",0]],["u64",0]],[[["c_void",0]]],[[["i8",0],["i8",0],["_io_file",0]],["_io_filenull,[[["_io_file",0],["i8",0]],["i32",0]],[[["_io_file",0],["i8",0]],["i32",0]],[[["_io_file",0],["i64",0],["i32",0]],["i32",0]],[[["_io_file",0],["i64",0],["i32",0]],["i32",0]],[[["_io_file",0],["_g_fpos_t",0]],["i32",0]],null,null,[[["_io_file",0]],["i64",0]],[[["_io_file",0]],["i64",0]],[[["_io_file",0]],["i32",0]],null,null,null,null,null,null,[[["_io_file",0]]],[[["c_void",0],["u64",0],["u64",0],["_io_file",0]],["u64",0]],[[["c_void",0],["u64",0],["u64",0],["_io_file",0]],["u64",0]],null,[[],["f32",0]],[[["f32",0],["f32",0],["i32",0]],["i32",0]],[[["f64",0],["i32",0],["i8",0]],["i8",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["i8",0],["i8",0]],["i8",0]],[[["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["box",0],["i32",0]],["pta",0]],[[["boxa",0],["i32",0],["i32",0]],["pta",0]],[[["i32",0]],["pta",0]],[[["i32",0]],["pta",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["i32",0],["i32",0],["f64",0],["f64",0]],["pta",0]],[[["pta",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["boxa",0]],["ptaa",0]],[[["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["ptaa",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["i8",0]],[[["pta",0],["pta",0],["f32",0]],["i32",0]],[[["pta",0],["pta",0],["f32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i8",0],["i8",0],["i8",0],["i8",0]],["i32",0]],[[["pix",0],["pta",0],["box",0],["i32",0],["i32",0]],["pta",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["sarray",0]],[[["i32",0]],["i8",0]],[[],["i8",0]],[[["i8",0]],["i32",0]],[[],["i8",0]],[[["i32",0],["f32",0]],["f32",0]],[[["i32",0],["i32",0]],["u32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0],["i32",0]],["sarray",0]],[[["i32",0],["i32",0],["i32",0],["u32",0],["u32",0],["u32",0],["u32",0]]],[[["pta",0],["pta",0],["f32",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["f32",0]],["i32",0]],[[["i32",0],["i32",0],["f32",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0],["i32",0]],["sarray",0]],[[["_io_file",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[["_io_file",0]],["i32",0]],[[],["i32",0]],[[],["i32",0]],[[["i8",0],["u64",0],["i32",0],["_io_file",0]],["i64",0]],[[["i8",0]],["i8",0]],[[["i8",0],["u64",0],["_io_file",0]],["i64",0]],[[["f64",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0]],["i32",0]],[[["_io_file",0]],["i32",0]],null,null,null,[[["gplot",0],["numa",0],["numa",0],["i32",0],["i8",0]],["i32",0]],[[["i8",0],["i32",0],["i8",0],["i8",0],["i8",0]],["gplot",0]],[[["gplot",0]]],[[["gplot",0]],["i32",0]],[[["gplot",0]],["i32",0]],[[["numa",0],["i32",0],["i8",0],["i8",0],["i8",0],["i8",0]],["pix",0]],[[["numa",0],["numa",0],["i32",0],["i8",0],["i8",0],["i8",0],["i8",0]],["pix",0]],[[["numa",0],["numaa",0],["i32",0],["i8",0],["i8",0],["i8",0],["i8",0]],["pix",0]],[[["gplot",0]],["i32",0]],[[["gplot",0]],["pix",0]],[[["i8",0]],["gplot",0]],[[["gplot",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["numa",0],["numa",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["numaa",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["numa",0],["i8",0]],["pix",0]],[[["numa",0],["numa",0],["i8",0]],["pix",0]],[[["numaa",0],["i8",0]],["pix",0]],[[["numa",0],["numa",0],["i32",0],["i32",0],["i8",0],["i8",0]],["gplot",0]],[[["numa",0],["numa",0],["numa",0],["i32",0],["i32",0],["i8",0],["i8",0]],["gplot",0]],[[["numa",0],["numaa",0],["i32",0],["i32",0],["i8",0],["i8",0]],["gplot",0]],[[["i8",0],["gplot",0]],["i32",0]],null,null,[[["numaa",0],["numaa",0],["numa",0]],["i32",0]],[[["numaa",0],["i32",0],["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",0],["i8",0],["u64",0]],["i8",0]],[[["u32",0],["i8",0],["u64",0],["random_data",0]],["i32",0]],null,null,null,null,null,null,null,null,null,nulli8",0]],["i32",0]],[[["i8",0],["i32",0]],["i32",0]],null,[[["pixaa",0],["numa",0],["pta",0]],["pixa",0]],[[["jbclasser",0],["pix",0]],["i32",0]],[[["jbclasser",0],["pix",0],["boxa",0],["pixa",0]],["i32",0]],[[["jbclasser",0],["sarray",0]],["i32",0]],[[["i32",0],["i32",0]],["jbclasser",0]],[[["jbclasser",0]]],[[["jbclasser",0],["boxa",0],["pixa",0]],["i32",0]],[[["jbclasser",0],["boxa",0],["pixa",0]],["i32",0]],[[["i8",0],["f32",0],["f32",0],["i32",0],["i8",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["jbclasser",0]],[[["i32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["jbclasser",0]],[[["jbdata",0]]],[[["i8",0]],["jbdata",0]],[[["jbdata",0],["i32",0]],["pixa",0]],[[["jbclasser",0]],["jbdata",0]],[[["i8",0],["jbdata",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["boxa",0],["pixa",0]],["i32",0]],[[["jbclasser",0]],["i32",0]],[[["jbclasser",0],["pix",0],["boxa",0]],["i32",0]],[[["i8",0],["i32",0],["f32",0],["i32",0],["i8",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["jbclasser",0]],[[["pixa",0],["numa",0]],["pixa",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["numa",0],["i32",0],["i32",0]],["jbclasser",0]],[[["u16",0]],["i64",0]],[[["u16",0],["drand48_data",0],["i64",0]],["i32",0]],null,null,null,null,null,[[["l_kernel",0]],["l_kernel",0]],[[["i32",0],["i32",0]],["l_kernel",0]],[[["i8",0]],["l_kernel",0]],[[["pix",0],["i32",0],["i32",0]],["l_kernel",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i8",0]],["l_kernel",0]],[[["l_kernel",0]]],[[["l_kernel",0],["i32",0],["i32",0]],["pix",0]],[[["l_kernel",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["l_kernel",0],["f32",0],["f32",0]],["i32",0]],[[["l_kernel",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["l_kernel",0],["f32",0]],["i32",0]],[[["l_kernel",0]],["l_kernel",0]],[[["l_kernel",0],["f32",0]],["l_kernel",0]],[[["i8",0]],["l_kernel",0]],[[["_io_file",0]],["l_kernel",0]],[[["l_kernel",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["l_kernel",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["l_kernel",0]],["i32",0]],[[["_io_file",0],["l_kernel",0]],["i32",0]],null,null,null,null,[[["i64",0]],["i8",0]],[[["l_compressed_data",0]]],[[["i32",0]],["l_rbtree",0]],[[["l_rbtree",0],["rb_type",19]]],[[["l_rbtree",0]]],[[["l_rbtree",0],["rb_type",19]],["rb_type",0]],[[["l_rbtree",0]],["l_rbtree_node",0]],[[["l_rbtree",0]],["l_rbtree_node",0]],[[["l_rbtree_node",0]],["l_rbtree_node",0]],[[["l_rbtree_node",0]],["l_rbtree_node",0]],[[["l_rbtree",0],["rb_type",19],["rb_type",19]]],[[["l_rbtree",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0]],["f32",0]],[[["i32",0]],["l_rbtree",0]],[[["l_dna",0]],["l_rbtree",0]],[[["pta",0]],["l_rbtree",0]],[[["sarray",0]],["l_rbtree",0]],[[["l_rbtree",0],["rb_type",19]]],[[["l_rbtree",0]]],[[["l_rbtree",0],["rb_type",19]],["rb_type",0]],[[["l_rbtree",0]],["l_rbtree_node",0]],[[["l_rbtree",0]],["l_rbtree_node",0]],[[["l_rbtree_node",0]],["l_rbtree_node",0]],[[["l_rbtree_node",0]],["l_rbtree_node",0]],[[["l_rbtree",0],["rb_type",19]]],[[["l_rbtree",0]],["i32",0]],[[["u8",0],["u64",0],["u8",0],["u64",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0]],["u8",0]],[[["i8",0],["u64",0]],["u8",0]],[[["i8",0],["u64",0],["u64",0],["u64",0]],["u8",0]],[[["_io_file",0],["u64",0],["u64",0],["u64",0]],["u8",0]],[[["_io_file",0],["u64",0]],["u8",0]],[[["i8",0],["i8",0],["c_void",0],["u64",0]],["i32",0]],[[],["pixa",0]],[[],["pixa",0]],[[],["pixa",0]],[[["i32",0]],["pixa",0]],[[["l_bytea",0],["u8",0],["u64",0]],["i32",0]],[[["l_bytea",0],["i8",0]],["i32",0]],[[["l_bytea",0],["i32",0]],["l_bytea",0]],[[["l_bytea",0],["u64",0]],["u8",0]],[[["u64",0]],["l_bytea",0]],[[["l_bytea",0]]],[[["l_bytea",0],["u8",0],["u64",0],["l_dna",0]],["i32",0]],[[["l_bytea",0],["u64",0]],["u8",0]],[[["l_bytea",0]],["u64",0]],[[["i8",0]],["l_bytea",0]],[[["u8",0],["u64",0]],["l_bytea",0]],[[["_io_file",0]],["l_bytea",0]],[[["l_bytea",0],["l_bytea",0]],["i32",0]],[[["l_bytea",0],["u64",0],["l_bytea",0]],["i32",0]],[[["i8",0],["l_bytea",0],["u64",0],["u64",0]],["i32",0]],[[["_io_file",0],["l_bytea",0],["u64",0],["u64",0]],["i32",0]],[[["i32",0]]],[[["c_void",0],["i32",0]]],[[["c_void",0],["i32",0]]],[[["c_void",0],["i32",0]]],[[["numaa",0],["i32",0],["i32",0],["u64",0]],["u8",0]],[[["i8",0],["i32",0]],["i32",0]],[[["l_dna",0],["f64",0]],["i32",0]],[[["l_dna",0],["i32",0]],["i32",0]],[[["l_dna",0]],["l_dna",0]],[[["l_dna",0]],["numa",0]],[[["l_dna",0]],["l_dna",0]],[[["l_dna",0],["l_dna",0]],["i32",0]],[[["i32",0]],["l_dna",0]],[[["f64",0],["i32",0],["i32",0]],["l_dna",0]],[[["i32",0],["i32",0]],["l_dna",0]],[[["l_dna",0]]],[[["l_dna",0]],["l_dna",0]],[[["l_dna",0]],["i32",0]],[[["l_dna",0],["l_dnahash",0],["f64",0],["i32",0]],["i32",0]],[[["l_dna",0]],["i32",0]],[[["l_dna",0],["i32",0]],["f64",0]],[[["l_dna",0],["i32",0],["f64",0]],["i32",0]],[[["l_dna",0]],["i32",0]],[[["l_dna",0],["i32",0],["i32",0]],["i32",0]],[[["l_dna",0],["f64",0],["f64",0]],["i32",0]],[[["l_dna",0]],["i32",0]],[[["l_dnahash",0],["u64",0],["f64",0]],["i32",0]],[[["i32",0],["i32",0]],["l_dnahash",0]],[[["l_dna",0]],["l_dnahash",0]],[[["pta",0]],["l_dnahash",0]],[[["sarray",0]],["l_dnahash",0]],[[["l_dnahash",0]]],[[["l_dnahash",0]],["i32",0]],[[["l_dnahash",0],["u64",0],["i32",0]],["l_dna",0]],[[["l_dnahash",0]],["i32",0]],[[["l_dna",0],["i32",0],["f64",0]],["i32",0]],[[["l_dna",0],["l_dna",0]],["l_dna",0]],[[["l_dna",0],["l_dna",0]],["l_dna",0]],[[["l_dna",0],["l_dna",0],["i32",0],["i32",0]],["i32",0]],[[["l_dna",0],["l_dnahash",0],["l_dna",0],["l_dna",0]],["i32",0]],[[["f64",0],["f64",0],["i32",0]],["l_dna",0]],[[["i8",0]],["l_dna",0]],[[["_io_file",0]],["l_dna",0]],[[["l_dna",0]],["l_dna",0]],[[["l_dna",0],["l_dna",0],["l_dnahash",0]],["i32",0]],[[["l_dna",0],["i32",0]],["i32",0]],[[["l_dna",0],["i32",0],["f64",0]],["i32",0]],[[["l_dna",0],["i32",0]],["i32",0]],[[["l_dna",0],["f64",0],["f64",0]],["i32",0]],[[["l_dna",0],["i32",0],["f64",0]],["i32",0]],[[["l_dna",0],["i32",0],["f64",0]],["i32",0]],[[["l_dna",0],["l_dna",0]],["l_dna",0]],[[["i8",0],["l_dna",0]],["i32",0]],[[["_io_file",0],["l_dna",0]],["i32",0]],[[["l_dnaa",0],["l_dna",0],["i32",0]],["i32",0]],[[["l_dnaa",0],["i32",0],["f64",0]],["i32",0]],[[["i32",0]],["l_dnaa",0]],[[["i32",0],["i32",0]],["l_dnaa",0]],[[["l_dnaa",0]]],[[["l_dnaa",0]],["l_dna",0]],[[["l_dnaa",0]],["i32",0]],[[["l_dnaa",0],["i32",0],["i32",0]],["l_dna",0]],[[["l_dnaa",0],["i32",0]],["i32",0]],[[["l_dnaa",0]],["i32",0]],[[["l_dnaa",0],["i32",0],["i32",0],["f64",0]],["i32",0]],[[["i8",0]],["l_dnaa",0]],[[["_io_file",0]],["l_dnaa",0]],[[["l_dnaa",0],["i32",0],["l_dna",0]],["i32",0]],[[["l_dnaa",0]],["i32",0]],[[["i8",0],["l_dnaa",0]],["i32",0]],[[["_io_file",0],["l_dnaa",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["f32",0]],["i32",0]],null,null,[[["i8",0],["i32",0],["i32",0],["i32",0],["l_compressed_data",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0],["l_compressed_data",0]],["i32",0]],[[["i8",0],["i32",0]],["l_compressed_data",0]],[[["i8",0],["pix",0]],["l_compressed_data",0]],[[["i8",0],["i32",0]],["l_compressed_data",0]],[[["i8",0],["i32",0]],["l_compressed_data",0]],[[["u8",0],["u64",0],["i32",0]],["l_compressed_data",0]],[[["i32",0],["i32",0]]],[[["c_void",0],["i32",0]],["i32",0]],[[["c_void",0],["i32",0]],["i32",0]],[[["c_void",0],["i32",0]],["i32",0]],[[["c_void",0],["i32",0]],["i32",0]],[[["c_void",0],["i32",0]],["i32",0]],[[["c_void",0],["i32",0]],["i32",0]],[[],["i8",0]],[[["i8",0],["i32",0],["i8",0]],["i32",0]],[[["i32",0],["f64",0],["u64",0]],["i32",0]],[[["i32",0],["i32",0],["u64",0]],["i32",0]],[[["i8",0],["u64",0]],["i32",0]],null,null,null,null,null,[[["i32",0]],["i32",0]],[[],["i8",0]],null,[[["i32",0]]],[[["i32",0]]],[[["i32",0]]],[[["f32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["f32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["i32",0]]],[[["i32",0]],["l_rbtree",0]],[[["l_rbtree",0],["rb_type",19]]],[[["l_rbtree",0]]],[[["l_rbtree",0]],["i32",0]],[[["l_rbtree",0]],["l_rbtree_node",0]],[[["l_rbtree",0]],["l_rbtree_node",0]],[[["l_rbtree_node",0]],["l_rbtree_node",0]],[[["l_rbtree_node",0]],["l_rbtree_node",0]],[[["l_rbtree",0],["rb_type",19],["rb_type",19]]],[[["l_rbtree",0],["rb_type",19]],["rb_type",0]],[[["_io_file",0],["l_rbtree",0]]],[[["f32",0],["f32",0]]],[[["i32",0],["i32",0]]],[[["c_void",0],["i32",0]]],[[["c_void",0],["i32",0],["i32",0]]],[[["c_void",0],["i32",0],["i32",0]]],[[["c_void",0],["i32",0],["i32",0]]],[[["c_void",0],["i32",0],["i32",0]]],[[["c_void",0],["i32",0],["i32",0]]],[[["c_void",0],["i32",0],["i32",0]]],[[["i32",0]]],null,null,null,null,null,[[["u8",0],["u64",0],["i32",0],["i32",0]],["numaa",0]],[[["i64",0]],["i64",0]],null,null,[[["u16",0]]],[[["u16",0],["drand48_data",0]],["i32",0]],[[["i64",0],["i64",0]],["ldiv_t",3]],null,null,null,null,[[["option",4]]],[[["u64",0],["u64",0]],["c_void",0]],[[["i8",0],["i8",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i32",0]]],[[["_io_file",0]],["i32",0]],[[["i8",0],["i8",0]],["_io_file",0]],[[["c_void",0]]],[[["u64",0],["i32",0],["u32",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["f32",0]],["i32",0]],[[["i8",0]]],[[["l_heap",0],["c_void",0]],["i32",0]],[[["i32",0],["i32",0]],["l_heap",0]],[[["l_heap",0],["i32",0]]],[[["l_heap",0]],["i32",0]],[[["l_heap",0],["i32",0]],["c_void",0]],[[["_io_file",0],["l_heap",0]],["i32",0]],[[["l_heap",0]],["c_void",0]],[[["l_heap",0]],["i32",0]],[[["l_heap",0]],["i32",0]],[[["u32",0],["u32",0],["i32",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["u32",0],["u32",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["u32",0],["f32",0]],["u32",0]],null,null,null,null,null,null,null,[[["doublelinkedlist",0],["c_void",0]],["i32",0]],[[["doublelinkedlist",0],["doublelinkedlist",0],["c_void",0]],["i32",0]],[[["doublelinkedlist",0]]],[[["doublelinkedlist",0],["c_void",0]],["doublelinkedlist",0]],[[["doublelinkedlist",0]],["doublelinkedlist",0]],[[["doublelinkedlist",0]],["i32",0]],[[["doublelinkedlist",0],["doublelinkedlist",0],["c_void",0]],["i32",0]],[[["doublelinkedlist",0],["doublelinkedlist",0],["c_void",0]],["i32",0]],[[["doublelinkedlist",0],["doublelinkedlist",0]],["i32",0]],[[["doublelinkedlist",0],["doublelinkedlist",0]],["c_void",0]],[[["doublelinkedlist",0]],["c_void",0]],[[["doublelinkedlist",0],["doublelinkedlist",0]],["c_void",0]],[[["doublelinkedlist",0]],["i32",0]],[[["i64",0]],["i64",0]],[[["i64",0],["i64",0]],["lldiv_t",3]],null,null,[[["i32",0],["i32",0],["f64",0],["f64",0],["f64",0],["f64",0]],["i32",0]],null,null,[[["u32",0],["f32",0],["f32",0]],["u32",0]],[[["l_queue",0],["c_void",0]],["i32",0]],[[["i32",0]],["l_queue",0]],[[["l_queue",0],["i32",0]]],[[["l_queue",0]],["i32",0]],[[["_io_file",0],["l_queue",0]],["i32",0]],[[["l_queue",0]],["c_void",0]],[[],["i64",0]],[[["drand48_data",0],["i64",0]],["i32",0]],[[["l_stack",0],["c_void",0]],["i32",0]],[[["i32",0]],["l_stack",0]],[[["l_stack",0],["i32",0]]],[[["l_stack",0]],["i32",0]],[[["_io_file",0],["l_stack",0]],["i32",0]],[[["l_stack",0]],["c_void",0]],null,[[["i32",0],["i32",0],["i32",0],["pixa",0]],["sela",0]],[[["i32",0],["i32",0],["f32",0],["f32",0]],["l_kernel",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["l_kernel",0]],[[["i32",0],["i32",0],["f32",0],["f32",0]],["l_kernel",0]],[[["i32",0],["i32",0],["f32",0],["f32",0],["l_kernel",0],["l_kernel",0]],["i32",0]],[[["i32",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0],["pixcolormap",0]],["i32",0]],[[],["f32",0]],[[["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["f32",0],["f32",0],["f32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[],["i32",0]],[[],["i32",0]],[[["numa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["numa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["u32",0],["u32",0],["u32",0],["i32",0]],["i32",0]],[[["i32",0],["u32",0],["u32",0],["u32",0]],["i32",0]],[[["f32",0]],["l_kernel",0]],[[],["u8",0]],[[["i8",0],["u64",0],["i8",0]],["i32",0]],[[["u64",0]],["c_void",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0],["u64",0]],["i32",0]],[[["i32",0],["i8",0],["u64",0]],["u64",0]],[[["i32",0],["i8",0],["u64",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0]],["i8",0]],[[["i8",0]],["i32",0]],[[["i8",0],["i32",0]],["i32",0]],[[["i8",0]],["i8",0]],null,null,null,[[["i8",0],["u64",0],["i32",0]],["i32",0]],[[["sarray",0]],["i32",0]],[[],["i64",0]],[[["drand48_data",0],["i64",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0]],["u64",0]],null,null,null,null,null,null,null,[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],null,null,null,null,null,null,null,null,[[["u16",0]],["i64",0]],[[["u16",0],["drand48_data",0],["i64",0]],["i32",0]],null,null,null,null,[[["numa",0],["i32",0],["i32",0],["f32",0]],["numa",0]],[[["numa",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0],["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["i32",0]],[[["numa",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0]],["numa",0]],[[["numa",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["f32",0]],["numa",0]],[[["numa",0]],["l_dna",0]],[[["numa",0]],["numa",0]],[[["numa",0]],["pta",0]],[[["numa",0],["numa",0]],["pta",0]],[[["numa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["sarray",0]],[[["numa",0]],["numa",0]],[[["numa",0],["numa",0]],["i32",0]],[[["numa",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["i32",0],["f32",0]],["i32",0]],[[["i32",0]],["numa",0]],[[["f32",0],["i32",0],["i32",0]],["numa",0]],[[["i32",0],["i32",0]],["numa",0]],[[["i8",0]],["numa",0]],[[["numa",0],["numa",0],["f32",0]],["numa",0]],[[["numa",0],["numa",0],["f32",0]],["numa",0]],[[["numa",0]]],[[["numa",0],["numa",0],["f32",0],["f32",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0],["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["numa",0],["numa",0],["f32",0]],["i32",0]],[[["numa",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["numa",0]],["numa",0]],[[["numa",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["f32",0],["f32",0]],["numa",0]],[[["numa",0],["f32",0],["numa",0],["f32",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["i32",0]],[[["numa",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0]],["f32",0]],[[["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0]],["numa",0]],[[["numa",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["numa",0],["f32",0],["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0]],["i32",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["numa",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0],["f32",0],["f32",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0],["i32",0],["f32",0],["f32",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["numa",0],["numa",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["f32",0],["numa",0],["i32",0],["f32",0],["f32",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["f32",0],["f32",0],["numa",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0]],["numa",0]],[[["numa",0]],["numa",0]],[[["numa",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["numa",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["numa",0],["numa",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["f32",0]],["numa",0]],[[["numa",0],["numa",0]],["numa",0]],[[["f32",0],["i32",0]],["numa",0]],[[["numa",0]],["numa",0]],[[["numa",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["f32",0]],["numa",0]],[[["f32",0],["f32",0],["numa",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["f32",0],["f32",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["i32",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["numa",0],["numa",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["f32",0],["f32",0],["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["i8",0]],["numa",0]],[[["u8",0],["u64",0]],["numa",0]],[[["_io_file",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0]],["numa",0]],[[["numa",0],["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0]],["i32",0]],[[["numa",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["i32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0],["f32",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["numa",0],["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["numa",0]],["numa",0]],[[["numa",0],["numa",0],["numa",0],["numa",0],["i32",0],["i32",0]],["i32",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["numa",0],["i32",0],["numa",0],["numa",0]],["i32",0]],[[["numa",0],["f32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["f32",0],["f32",0],["f32",0]],["numa",0]],[[["numa",0],["f32",0],["f32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0]],["numa",0]],[[["numa",0],["i32",0],["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["i8",0],["numa",0]],["i32",0]],[[["i8",0],["numa",0]],["i32",0]],[[["u8",0],["u64",0],["numa",0]],["i32",0]],[[["numa",0]],["i32",0]],[[["_io_file",0],["numa",0]],["i32",0]],[[["numaa",0],["numa",0],["i32",0]],["i32",0]],[[["numaa",0],["i32",0],["f32",0]],["i32",0]],[[["numaa",0],["numaa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0]],["numaa",0]],[[["i32",0],["i32",0]],["numaa",0]],[[["numaa",0]]],[[["numaa",0]],["numa",0]],[[["numaa",0]],["i32",0]],[[["numaa",0],["i32",0],["i32",0]],["numa",0]],[[["numaa",0],["i32",0]],["i32",0]],[[["numaa",0]],["i32",0]],[[["numaa",0]],["numa",0]],[[["numaa",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["numaa",0],["numaa",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["numaa",0]],[[["u8",0],["u64",0]],["numaa",0]],[[["_io_file",0]],["numaa",0]],[[["numaa",0],["i32",0],["numa",0]],["i32",0]],[[["numaa",0]],["i32",0]],[[["i8",0],["numaa",0]],["i32",0]],[[["u8",0],["u64",0],["numaa",0]],["i32",0]],[[["_io_file",0],["numaa",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["option",4],["c_void",0]],["i32",0]],[[["i8",0],["u64",0]],["_io_file",0]],null,null,null,null,null,[[["i8",0],["i8",0]],["i8",0]],[[["i8",0],["i8",0]],["numa",0]],[[["i8",0],["i8",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["pixacomp",0],["i32",0],["i8",0],["pixa",0]],["i32",0]],[[["i8",0],["i8",0]],["i8",0]],[[["_io_file",0]],["i32",0]],[[["i8",0]]],null,null,null,null,null,null,null,[[["pix",0],["box",0]],["numa",0]],[[["pix",0],["box",0]],["numa",0]],[[["pix",0],["box",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["l_bmf",0],["i8",0],["u32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0]],["i32",0]],[[["pix",0],["l_bmf",0],["i8",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["pixa",0],["numa",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["pix",0]],[[["pix",0],["f32",0],["u8",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["u32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["u8",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["pix",0],["pixa",0]],["pix",0]],[[["pix",0],["box",0],["i32",0]],["numa",0]],[[["pix",0],["box",0],["i32",0]],["numa",0]],[[["pix",0],["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["box",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["f32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["l_kernel",0],["l_kernel",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["l_kernel",0],["l_kernel",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["pix",0]],[[["pix",0],["f32",0],["u8",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["u32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["u8",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["box",0],["u32",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["boxa",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["box",0],["u32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["u8",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["box",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["box",0]],["i32",0]],[[["pix",0],["box",0],["pix",0],["box",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["box",0],["box",0]],["pix",0]],[[["pix",0],["boxa",0]],["pixa",0]],[[["pix",0],["pix",0],["box",0]],["i32",0]],[[["pix",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["numa",0],["numa",0],["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["f32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["box",0],["box",0],["f32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["box",0],["box",0],["f32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["numa",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["fpix",0]],[[["pix",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pixa",0],["i32",0]],["boxa",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["boxa",0]],[[["pix",0],["ptaa",0],["i32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["pix",0],["ptaa",0],["i32",0]],["i32",0]],[[["pix",0],["pixa",0],["i32",0]],["boxa",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["u16",0],["u16",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["pix",0],["u32",0],["u32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["pix",0],["u8",0],["u8",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["u8",0],["u8",0],["u8",0],["u8",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["fpixa",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["fpixa",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["dpix",0]],[[["pix",0],["i32",0]],["fpix",0]],[[["pix",0],["i32",0],["i32",0],["i8",0],["i32",0],["i32",0],["i32",0],["i8",0],["l_pdf_data",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i8",0],["l_pdf_data",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["boxa",0],["i32",0],["f32",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["boxa",0],["i32",0],["f32",0],["i8",0],["i8",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["l_kernel",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["l_kernel",0]],["pix",0]],[[["pix",0],["l_kernel",0],["l_kernel",0]],["pix",0]],[[["pix",0],["l_kernel",0],["l_kernel",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["l_kernel",0],["l_kernel",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0]],["numa",0]],[[["pix",0],["box",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0]],["numa",0]],[[["pix",0],["i32",0]],["numa",0]],[[["pix",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["i32",0],["pixa",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixcomp",0]],["pix",0]],[[["i32",0],["i32",0],["i32",0]],["pix",0]],[[["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["box",0],["box",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0],["numaa",0],["pixa",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["pixa",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["pixa",0]],["i32",0]],[[["u32",0],["u64",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["box",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0]]],[[["pix",0]],["i32",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["sel",0],["i32",0],["u32",0],["u32",0]],["pix",0]],[[["pix",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["u32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pta",0]],["pix",0]],[[["pix",0],["pix",0],["pta",0],["pix",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["ptaa",0]],["pix",0]],[[["pix",0],["pix",0],["ptaa",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i8",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["boxa",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["boxa",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["numa",0]],[[["pix",0],["f32",0],["f32",0],["numa",0],["numa",0],["i32",0]],["numa",0]],[[["pix",0],["f32",0],["f32",0],["numa",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0]],["pixa",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0]],["u32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pixa",0]],["pixa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pixa",0]],["pixa",0]],[[["pix",0],["pix",0],["i8",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i8",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i8",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["numa",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pta",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["box",0]],["pix",0]],[[["pix",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["u32",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["box",0],["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pta",0],["pixa",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["pix",0],["pta",0],["pixa",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["pix",0],["pix",0],["pixa",0]],["i32",0]],[[["pix",0]],["pta",0]],[[["pix",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["pta",0],["numa",0],["pixa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["boxa",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["box",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["numa",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pixacomp",0]],["box",0]],[[["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["pix",0],["box",0],["f32",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["box",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["f32",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["boxa",0],["boxaa",0],["i8",0]],["i32",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i8",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["box",0],["i32",0],["f32",0],["i32",0],["numaa",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["pixa",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["pixa",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["l_compressed_data",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["pixa",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["u32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["u32",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pta",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["sel",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["sel",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["sel",0]],[[["pix",0]],["ccborda",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["numa",0],["u32",0],["pixa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0]],["numa",0]],[[["pix",0],["box",0],["i32",0]],["numa",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0]],["l_rbtree",0]],[[["pix",0],["i32",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["pix",0],["pix",0],["box",0],["i32",0],["u32",0],["i32",0]],["i32",0]],[[["pix",0]],["pixcolormap",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0]],["u32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["numa",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i8",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["numa",0]],[[["pix",0],["box",0],["i32",0]],["numa",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["numaa",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["c_void",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["pta",0],["pta",0]],["i32",0]],[[["pix",0],["box",0],["u32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["u32",0],["pixcolormap",0]],["i32",0]],[[["ccbord",0],["pix",0],["box",0]],["i32",0]],[[["pix",0]],["ptaa",0]],[[["pix",0],["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["u8",0],["u8",0],["u8",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["u32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["u32",0],["pixa",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0],["u32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["u8",0],["u64",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["pix",0],["pixa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["i8",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["boxa",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["boxa",0],["pixa",0],["numa",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pixcolormap",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["pix",0],["i8",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["f32",0],["i32",0],["f32",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["pix",0],["f32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["pix",0]],[[["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["sela",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["boxa",0],["pix",0],["boxa",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["u32",0],["u32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["pix",0],["pix",0]],["boxa",0]],[[["pix",0],["i32",0],["box",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["numa",0],["numa",0]],["pix",0]],[[["pix",0],["i32",0],["numa",0],["numa",0]],["pix",0]],[[["pix",0],["i32",0],["numa",0],["numa",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["i32",0],["i32",0],["f32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["boxa",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["boxa",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["box",0],["pix",0],["f32",0]],["i32",0]],[[["pix",0]],["dpix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["i8",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["numa",0],["numa",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i8",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i8",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0],["i32",0],["i32",0],["boxa",0]],["pix",0]],[[["pix",0],["pix",0],["i8",0],["i32",0],["i32",0],["i32",0],["boxa",0]],["pix",0]],[[["pix",0],["i8",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i8",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0]],["i32",0]],[[["pix",0],["l_kernel",0]],["pix",0]],[[["pix",0],["pix",0],["box",0],["u32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["pixcolormap",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["sel",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["boxa",0],["u32",0]],["pix",0]],[[["pix",0],["boxa",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["pta",0],["i32",0],["i8",0]],["i32",0]],[[["pix",0],["box",0],["f32",0],["i32",0]],["pix",0]],[[["_io_file",0],["pix",0],["i8",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["sarray",0],["i32",0]],["sarray",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["pix",0]],[[["pix",0],["f32",0],["u8",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["u32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["u8",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["pta",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["pix",0],["fpixa",0]],["i32",0]],[[["pix",0],["i32",0],["pix",0],["dpix",0],["fpixa",0],["fpixa",0]],["i32",0]],[[["pix",0],["pixcolormap",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["f32",0],["i32",0],["i32",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["pix",0],["f32",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["numa",0]],[[["pixa",0],["i32",0],["i32",0],["sarray",0],["i32",0]],["sarray",0]],[[["i8",0],["u64",0]],["pix",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["sarray",0],["i32",0]],["pix",0]],[[["i8",0],["u32",0],["box",0],["i32",0],["i32",0]],["pix",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0],["u32",0],["box",0],["i32",0],["i32",0]],["pix",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["u8",0],["u64",0],["i32",0]],["pix",0]],[[["u8",0],["u64",0]],["pix",0]],[[["_io_file",0],["i32",0]],["pix",0]],[[["_io_file",0]],["pix",0]],[[["_io_file",0]],["pix",0]],[[["_io_file",0],["u32",0],["box",0],["i32",0],["i32",0]],["pix",0]],[[["_io_file",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["_io_file",0]],["pix",0]],[[["_io_file",0]],["pix",0]],[[["_io_file",0]],["pix",0]],[[["_io_file",0],["i32",0]],["pix",0]],[[["_io_file",0]],["pix",0]],[[["i8",0],["i32",0]],["pix",0]],[[["i8",0],["i32",0]],["pix",0]],[[["pix",0],["u8",0]],["pix",0]],[[["pix",0],["i32",0],["u8",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["i32",0]],[[["pix",0],["pixa",0],["numa",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["u8",0],["u8",0],["u8",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["u8",0],["u8",0],["u8",0],["f32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["u8",0],["u8",0],["u8",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["u8",0],["u8",0],["u8",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["u8",0],["u8",0],["u8",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["u8",0],["u8",0],["u8",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["u8",0],["u8",0],["u8",0],["f32",0]],["i32",0]],[[["pix",0],["numa",0],["i32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["numa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pta",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pta",0],["i32",0],["u8",0],["u8",0],["u8",0],["i32",0]],["i32",0]],[[["pix",0],["pta",0],["i32",0],["u8",0],["u8",0],["u8",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pta",0],["i32",0]],["i32",0]],[[["pix",0],["pta",0],["u8",0],["u8",0],["u8",0]],["i32",0]],[[["pix",0],["pta",0],["u8",0],["u8",0],["u8",0],["f32",0]],["i32",0]],[[["pix",0],["ptaa",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["pix",0]],[[["pix",0],["f32",0],["u32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["u8",0]],["pix",0]],[[["pix",0],["f32",0],["u8",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["box",0],["numa",0],["numa",0],["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0],["pix",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0],["i32",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pixa",0],["f32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pixa",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["l_bmf",0],["i8",0],["u32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0]],["pix",0]],[[["pix",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["f32",0],["pix",0],["f32",0]],["pix",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["pta",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["pta",0]],[[["pix",0],["l_stack",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["l_stack",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["l_stack",0],["i32",0],["i32",0]],["box",0]],[[["pix",0],["l_stack",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["l_stack",0],["i32",0],["i32",0]],["box",0]],[[["pix",0],["l_stack",0],["i32",0],["i32",0],["i32",0]],["box",0]],[[["pix",0],["pix",0],["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["box",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0]],["box",0]],[[["pix",0],["pix",0],["pta",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["u32",0],["u64",0]],["i32",0]],[[["pix",0]],["i32",0]],[[["pix",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["boxa",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pixcolormap",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["box",0]],["i32",0]],[[["pix",0],["box",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["u32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["u32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i8",0]],["i32",0]],[[["pix",0],["l_bmf",0],["i8",0],["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["l_bmf",0],["i8",0],["u32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["u8",0]],[[["pix",0],["pix",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["u32",0],["u32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["u32",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["u32",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["u32",0],["u32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["box",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["pix",0],["i32",0],["i32",0],["pix",0]],["boxa",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["boxa",0]],[[["pix",0],["i32",0],["i32",0],["boxa",0],["pixa",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0],["f32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pta",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0],["pix",0]],["i32",0]],[[["pix",0],["pix",0],["numa",0]],["i32",0]],[[["pix",0],["pix",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["sela",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["pix",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["f32",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i8",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["pix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixtiling",0]],[[["pixtiling",0]]],[[["pixtiling",0],["i32",0],["i32",0]],["i32",0]],[[["pixtiling",0],["i32",0],["i32",0]],["i32",0]],[[["pixtiling",0],["i32",0],["i32",0]],["pix",0]],[[["pixtiling",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["pix",0],["pixtiling",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0]],["pix",0]],[[["pix",0],["sela",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["f32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["f32",0],["i32",0]],["pix",0]],[[["pix",0],["pix",0]],["pix",0]],[[["pix",0],["box",0]],["numa",0]],[[["pix",0],["box",0]],["numa",0]],[[["pix",0],["box",0],["f32",0]],["i32",0]],[[["pix",0],["box",0],["pix",0],["dpix",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["pix",0],["pix",0],["fpix",0],["fpix",0]],["i32",0]],[[["pix",0],["pix",0],["fpix",0],["fpix",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["boxa",0],["i32",0],["pixa",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["pixa",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0]],["i32",0]],[[["i8",0],["pix",0]],["i32",0]],[[["pix",0],["i8",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["box",0],["i32",0],["f32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0],["i8",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["f32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0],["numa",0],["sarray",0],["sarray",0],["numa",0]],["i32",0]],[[["u8",0],["u64",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0],["i32",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["pix",0],["f32",0]],["i32",0]],[[["pix",0],["pix",0],["f32",0],["f32",0],["i32",0],["i32",0],["i8",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0]],["i32",0]],[[["_io_file",0],["pix",0]],["i32",0]],[[["_io_file",0],["pix",0]],["i32",0]],[[["_io_file",0],["pix",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["_io_file",0],["pix",0],["box",0],["i32",0],["f32",0]],["i32",0]],[[["_io_file",0],["pix",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0],["i8",0]],["i32",0]],[[["_io_file",0],["pix",0],["f32",0]],["i32",0]],[[["_io_file",0],["pix",0]],["i32",0]],[[["_io_file",0],["pix",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0],["i8",0]],["i32",0]],[[["_io_file",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["box",0],["i32",0],["f32",0]],["i8",0]],[[["i8",0],["pix",0],["i32",0],["i8",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0],["i8",0],["numa",0],["sarray",0],["sarray",0],["numa",0]],["i32",0]],[[["i8",0],["pix",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["pix",0],["pix",0]],["pix",0]],[[["pix",0],["i32",0]],["i32",0]],null,null,null,[[["pixa",0],["pta",0],["pix",0],["f32",0],["f32",0]],["i32",0]],[[["pixa",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pixa",0]],[[["pixa",0],["box",0],["i32",0]],["i32",0]],[[["pixa",0],["pix",0],["i32",0]],["i32",0]],[[["pixa",0],["pix",0],["i32",0],["l_bmf",0],["i8",0],["u32",0],["i32",0]],["i32",0]],[[["pixa",0],["l_bmf",0],["numa",0],["u32",0],["i32",0]],["pixa",0]],[[["pixa",0],["l_bmf",0],["sarray",0],["u32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["numa",0],["i32",0]],["pixa",0]],[[["pixa",0]],["pta",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["pixa",0]],["i32",0]],[[["pixa",0],["pixa",0],["boxa",0]],["i32",0]],[[["pixa",0],["pix",0]],["pixa",0]],[[["pixa",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i8",0]],["i32",0]],[[["pixa",0],["f32",0],["f32",0],["i32",0],["i32",0],["f32",0],["numa",0],["f32",0],["pix",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0]],["pixa",0]],[[["pixa",0]],["pixa",0]],[[["pixa",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0]],["pixa",0]],[[["pixa",0],["sarray",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["pixa",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["pixa",0]],["pixa",0]],[[["pixa",0],["i32",0]],["pixa",0]],[[["pixa",0]],["numa",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["i32",0]],["pixa",0]],[[["pix",0],["boxa",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixacomp",0],["i32",0]],["pixa",0]],[[["pixa",0]]],[[["pixa",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["boxaa",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0],["boxa",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["boxa",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["numa",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pixa",0],["i32",0],["f32",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pix",0]],[[["pixa",0],["pixa",0],["i32",0],["numa",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["sel",0],["i32",0]],["pixa",0]],[[["pixa",0],["numa",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["pix",0]],["i32",0]],[[["pixa",0]],["numa",0]],[[["pixa",0],["pix",0],["i32",0]],["numa",0]],[[["pixa",0],["numa",0],["numa",0]],["i32",0]],[[["pixa",0]],["numa",0]],[[["pixa",0]],["numa",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0]],["numa",0]],[[["pixa",0]],["numa",0]],[[["pixa",0]],["numa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0]],["box",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0]],["boxa",0]],[[["pixa",0]],["i32",0]],[[["pixa",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0]],["c_void",0]],[[["pixa",0],["i32",0],["i32",0]],["pix",0]],[[["pixa",0]],["pix",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["pixa",0],["pix",0],["box",0]],["i32",0]],[[["pixa",0],["i32",0],["pix",0],["box",0]],["i32",0]],[[["pixa",0],["pixa",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0]],["i32",0]],[[["pixa",0],["pixa",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["i32",0],["boxa",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["numa",0]],[[["pixa",0],["f32",0]],["pixa",0]],[[["pixa",0],["i8",0],["i32",0],["i32",0]],["pixa",0]],[[["pix",0],["pixa",0],["i8",0],["i32",0],["i32",0]],["pixa",0]],[[["i8",0]],["pixa",0]],[[["i8",0]],["pixa",0]],[[["i8",0],["i8",0]],["pixa",0]],[[["sarray",0]],["pixa",0]],[[["u8",0],["u64",0]],["pixa",0]],[[["u8",0],["u64",0]],["pixa",0]],[[["i8",0]],["pixa",0]],[[["_io_file",0]],["pixa",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0],["pix",0],["pix",0]],["pixa",0]],[[["pixa",0],["f32",0],["i32",0],["pix",0],["pix",0]],["pixa",0]],[[["pixa",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0],["pix",0],["box",0]],["i32",0]],[[["pixa",0],["numa",0]],["i32",0]],[[["pix",0],["pixa",0],["i32",0]],["pix",0]],[[["pixa",0],["i32",0],["pix",0],["box",0]],["i32",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0]],["pixa",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["pixa",0],["f32",0],["f32",0]],["pixa",0]],[[["pixa",0],["f32",0],["f32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["f32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["f32",0],["i32",0],["i32",0],["u32",0],["i32",0],["i8",0]],["i32",0]],[[["pixa",0],["numa",0],["i32",0]],["pixa",0]],[[["pixa",0],["i8",0],["i32",0]],["pixa",0]],[[["pixa",0],["boxa",0],["i32",0]],["i32",0]],[[["pixa",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i8",0],["sarray",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["numa",0],["i32",0]],["pixa",0]],[[["pixa",0],["numaa",0],["i32",0]],["pixaa",0]],[[["pixa",0],["numa",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0],["u32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixa",0]],["i32",0]],[[["pixa",0],["i8",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixa",0]],["i32",0]],[[["i8",0],["pixa",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pixa",0]],["i32",0]],[[["u8",0],["u64",0],["pixa",0]],["i32",0]],[[["u8",0],["u64",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixa",0]],["i32",0]],[[["_io_file",0],["pixa",0]],["i32",0]],[[["_io_file",0],["pixa",0]],["i32",0]],[[["_io_file",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],null,null,null,null,null,[[["pixaa",0],["box",0],["i32",0]],["i32",0]],[[["pixaa",0],["i32",0],["pix",0],["box",0],["i32",0]],["i32",0]],[[["pixaa",0],["pixa",0],["i32",0]],["i32",0]],[[["pixaa",0]],["i32",0]],[[["i32",0]],["pixaa",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0]],["pixaa",0]],[[["pixaa",0]]],[[["pixaa",0],["i32",0],["i32",0]],["pix",0]],[[["pixaa",0],["i32",0],["f32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixaa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pixa",0]],[[["pixaa",0]],["i32",0]],[[["pixaa",0],["numa",0],["i32",0]],["pixa",0]],[[["pixaa",0],["i32",0]],["boxa",0]],[[["pixaa",0],["numa",0]],["i32",0]],[[["pixaa",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixaa",0],["i32",0],["i32",0]],["pixa",0]],[[["pixaa",0],["pixa",0]],["i32",0]],[[["pixaa",0],["i32",0]],["i32",0]],[[["pixaa",0],["pixaa",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["pixaa",0]],[[["i8",0],["i8",0],["i32",0],["i32",0]],["pixaa",0]],[[["u8",0],["u64",0]],["pixaa",0]],[[["_io_file",0]],["pixaa",0]],[[["pixaa",0],["i32",0],["pixa",0]],["i32",0]],[[["pixaa",0],["i32",0],["i32",0]],["pixaa",0]],[[["pixaa",0],["numa",0],["numa",0]],["pixaa",0]],[[["pixaa",0],["i32",0],["i32",0],["i32",0]],["pixaa",0]],[[["pixaa",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixaa",0]],["i32",0]],[[["pixaa",0],["i32",0],["i32",0]],["i32",0]],[[["pixaa",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixaa",0]],["i32",0]],[[["u8",0],["u64",0],["pixaa",0]],["i32",0]],[[["_io_file",0],["pixaa",0]],["i32",0]],null,[[["pixacc",0],["pix",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0]],["pixacc",0]],[[["pix",0],["i32",0]],["pixacc",0]],[[["pixacc",0]]],[[["pixacc",0],["i32",0]],["pix",0]],[[["pixacc",0]],["i32",0]],[[["pixacc",0]],["pix",0]],[[["pixacc",0],["f32",0]],["i32",0]],[[["pixacc",0],["pix",0],["f32",0]],["i32",0]],[[["pixacc",0],["pix",0]],["i32",0]],[[["pixacomp",0],["box",0],["i32",0]],["i32",0]],[[["pixacomp",0],["pix",0],["i32",0]],["i32",0]],[[["pixacomp",0],["pixcomp",0],["i32",0]],["i32",0]],[[["pixacomp",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["pixacomp",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["i32",0]],["pixacomp",0]],[[["i8",0],["i8",0],["i32",0]],["pixacomp",0]],[[["pixa",0],["i32",0],["i32",0]],["pixacomp",0]],[[["sarray",0],["i32",0]],["pixacomp",0]],[[["i32",0],["i32",0],["pix",0],["i32",0]],["pixacomp",0]],[[["pixacomp",0]]],[[["pixacomp",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["pixacomp",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["pixacomp",0],["i32",0],["i32",0]],["box",0]],[[["pixacomp",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixacomp",0],["i32",0]],["boxa",0]],[[["pixacomp",0]],["i32",0]],[[["pixacomp",0]],["i32",0]],[[["pixacomp",0]],["i32",0]],[[["pixacomp",0],["i32",0]],["pix",0]],[[["pixacomp",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixacomp",0],["i32",0],["i32",0]],["pixcomp",0]],[[["pixacomp",0],["pixacomp",0]],["pixacomp",0]],[[["pixacomp",0],["pixacomp",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["pixacomp",0]],[[["u8",0],["u64",0]],["pixacomp",0]],[[["_io_file",0]],["pixacomp",0]],[[["pixacomp",0],["i32",0],["pix",0],["i32",0]],["i32",0]],[[["pixacomp",0],["i32",0],["pixcomp",0]],["i32",0]],[[["pixacomp",0],["i32",0]],["i32",0]],[[["i8",0],["pixacomp",0]],["i32",0]],[[["pixacomp",0],["i8",0]],["i32",0]],[[["u8",0],["u64",0],["pixacomp",0]],["i32",0]],[[["_io_file",0],["pixacomp",0]],["i32",0]],[[["_io_file",0],["pixacomp",0],["i8",0]],["i32",0]],null,null,null,null,null,null,null,[[["pixcolormap",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0],["f32",0],["f32",0],["f32",0]],["pixcolormap",0]],[[["pixcolormap",0],["f32",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0]],["pixcolormap",0]],[[["pixcolormap",0]],["pixcolormap",0]],[[["u8",0],["i32",0]],["i8",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0]],["pixcolormap",0]],[[["pixcolormap",0],["i32",0]],["i32",0]],[[["i32",0]],["pixcolormap",0]],[[["i32",0],["i32",0]],["pixcolormap",0]],[[["i32",0],["i32",0],["i32",0]],["pixcolormap",0]],[[["u8",0],["i32",0],["i32",0]],["pixcolormap",0]],[[["pixcolormap",0]]],[[["pixcolormap",0],["f32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["u32",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["u32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["f32",0],["i32",0]],["i32",0]],[[["u32",0]],["pixcolormap",0]],[[["pixcolormap",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0]],["i32",0]],[[["i8",0]],["pixcolormap",0]],[[["u8",0],["u64",0]],["pixcolormap",0]],[[["_io_file",0]],["pixcolormap",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["u8",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["u32",0],["u32",0]],["i32",0]],[[["pixcolormap",0],["f32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["u32",0],["i32",0]],["i32",0]],[[["pixcolormap",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixcolormap",0]],["i32",0]],[[["u8",0],["u64",0],["pixcolormap",0]],["i32",0]],[[["_io_file",0],["pixcolormap",0]],["i32",0]],[[["pixcomp",0]],["pixcomp",0]],[[["i8",0],["i32",0]],["pixcomp",0]],[[["pix",0],["i32",0]],["pixcomp",0]],[[["u8",0],["u64",0],["i32",0]],["pixcomp",0]],[[["pixcomp",0]]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcomp",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pixcomp",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["pixcomp",0]],["i32",0]],[[["_io_file",0],["pixcomp",0],["i8",0]],["i32",0]],null,null,[[["i32",0],["i32",0],["i32",0],["f32",0],["u32",0]],["i32",0]],[[["u32",0],["u32",0],["u32",0],["u32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["u32",0],["u32",0],["u32",0]],["i32",0]],null,null,null,null,null,null,null,null,null,[[["u64",0],["u64",0],["numa",0],["i8",0]],["i32",0]],[[["u64",0]],["c_void",0]],[[["c_void",0]]],[[]],[[["u64",0]],["c_void",0]],[[["u64",0],["i32",0]],["i32",0]],[[["c_void",0],["i32",0]],["i32",0]],[[]],[[["i8",0],["i8",0]],["_io_file",0]],[[["c_void",0],["u64",0],["u64",0]],["i32",0]],null,null,null,[[["i8",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["f32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0],["fd_set",0],["fd_set",0],["fd_set",0],["timespec",0],["__sigset_t",0]],["i32",0]],null,null,[[["pta",0],["f32",0],["f32",0]],["i32",0]],[[["pta",0],["f32",0]],["pta",0]],[[["pta",0],["i32",0]],["i32",0]],[[["pta",0]],["pta",0]],[[["pta",0],["i32",0],["i32",0]],["i32",0]],[[["pta",0]],["box",0]],[[["pta",0],["i32",0]],["boxa",0]],[[["pta",0],["numa",0],["numa",0]],["i32",0]],[[["pta",0]],["pta",0]],[[["pta",0],["i32",0],["i32",0]],["pta",0]],[[["i32",0]],["pta",0]],[[["numa",0],["numa",0]],["pta",0]],[[["pta",0],["pix",0]],["pta",0]],[[["pta",0],["i32",0],["i32",0]],["pta",0]],[[["pta",0]]],[[["pta",0]],["i32",0]],[[["pta",0],["pta",0],["i32",0]],["i32",0]],[[["pta",0],["l_dnahash",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pta",0],["numa",0],["numa",0]],["i32",0]],[[["pix",0],["i32",0]],["pta",0]],[[["pta",0]],["box",0]],[[["pta",0]],["i32",0]],[[["pta",0],["f32",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pta",0],["box",0]],["pta",0]],[[["pta",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pta",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pix",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["pix",0],["box",0]],["pta",0]],[[["pta",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pta",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pta",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pta",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["pta",0],["f32",0],["pta",0],["i32",0],["f32",0]],["i32",0]],[[["pta",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0],["numa",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pta",0],["pta",0]],["pta",0]],[[["pta",0],["pta",0]],["pta",0]],[[["pta",0],["pta",0],["i32",0],["i32",0]],["i32",0]],[[["pta",0],["f32",0],["pta",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pta",0],["f32",0],["pta",0],["f32",0],["f32",0],["f32",0],["f32",0],["numa",0]],["i32",0]],[[["pta",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["i8",0]],["pta",0]],[[["u8",0],["u64",0]],["pta",0]],[[["_io_file",0]],["pta",0]],[[["pta",0]],["pta",0]],[[["pta",0],["pta",0],["l_dnahash",0]],["i32",0]],[[["pta",0],["i32",0]],["i32",0]],[[["pta",0],["pix",0],["pta",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pta",0]],[[["pta",0],["i32",0]],["pta",0]],[[["pta",0],["f32",0],["f32",0],["f32",0]],["pta",0]],[[["pta",0],["f32",0],["f32",0]],["pta",0]],[[["pta",0],["f32",0],["f32",0],["i32",0],["i32",0]],["pta",0]],[[["pta",0],["i32",0],["i32",0]],["pta",0]],[[["pta",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0],["numa",0]],["pta",0]],[[["pta",0]],["pta",0]],[[["pta",0],["numa",0]],["pta",0]],[[["pta",0],["i32",0]],["pta",0]],[[["pta",0],["pta",0]],["i32",0]],[[["pta",0],["i32",0],["i32",0],["f32",0],["f32",0]],["pta",0]],[[["pta",0],["f32",0],["f32",0]],["pta",0]],[[["pta",0]],["pta",0]],[[["pta",0],["pta",0]],["pta",0]],[[["pta",0],["pta",0]],["pta",0]],[[["i8",0],["pta",0],["i32",0]],["i32",0]],[[["i8",0],["pta",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["pta",0],["i32",0]],["i32",0]],[[["_io_file",0],["pta",0],["i32",0]],["i32",0]],null,null,[[["ptaa",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["ptaa",0],["pta",0],["i32",0]],["i32",0]],[[["i32",0]],["ptaa",0]],[[["ptaa",0]]],[[["pix",0],["i32",0],["i32",0],["boxa",0],["pixa",0]],["ptaa",0]],[[["ptaa",0]],["i32",0]],[[["ptaa",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["ptaa",0],["i32",0],["i32",0]],["pta",0]],[[["pix",0],["i32",0]],["ptaa",0]],[[["ptaa",0],["pta",0]],["i32",0]],[[["ptaa",0],["ptaa",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0]],["ptaa",0]],[[["u8",0],["u64",0]],["ptaa",0]],[[["_io_file",0]],["ptaa",0]],[[["ptaa",0],["i32",0],["pta",0]],["i32",0]],[[["ptaa",0],["numa",0]],["ptaa",0]],[[["ptaa",0]],["i32",0]],[[["i8",0],["ptaa",0],["i32",0]],["i32",0]],[[["i8",0],["ptaa",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["ptaa",0],["i32",0]],["i32",0]],[[["_io_file",0],["ptaa",0],["i32",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["l_ptra",0],["c_void",0]],["i32",0]],[[["l_ptra",0]],["i32",0]],[[["l_ptra",0],["i8",0]],["i32",0]],[[["l_ptra",0],["sarray",0],["u8",0],["u64",0]],["i32",0]],[[["i32",0]],["l_ptra",0]],[[["l_ptra",0],["i32",0],["i32",0]]],[[["l_ptra",0],["i32",0]],["i32",0]],[[["l_ptra",0],["i32",0]],["i32",0]],[[["l_ptra",0],["i32",0]],["c_void",0]],[[["l_ptra",0],["i32",0],["c_void",0],["i32",0]],["i32",0]],[[["l_ptra",0],["l_ptra",0]],["i32",0]],[[["l_ptra",0],["i32",0],["i32",0]],["c_void",0]],[[["l_ptra",0]],["c_void",0]],[[["l_ptra",0],["i32",0],["c_void",0],["i32",0]],["c_void",0]],[[["l_ptra",0]],["i32",0]],[[["l_ptra",0],["i32",0],["i32",0]],["i32",0]],[[["i32",0]],["l_ptraa",0]],[[["l_ptraa",0],["i32",0],["i32",0]]],[[["l_ptraa",0]],["l_ptra",0]],[[["l_ptraa",0],["i32",0],["i32",0]],["l_ptra",0]],[[["l_ptraa",0],["i32",0]],["i32",0]],[[["l_ptraa",0],["i32",0],["l_ptra",0]],["i32",0]],null,[[["i32",0],["_io_file",0]],["i32",0]],[[["i32",0],["_io_file",0]],["i32",0]],[[["i32",0]],["i32",0]],[[["i32",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["i32",0],["_io_file",0]],["i32",0]],[[["u128",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["u128",0],["i32",0],["i32",0],["i32",0],["i8",0],["u64",0]],["i32",0]],[[["u128",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["u128",0],["i32",0],["i32",0],["i32",0],["i8",0],["u64",0]],["i32",0]],[[["u128",0],["i32",0],["i8",0]],["i8",0]],[[["c_void",0],["u64",0],["u64",0],["option",4]]],null,[[["fpixa",0],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["fpixa",0],["i32",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["i32",0],["i32",0]],["i32",0]],[[["i32",0]]],null,null,null,[[],["i32",0]],null,[[["u32",0]],["i32",0]],null,null,[[],["i64",0]],null,[[["random_data",0],["i32",0]],["i32",0]],null,[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]]],null,[[["l_rch",0]]],[[["l_rch",0],["i32",0],["f32",0],["i8",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],null,[[["l_rcha",0]]],[[["l_rcha",0],["numa",0],["numa",0],["sarray",0],["numa",0],["numa",0],["numa",0],["numa",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["u8",0],["u64",0],["i32",0],["i32",0]],["i32",0]],[[["c_void",0],["u64",0]],["c_void",0]],[[["c_void",0],["i32",0],["i32",0]],["c_void",0]],[[["c_void",0],["u64",0],["u64",0]],["c_void",0]],[[["i8",0],["i8",0]],["i8",0]],[[["l_recog",0],["sarray",0]],["pixa",0]],[[["l_recog",0],["pix",0],["i32",0]],["i32",0]],[[["l_recog",0],["i32",0]],["i32",0]],[[["l_recog",0],["pix",0],["box",0],["f32",0],["i32",0],["i8",0],["pix",0]],["i32",0]],[[["l_recog",0],["pix",0],["boxa",0],["numa",0],["numa",0],["sarray",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_recog",0]],[[["l_recog",0],["pix",0]],["i32",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_recog",0]],[[["pixa",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_recog",0]],[[["l_recog",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_recog",0]],[[["l_recog",0],["i32",0]],["i32",0]],[[["l_recog",0],["pix",0],["i32",0],["pix",0]],["boxa",0]],[[["l_recog",0]]],[[["l_recog",0]],["i32",0]],[[["l_recog",0]],["i32",0]],[[["l_recog",0],["boxa",0],["f32",0],["i32",0],["boxaa",0],["numaa",0]],["sarray",0]],[[["l_recog",0]],["pixa",0]],[[["pixa",0],["i32",0],["i32",0],["f32",0],["numa",0]],["pixa",0]],[[["l_recog",0],["i32",0],["i8",0],["i32",0]],["i32",0]],[[["l_recog",0],["i32",0],["i8",0]],["i32",0]],[[["l_recog",0]],["i32",0]],[[["l_recog",0]],["l_rdid",0]],[[["l_recog",0],["pix",0],["i32",0],["i32",0],["boxa",0],["pixa",0],["pix",0],["i32",0]],["i32",0]],[[["l_recog",0],["pix",0],["pix",0]],["i32",0]],[[["l_recog",0],["pixa",0],["pix",0]],["i32",0]],[[["l_recog",0],["sarray",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["l_recog",0]],[[["i32",0],["i32",0]],["pixa",0]],[[["l_recog",0],["pix",0]],["pix",0]],[[["l_recog",0],["i32",0],["i32",0]],["i32",0]],[[["l_recog",0],["pix",0],["box",0],["i8",0],["pix",0]],["i32",0]],[[["l_recog",0],["pix",0],["i32",0]],["pix",0]],[[["i8",0]],["l_recog",0]],[[["u8",0],["u64",0]],["l_recog",0]],[[["_io_file",0]],["l_recog",0]],[[["l_recog",0],["f32",0],["i32",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["l_recog",0],["f32",0],["i32",0],["pix",0],["pix",0]],["i32",0]],[[["l_recog",0],["i32",0]],["i32",0]],[[["l_recog",0],["i32",0],["i32",0],["f32",0],["f32",0]],["i32",0]],[[["l_recog",0]],["i32",0]],[[["_io_file",0],["l_recog",0],["i32",0],["i32",0]],["i32",0]],[[["l_recog",0],["pix",0],["pix",0],["box",0],["i32",0],["f32",0]],["pix",0]],[[["l_recog",0],["pixa",0],["f32",0],["f32",0],["i32",0]],["i32",0]],[[["l_recog",0]],["i32",0]],[[["pixa",0],["i32",0]],["pixaa",0]],[[["l_recog",0],["pix",0],["i32",0],["i32",0],["boxa",0],["pixa",0],["i32",0]],["i32",0]],[[["l_recog",0],["i8",0],["i32",0]],["i32",0]],[[["l_recog",0],["pixa",0],["f32",0],["i32",0],["i32",0]],["pixa",0]],[[["l_recog",0],["pix",0],["box",0],["i8",0],["i32",0]],["i32",0]],[[["l_recog",0],["i32",0],["i32",0],["f32",0]],["i32",0]],[[["i8",0],["l_recog",0]],["i32",0]],[[["u8",0],["u64",0],["l_recog",0]],["i32",0]],[[["_io_file",0],["l_recog",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i8",0]],null,[[["l_regparams",0],["i8",0]],["i32",0]],[[["l_regparams",0]],["i32",0]],[[["l_regparams",0],["i32",0],["i32",0]],["i32",0]],[[["l_regparams",0],["pix",0],["pix",0]],["i32",0]],[[["l_regparams",0],["pix",0],["pix",0],["i32",0],["f32",0],["i32",0]],["i32",0]],[[["l_regparams",0],["u8",0],["u64",0],["u8",0],["u64",0]],["i32",0]],[[["l_regparams",0],["f32",0],["f32",0],["f32",0]],["i32",0]],[[["l_regparams",0],["i32",0],["i32",0]],["i8",0]],[[["i32",0],["i8",0],["l_regparams",0]],["i32",0]],[[["l_regparams",0],["c_void",0],["u64",0],["i8",0]],["i32",0]],[[["l_regparams",0],["pix",0],["i32",0]],["i32",0]],null,null,null,null,null,[[["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i32",0],["i8",0],["i32",0],["i8",0]],["i32",0]],null,[[["i32",0]]],[[["i8",0],["i8",0],["f32",0]],["f32",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0],["c_void",0]],["c_void",0]],[[["_io_file",0]]],null,null,null,null,null,[[["i8",0]],["i32",0]],null,[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["sarray",0],["i8",0]],["i32",0]],[[["sarray",0],["u8",0],["u64",0]],["i32",0]],[[["sarray",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["i8",0]],["i32",0]],[[["sarray",0],["i32",0],["f32",0],["i32",0],["i32",0],["i8",0],["u8",0],["u64",0]],["i32",0]],[[["sarray",0],["i8",0],["i8",0]],["i32",0]],[[["sarray",0],["i8",0],["u8",0],["u64",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,[[["sarray",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["sarray",0]],["i32",0]],[[["sarray",0],["sarray",0],["i32",0],["i32",0]],["i32",0]],[[["sarray",0],["i32",0]],["i32",0]],[[["sarray",0]],["i32",0]],[[["sarray",0]],["sarray",0]],[[["sarray",0],["f32",0],["f32",0],["i8",0]],["i32",0]],[[["sarray",0],["i32",0],["i8",0]],["i32",0]],[[["sarray",0],["i32",0]],["sarray",0]],[[["sarray",0]],["sarray",0]],[[["i32",0]],["sarray",0]],[[["i32",0],["i8",0]],["sarray",0]],[[["i8",0],["i32",0]],["sarray",0]],[[["i8",0]],["sarray",0]],[[["sarray",0]]],[[["sarray",0],["l_dnahash",0],["i8",0],["i32",0]],["i32",0]],[[["i32",0]],["sarray",0]],[[["sarray",0],["i32",0],["i32",0]],["i8",0]],[[["sarray",0]],["i32",0]],[[["sarray",0]],["i32",0]],[[["sarray",0],["i32",0],["i32",0]],["i8",0]],[[["sarray",0],["sarray",0]],["sarray",0]],[[["sarray",0],["sarray",0]],["sarray",0]],[[["sarray",0],["sarray",0]],["i32",0]],[[["sarray",0],["i8",0],["i8",0]],["i32",0]],[[["sarray",0],["sarray",0],["i8",0]],["i32",0]],[[["sarray",0],["i32",0],["i32",0],["i32",0],["i32",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0]],["sarray",0]],[[["u8",0],["u64",0]],["sarray",0]],[[["_io_file",0]],["sarray",0]],[[["sarray",0]],["sarray",0]],[[["sarray",0],["sarray",0],["l_dnahash",0]],["i32",0]],[[["sarray",0],["i32",0]],["i8",0]],[[["sarray",0],["i32",0],["i8",0],["i32",0]],["i32",0]],[[["sarray",0],["i32",0],["i32",0]],["sarray",0]],[[["sarray",0],["i8",0]],["sarray",0]],[[["sarray",0],["sarray",0],["i32",0]],["sarray",0]],[[["sarray",0],["numa",0]],["sarray",0]],[[["sarray",0],["i8",0],["i8",0]],["i32",0]],[[["sarray",0],["i32",0]],["i8",0]],[[["sarray",0],["i32",0],["i32",0],["i32",0]],["i8",0]],[[["sarray",0],["sarray",0]],["sarray",0]],[[["i8",0],["sarray",0]],["i32",0]],[[["u8",0],["u64",0],["sarray",0]],["i32",0]],[[["_io_file",0],["sarray",0]],["i32",0]],null,null,null,null,[[["i8",0]],["i32",0]],[[["i8",0]],["i32",0]],null,[[["u16",0]],["u16",0]],[[["u16",0],["drand48_data",0]],["i32",0]],null,[[["sel",0]],["sel",0]],[[["i32",0],["i32",0],["i8",0]],["sel",0]],[[["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["sel",0]],[[["i32",0],["i32",0],["i32",0]],["sel",0]],[[["pix",0],["i8",0]],["sel",0]],[[["pix",0],["i32",0],["i32",0],["i8",0]],["sel",0]],[[["pta",0],["i32",0],["i32",0],["i8",0]],["sel",0]],[[["i8",0],["i32",0],["i32",0],["i8",0]],["sel",0]],[[["sel",0]]],[[["sel",0],["i32",0],["i32",0]],["pix",0]],[[["sel",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["sel",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["sel",0]],["i8",0]],[[["sel",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["sel",0],["i32",0]],["i32",0]],[[["i32",0],["i32",0]],["sel",0]],[[["sel",0]],["i8",0]],[[["i8",0]],["sel",0]],[[["i8",0]],["sel",0]],[[["_io_file",0]],["sel",0]],[[["sel",0],["i32",0]],["sel",0]],[[["sel",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["sel",0],["i8",0]],["i32",0]],[[["sel",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["sel",0]],["i32",0]],[[["_io_file",0],["sel",0]],["i32",0]],[[["sela",0]],["sela",0]],[[["sela",0]],["sela",0]],[[["sela",0]],["sela",0]],[[["sela",0]],["sela",0]],[[["sela",0],["f32",0],["f32",0],["i32",0],["i32",0]],["sela",0]],[[["sela",0]],["sela",0]],[[["sela",0]],["sela",0]],[[["sela",0]],["sela",0]],[[["sela",0],["sel",0],["i8",0],["i32",0]],["i32",0]],[[["sela",0],["f32",0],["f32",0],["i32",0],["i32",0]],["sela",0]],[[["i32",0]],["sela",0]],[[["pixa",0],["sarray",0]],["sela",0]],[[["i8",0]],["sela",0]],[[["sela",0]]],[[["sela",0],["i32",0],["i32",0],["i32",0],["i32",0]],["pix",0]],[[["sela",0],["i8",0],["i32",0],["sel",0]],["i32",0]],[[["sela",0],["i32",0],["i32",0]],["i8",0]],[[["sela",0],["i32",0],["i32",0]],["i8",0]],[[["sela",0]],["i32",0]],[[["sela",0],["i32",0]],["sel",0]],[[["sela",0]],["sarray",0]],[[["i32",0],["i32",0]],["sela",0]],[[["i8",0]],["sela",0]],[[["_io_file",0]],["sela",0]],[[["i8",0],["sela",0]],["i32",0]],[[["_io_file",0],["sela",0]],["i32",0]],[[["i32",0],["fd_set",0],["fd_set",0],["fd_set",0],["timeval",0]],["i32",0]],[[["i32",0],["i32",0],["sel",0],["sel",0]],["i32",0]],[[["i32",0],["i32",0],["i32",0]],["i32",0]],[[["pix",0],["i32",0]],["i32",0]],[[["i32",0]]],[[["u32",0],["i32",0],["i32",0],["u32",0]],["i32",0]],[[["i32",0]],["i32",0]],[[["option",4],["option",4]]],[[["u32",0],["i32",0],["i32",0],["u32",0]]],[[["_io_file",0],["i8",0]]],[[["_io_file",0],["i8",0],["u64",0]]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["_io_file",0]]],null,[[["i8",0]],["i8",0]],[[["i8",0],["random_data",0]],["i32",0]],[[["_io_file",0],["i8",0],["i32",0],["u64",0]],["i32",0]],null,[[["pix",0],["sarray",0],["boxaa",0],["numaa",0],["pix",0]],["pixa",0]],null,null,null,null,null,null,null,null,[[["i8",0],["u64",0],["i8",0]],["i32",0]],null,null,null,[[["i8",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i32",0]],["sarray",0]],null,null,null,[[["i8",0],["i8",0]],["i32",0]],[[["u32",0]]],[[["i64",0]]],[[["i64",0],["drand48_data",0]],["i32",0]],[[["u32",0]]],[[["u32",0],["random_data",0]],["i32",0]],[[["u32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],null,null,null,[[]],[[],["c_void",0]],[[],["l_walltimer",0]],null,null,null,null,null,null,null,null,null,null,[[],["f32",0]],[[["c_void",0]],["f32",0]],[[["l_walltimer",0]],["f32",0]],null,null,[[["i32",0]],["l_strcode",0]],[[["i8",0],["i32",0],["i8",0]],["i32",0]],[[["l_strcode",0],["i8",0]],["i32",0]],[[["l_strcode",0],["i8",0],["i8",0]],["i32",0]],[[["i8",0],["u64",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0]],["i8",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i32",0],["i32",0]],["i8",0]],[[["i8",0],["i8",0]],["l_dna",0]],[[["i8",0],["i8",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0]],["i8",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["u64",0]],["i32",0]],[[["i8",0]],["i8",0]],[[["i8",0],["i8",0]],["i8",0]],[[["i8",0],["i8",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0],["i32",0]],["i8",0]],[[["i8",0],["i8",0],["i8",0],["i32",0],["i32",0]],["i8",0]],[[["i8",0]],["i8",0]],[[["i8",0],["i8",0],["i8",0],["i8",0]],["i32",0]],null,[[["i8",0],["i8",0]],["f64",0]],[[["i8",0],["i8",0]],["f32",0]],[[["i8",0],["i8",0],["i8",0]],["i8",0]],[[["i8",0],["i8",0],["i32",0]],["i64",0]],[[["i8",0],["i8",0]],["u128",0]],[[["i8",0],["i8",0],["i32",0]],["i64",0]],[[["i8",0],["i8",0],["i32",0]],["i64",0]],[[["i8",0],["i8",0],["i32",0]],["u64",0]],[[["i8",0],["i8",0],["i32",0]],["u64",0]],[[["i8",0],["i8",0],["i32",0]],["u64",0]],null,[[["i32",0]],["l_sudoku",0]],[[["l_sudoku",0]]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["l_sudoku",0]],[[["l_sudoku",0],["i32",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["i8",0]],["i32",0]],[[["l_sudoku",0]],["i32",0]],[[["i32",0],["i32",0]],["i32",0]],null,null,null,null,null,null,null,null,[[["i8",0]],["i32",0]],null,null,[[["i8",0],["i8",0]],["i8",0]],null,null,null,null,null,null,[[["u32",0],["i32",0],["u32",0],["i32",0],["i32",0]]],[[["_io_file",0],["i32",0]],["i32",0]],null,null,null,null,null,null,[[],["_io_file",0]],[[["i8",0]],["i8",0]],[[["i8",0]],["inull,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",0],["_io_file",0]],["i32",0]],[[["i8",0]],["i32",0]],null,null,null,null,[[["u64",0]],["c_void",0]],null,[[["i32",0],["i8",0],["__va_list_tag",0]],["i32",0]],null,[[["_io_file",0],["i8",0],["__va_list_tag",0]],["i32",0]],[[["_io_file",0],["i8",0],["__va_list_tag",0]],["i32",0]],[[["_io_file",0],["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["u64",0],["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["i8",0],["__va_list_tag",0]],["i32",0]],[[["i8",0],["i8",0],["__va_list_tag",0]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",0],["i32",0],["u64",0]],["u64",0]],[[["i8",0],["i32",0]],["i32",0]],null,null,null,null,null,null,null,[[["i8",0],["i8",0],["i32",0],["i32",0]],["i32",0]],[[["i8",0],["_io_file",0],["i32",0]],["i32",0]],[[["i8",0],["i8",0],["i8",0]],["i32",0]],[[["sarray",0],["i8",0]],["i32",0]],[[["l_wshed",0]],["i32",0]],[[["l_wshed",0],["pixa",0],["numa",0]],["i32",0]],[[["pix",0],["pix",0],["i32",0],["i32",0]],["l_wshed",0]],[[["l_wshed",0]]],[[["l_wshed",0]],["pix",0]],[[["l_wshed",0]],["pix",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",0],["u64",0],["u64",0]],["u8",0]],[[["u8",0],["u64",0],["u64",0]],["u8",0]],null,null,null,null,null,null,null,null,null,[[["box",3]],["box",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["result",4,[["box",3],["boxcreatevaliderror",3]]]],[[["box",3]]],[[["box",3],["box",3]],["bool",0]],[[["pixerror",4],["formatter",3]],["result",6]],[[["pixerror",4],["formatter",3]],["result",6]],[[["box",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["nulerror",6]],["pixerror",4]],[[["tryfrominterror",3]],["pixerror",4]],[[]],[[["boxa",3],["usize",0]],["option",4,[["borrowedbox",3]]]],[[["pix",3]],["u32",0]],[[["boxa",3]],["usize",0]],[[["pix",3]],["u32",0]],[[]],[[]],[[]],[[]],[[]],[[["boxa",3]]],[[]],[[["box",3],["box",3]],["bool",0]],[[["i32",0],["i32",0],["i32",0],["i32",0]],["result",4,[["box",3],["boxcreatevaliderror",3]]]],[[["boxarefiterator",3]],["option",4]],[[["path",3]],["result",4,[["pix",3],["pixerror",4]]]],[[],["result",4,[["pix",3],["pixerror",4]]]],null,null,[[["pixerror",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["tessiniterror",3],["tessiniterror",3]],["bool",0]],[[["tesssetvariableerror",3],["tesssetvariableerror",3]],["bool",0]],[[["tessiniterror",3],["formatter",3]],["result",6]],[[["tessiniterror",3],["formatter",3]],["result",6]],[[["tesssetvariableerror",3],["formatter",3]],["result",6]],[[["tesssetvariableerror",3],["formatter",3]],["result",6]],[[["tessapi",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["tessapi",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["tessapi",3],["tesspageiteratorlevel",6],["bool",0]],["option",4,[["boxa",3]]]],[[["tessapi",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["tessapi",3]],["option",4]],[[["tessapi",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["tessapi",3]],["option",4,[["boxa",3]]]],[[["tessapi",3]],["i32",0]],[[["tessapi",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[["tessapi",3]],["result",4,[["string",3],["utf8error",3]]]],[[["tessapi",3],["c_int",6]],["result",4,[["string",3],["utf8error",3]]]],[[]],[[]],[[]],[[["tessapi",3]],["i32",0]],[[["tessiniterror",3],["tessiniterror",3]],["bool",0]],[[["option",4,[["str",0]]],["str",0]],["result",4,[["tessapi",3],["tessiniterror",3]]]],null,[[["tessapi",3]],["i32",0]],[[["tessapi",3],["pix",3]]],[[["tessapi",3],["asref",8,[["box",3]]]]],[[["tessapi",3],["i32",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"Variable"],[3,"LepTess"],[3,"_IO_FILE"],[3,"drand48_data"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"__pthread_cond_s"],[3,"__mbstate_t"],[3,"__pthread_mutex_s"],[3,"__pthread_rwlock_arch_t"],[3,"fd_set"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[3,"__pthread_internal_list"],[3,"__pthread_internal_slist"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"__fsid_t"],[3,"__sigset_t"],[19,"__mbstate_t__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"RGBA_Quad"],[3,"Numa"],[3,"L_Dna"],[3,"Sarray"],[3,"L_ByteBuffer"],[3,"L_Heap"],[3,"L_Ptra"],[3,"L_Queue"],[3,"L_Stack"],[3,"PixColormap"],[3,"L_WShed"],[3,"L_Recog"],[3,"JbClasser"],[3,"L_Bmf"],[3,"L_Rdid"],[3,"TessResultRenderer"],[3,"TessBaseAPI"],[3,"TessPageIterator"],[3,"TessResultIterator"],[3,"TessMutableIterator"],[3,"TessChoiceIterator"],[3,"ETEXT_DESC"],[3,"_IO_marker"],[3,"_IO_codecvt"],[3,"_IO_wide_data"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"timeval"],[3,"timespec"],[3,"random_data"],[3,"L_WallTimer"],[3,"Numaa"],[3,"L_Dnaa"],[3,"L_DnaHash"],[3,"L_Bytea"],[3,"DoubleLinkedList"],[3,"L_Ptraa"],[19,"Rb_Type"],[3,"L_Rbtree"],[3,"L_Rbtree_Node"],[3,"CCBord"],[3,"CCBorda"],[3,"L_Dewarpa"],[3,"L_Dewarp"],[3,"GPlot"],[3,"L_Compressed_Data"],[3,"L_Pdf_Data"],[3,"JbData"],[3,"Sel"],[3,"Sela"],[3,"L_Kernel"],[3,"Pix"],[3,"Pixa"],[3,"Pixaa"],[3,"Box"],[3,"Boxa"],[3,"Boxaa"],[3,"Pta"],[3,"Ptaa"],[3,"Pixacc"],[3,"PixTiling"],[3,"FPix"],[3,"FPixa"],[3,"DPix"],[3,"PixComp"],[3,"PixaComp"],[3,"L_Rch"],[3,"L_Rcha"],[3,"L_RegParams"],[3,"L_StrCode"],[3,"L_Sudoku"],[3,"__va_list_tag"],[4,"PixError"],[3,"Box"],[3,"Pix"],[3,"Boxa"],[3,"BoxaRefIterator"],[13,"ReadFrom"],[13,"InvalidPathNulByte"],[13,"MemoryTooLarge"],[3,"TessInitError"],[3,"TessSetVariableError"],[3,"TessApi"]]},\
"leptonica_plumbing":{"doc":"","t":[3,3,3,3,3,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["BorrowedBox","BorrowedPix","Box","BoxCreateValidError","Boxa","ImageSizeConversion","NullPtr","Pix","PixReadError","PixReadMemError","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","create_valid","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","into","into","into","into","into","into","into","into","leptonica_sys","ne","ne","ne","ne","ne","new","new","new","new_from_pointer","new_from_pointer","read","read_mem","source","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0"],"q":["leptonica_plumbing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","leptonica_plumbing::PixReadMemError"],"d":["Borrowed wrapper around Leptonicaâ€™s <code>Box</code> structure","Borrowed wrapper around Leptonicaâ€™s <code>Pix</code> structure","Wrapper around Leptonicaâ€™s <code>Box</code> structure","Error returned by Box::create_valid","Wrapper around Leptonicaâ€™s <code>Boxa</code> structure","","","Wrapper around Leptonicaâ€™s <code>Pix</code> structure","Error returned by Pix::read","Error returned by Pix::read_mem","","","","","","","","","","","","","","","","","","","","","","","Wrapper for <code>boxaCreate</code>","Wrapper for <code>boxCreateValid</code>","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Safely borrow the nth item","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a new BorrowedBox from a pointer","Create a new BorrowedPix from a pointer","Convinience wrapper for Self::create_valid","Create a new Boxa from a pointer","Create a new instance from a pointer","Wrapper for <code>pixRead</code>","Wrapper for <code>pixReadMem</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,0,0,0,2,3,4,5,6,6,2,3,4,7,5,6,1,8,2,3,4,7,5,6,1,8,5,4,4,5,6,2,3,4,5,1,2,3,4,7,7,5,6,1,1,8,8,2,3,4,7,5,6,1,1,8,5,2,3,4,7,5,6,1,8,0,2,3,4,5,1,2,3,4,5,6,6,6,1,7,1,8,2,3,4,7,5,6,1,8,2,3,4,7,5,6,1,8,2,3,4,7,5,6,1,8,9],"f":[null,null,null,null,null,null,null,null,null,null,[[["borrowedbox",3]],["box",3]],[[["borrowedpix",3]],["pix",3]],[[["box",3]],["box",3]],[[["boxa",3]],["boxa",3]],[[["pix",3]],["pix",3]],[[["pix",3]],["pix",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["l_int32",6]],["option",4,[["boxa",3]]]],[[["l_int32",6],["l_int32",6],["l_int32",6],["l_int32",6]],["result",4,[["box",3],["boxcreatevaliderror",3]]]],[[["box",3]]],[[["boxa",3]]],[[["pix",3]]],[[["borrowedbox",3],["borrowedbox",3]],["bool",0]],[[["borrowedpix",3],["borrowedpix",3]],["bool",0]],[[["box",3],["box",3]],["bool",0]],[[["boxa",3],["boxa",3]],["bool",0]],[[["pixreadmemerror",4],["pixreadmemerror",4]],["bool",0]],[[["borrowedbox",3],["formatter",3]],["result",6]],[[["borrowedpix",3],["formatter",3]],["result",6]],[[["box",3],["formatter",3]],["result",6]],[[["boxcreatevaliderror",3],["formatter",3]],["result",6]],[[["boxcreatevaliderror",3],["formatter",3]],["result",6]],[[["boxa",3],["formatter",3]],["result",6]],[[["pix",3],["formatter",3]],["result",6]],[[["pixreadmemerror",4],["formatter",3]],["result",6]],[[["pixreadmemerror",4],["formatter",3]],["result",6]],[[["pixreaderror",3],["formatter",3]],["result",6]],[[["pixreaderror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tryfrominterror",3]],["pixreadmemerror",4]],[[]],[[["boxa",3],["isize",0]],["option",4,[["borrowedbox",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["borrowedbox",3],["borrowedbox",3]],["bool",0]],[[["borrowedpix",3],["borrowedpix",3]],["bool",0]],[[["box",3],["box",3]],["bool",0]],[[["boxa",3],["boxa",3]],["bool",0]],[[["pixreadmemerror",4],["pixreadmemerror",4]],["bool",0]],[[["box",0]],["borrowedbox",3]],[[["pix",0]],["borrowedpix",3]],[[["l_int32",6],["l_int32",6],["l_int32",6],["l_int32",6]],["result",4,[["box",3],["boxcreatevaliderror",3]]]],[[["boxa",0]],["boxa",3]],[[["pix",0]],["pix",3]],[[["cstr",6]],["result",4,[["pix",3],["pixreaderror",3]]]],[[],["result",4,[["pix",3],["pixreadmemerror",4]]]],[[["pixreadmemerror",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"PixReadMemError"],[3,"BorrowedBox"],[3,"BorrowedPix"],[3,"Box"],[3,"Boxa"],[3,"Pix"],[3,"BoxCreateValidError"],[3,"PixReadError"],[13,"ImageSizeConversion"]]},\
"leptonica_sys":{"doc":"","t":[17,17,17,17,6,6,6,17,17,17,17,3,3,3,6,6,17,17,17,17,3,3,17,17,17,17,17,17,17,17,6,17,6,17,3,3,17,17,17,17,17,6,17,17,6,6,17,3,3,6,6,17,17,17,17,17,17,6,17,17,17,17,6,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,6,6,17,17,6,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,6,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,3,17,6,6,17,17,17,17,17,6,6,6,17,17,17,17,17,17,3,3,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,6,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,6,6,3,3,3,17,17,6,3,6,6,6,6,6,6,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,6,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,3,3,3,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,6,3,3,17,17,17,7,7,6,6,17,17,17,3,3,17,6,6,6,17,6,6,17,17,6,6,6,17,17,17,17,17,17,17,6,6,17,17,17,17,3,3,3,3,3,3,3,3,3,3,17,6,17,17,17,17,17,17,6,3,19,6,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,17,6,6,6,6,3,3,17,17,17,17,17,3,17,12,12,12,3,6,3,12,12,12,12,12,3,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,12,12,12,12,12,12,12,12,12,12,12,6,6,6,6,12,6,6,17,6,17,6,12,12,5,12,6,12,12,12,6,12,6,12,12,6,6,6,6,6,6,3,6,12,12,12,12,12,12,5,6,17,6,17,12,12,6,12,6,6,6,6,6,6,6,6,6,6,6,6,6,12,17,12,17,12,6,12,12,3,19,6,12,12,6,12,6,6,12,5,12,12,12,12,12,12,6,12,12,12,3,19,3,19,3,3,3,6,3,3,6,6,12,6,6,12,12,6,3,17,12,12,12,12,12,12,12,12,12,6,12,6,12,12,17,6,6,6,6,17,6,17,17,6,6,6,6,6,5,6,6,6,6,6,6,6,6,6,6,6,3,12,12,12,12,12,12,12,12,12,12,12,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,6,5,12,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,5,5,5,12,5,5,5,5,5,5,12,12,5,5,12,12,12,12,12,5,5,5,5,5,5,5,5,12,5,5,6,6,12,12,5,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,6,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,12,12,12,5,12,5,5,5,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,5,12,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,12,12,12,12,12,12,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,5,5,12,12,12,12,12,6,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,5,5,5,3,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,12,5,5,5,5,5,5,5,5,12,5,5,5,6,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,5,5,5,5,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,5,5,5,6,6,5,5,5,12,12,12,12,12,12,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,6,17,17,17,12,12,12,12,12,12,12,5,5,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,6,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,5,5,12,12,5,5,5,3,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,12,5,12,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,12,6,12,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,5,12,12,12,6,12,12,12,12,5,5,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,5,5,12,12,12,12,12,5,5,5,5,5,5,5,6,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,5,5,5,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,12,12,12,5,5,5,5,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,19,19,19,19,19,6,19,19,6,19,19,6,6,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,12,12,12,5,12,5,12,12,5,3,5,12,5,5,5,5,12,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,12,5,5,5,5,5,5,5,5,5,5,5,12,6,12,12,12,5,5,5,12,5,5,5,5,5,12,12,12,12,12,5,12,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,5,5,12,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,12,5,6,12,12,12,12,6,12,12,5,12,12,12,5,5,5,12,12,12,5,5,5,5,5,5,5,5,5,6,12,12,5,5,5,12,12,12,12,12,12,7,7,7,12,5,5,5,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,12,6,12,12,12,12,7,7,5,12,12,5,12,12,12,12,12,12,5,5,6,6,3,3,12,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,12,6,12,6,5,12,5,12,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,5,5,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5],"n":["ADDED_BORDER","ASYMMETRIC_MORPH_BC","BIG_ENDIAN","BMP_ID","BOX","BOXA","BOXAA","BOXAA_VERSION_NUMBER","BOXA_VERSION_NUMBER","BUFSIZ","BYTE_ORDER","Box","Boxa","Boxaa","CCBORD","CCBORDA","CCB_GLOBAL_COORDS","CCB_LOCAL_COORDS","CCB_SAVE_ALL_PTS","CCB_SAVE_TURNING_PTS","CCBord","CCBorda","COLOR_BLUE","COLOR_GREEN","COLOR_RED","DEFAULT_CLIP_LOWER_1","DEFAULT_CLIP_LOWER_2","DEFAULT_CLIP_UPPER_1","DEFAULT_CLIP_UPPER_2","DEWARP_VERSION_NUMBER","DLLIST","DNA_VERSION_NUMBER","DPIX","DPIX_VERSION_NUMBER","DPix","DoubleLinkedList","EOF","EXIT_FAILURE","EXIT_SUCCESS","FALSE","FD_SETSIZE","FILE","FILENAME_MAX","FOPEN_MAX","FPIX","FPIXA","FPIX_VERSION_NUMBER","FPix","FPixa","GPLOT","GPLOT_OUTPUT","GPLOT_OUTPUT_GPLOT_EPS","GPLOT_OUTPUT_GPLOT_LATEX","GPLOT_OUTPUT_GPLOT_NONE","GPLOT_OUTPUT_GPLOT_PNG","GPLOT_OUTPUT_GPLOT_PNM","GPLOT_OUTPUT_GPLOT_PS","GPLOT_SCALING","GPLOT_SCALING_GPLOT_LINEAR_SCALE","GPLOT_SCALING_GPLOT_LOG_SCALE_X","GPLOT_SCALING_GPLOT_LOG_SCALE_X_Y","GPLOT_SCALING_GPLOT_LOG_SCALE_Y","GPLOT_STYLE","GPLOT_STYLE_GPLOT_DOTS","GPLOT_STYLE_GPLOT_IMPULSES","GPLOT_STYLE_GPLOT_LINES","GPLOT_STYLE_GPLOT_LINESPOINTS","GPLOT_STYLE_GPLOT_POINTS","GPLOT_VERSION_NUMBER","GPlot","HAVE_FMEMOPEN","HAVE_FSTATAT","HAVE_LIBGIF","HAVE_LIBJP2K","HAVE_LIBJPEG","HAVE_LIBPNG","HAVE_LIBTIFF","HAVE_LIBUNGIF","HAVE_LIBWEBP","HAVE_LIBWEBP_ANIM","HAVE_LIBZ","IFF_BMP","IFF_DEFAULT","IFF_GIF","IFF_JFIF_JPEG","IFF_JP2","IFF_LPDF","IFF_PNG","IFF_PNM","IFF_PS","IFF_SPIX","IFF_TIFF","IFF_TIFF_G3","IFF_TIFF_G4","IFF_TIFF_JPEG","IFF_TIFF_LZW","IFF_TIFF_PACKBITS","IFF_TIFF_RLE","IFF_TIFF_ZIP","IFF_UNKNOWN","IFF_WEBP","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","JBCLASSER","JBDATA","JB_CHARACTERS","JB_CONN_COMPS","JB_CORRELATION","JB_DATA_EXT","JB_RANKHAUS","JB_TEMPLATE_EXT","JB_WORDS","JbClasser","JbData","KERNEL_VERSION_NUMBER","LIBLEPT_MAJOR_VERSION","LIBLEPT_MINOR_VERSION","LIBLEPT_PATCH_VERSION","LITTLE_ENDIAN","L_ADD_ABOVE","L_ADD_AT_BOT","L_ADD_AT_LEFT","L_ADD_AT_RIGHT","L_ADD_AT_TOP","L_ADD_BELOW","L_ADD_LEFT","L_ADD_RIGHT","L_ADD_TRAIL_SLASH","L_ADJUST_BOT","L_ADJUST_CHOOSE_MAX","L_ADJUST_CHOOSE_MIN","L_ADJUST_LEFT","L_ADJUST_LEFT_AND_RIGHT","L_ADJUST_RIGHT","L_ADJUST_SKIP","L_ADJUST_TOP","L_ADJUST_TOP_AND_BOT","L_ALL","L_ALL_EDGES","L_ALPHA_CHANNEL","L_ALPHA_SHIFT","L_AMAP","L_AMAP_NODE","L_ARABIC_NUMERALS","L_ARITH_ADD","L_ARITH_DIVIDE","L_ARITH_MULTIPLY","L_ARITH_SUBTRACT","L_ASET","L_ASET_NODE","L_AUTO_BYTE","L_AUTO_DOWNSHIFT","L_BBUFFER","L_BIN_SORT","L_BLACK_IS_MAX","L_BLEND_GRAY","L_BLEND_GRAY_WITH_INVERSE","L_BLEND_TO_BLACK","L_BLEND_TO_WHITE","L_BLEND_WITH_INVERSE","L_BLUE_SHIFT","L_BLUE_WEIGHT","L_BMF","L_BOTH_DIRECTIONS","L_BOUNDARY_BG","L_BOUNDARY_FG","L_BOX_CENTER","L_BRING_IN_BLACK","L_BRING_IN_WHITE","L_BYTEA","L_Bmf","L_ByteBuffer","L_Bytea","L_CHECK_BOTH","L_CHECK_HEIGHT","L_CHECK_WIDTH","L_CHOOSE_CONSECUTIVE","L_CHOOSE_MAX","L_CHOOSE_MAXDIFF","L_CHOOSE_MAX_BOOST","L_CHOOSE_MIN","L_CHOOSE_MIN_BOOST","L_CHOOSE_SKIP_BY","L_CLEAR_PIXELS","L_CLIP_TO_FF","L_CLIP_TO_FFFF","L_CLIP_TO_ZERO","L_CLONE","L_COMBINE","L_COMPACTION","L_COMPARE_ABS_DIFF","L_COMPARE_SUBTRACT","L_COMPARE_XOR","L_COMP_DATA","L_CONTINUED_BORDER","L_COPY","L_COPY_CLONE","L_Compressed_Data","L_DEFAULT_ENCODE","L_DEWARP","L_DEWARPA","L_DISPLAY_WITH_IV","L_DISPLAY_WITH_OPEN","L_DISPLAY_WITH_XLI","L_DISPLAY_WITH_XV","L_DISPLAY_WITH_XZGV","L_DNA","L_DNAA","L_DNAHASH","L_DRAW_BLUE","L_DRAW_GREEN","L_DRAW_RANDOM","L_DRAW_RED","L_DRAW_RGB","L_DRAW_SPECIFIED","L_Dewarp","L_Dewarpa","L_Dna","L_DnaHash","L_Dnaa","L_EQUAL_TO_ZERO","L_EUCLIDEAN_DISTANCE","L_EXCLUDE_REGION","L_EXCLUSIVE_OR","L_FILL_BLACK","L_FILL_WHITE","L_FIRST_IMAGE","L_FLATE_ENCODE","L_FLIP_PIXELS","L_FLOAT_TYPE","L_FLOAT_VALUE","L_FOUND","L_FROM_BOT","L_FROM_LEFT","L_FROM_RIGHT","L_FROM_TOP","L_FULL_DOWNSHIFT","L_G4_ENCODE","L_GEOMETRIC_INTERSECTION","L_GEOMETRIC_UNION","L_GET_BLACK_VAL","L_GET_BOT","L_GET_LEFT","L_GET_RIGHT","L_GET_TOP","L_GET_WHITE_VAL","L_GREATER_THAN_ZERO","L_GREEN_SHIFT","L_GREEN_WEIGHT","L_HANDLE_ONLY","L_HEAP","L_HORIZ","L_HORIZONTAL_EDGES","L_HORIZONTAL_LINE","L_HORIZONTAL_RUNS","L_HS_HISTO","L_HV_HISTO","L_Heap","L_INCLUDE_REGION","L_INSERT","L_INTEGER_VALUE","L_INTERPOLATED","L_INTERSECTION","L_INT_TYPE","L_JP2K_ENCODE","L_JPEG_ENCODE","L_JPEG_FAIL_ON_BAD_DATA","L_JPEG_READ_LUMINANCE","L_KERNEL","L_Kernel","L_LANDSCAPE_MODE","L_LARGEST_AREA","L_LAST_IMAGE","L_LC_ALPHA","L_LC_ROMAN_NUMERALS","L_LESS_THAN_ZERO","L_LINEAR_INTERP","L_LINEAR_SCALE","L_LINEAR_WARP","L_LOG_SCALE","L_LOWER_LEFT","L_LOWER_RIGHT","L_LS_BYTE","L_LS_TWO_BYTES","L_MANHATTAN_DISTANCE","L_MAX_DIFF","L_MAX_DIFF_FROM_AVERAGE_2","L_MAX_MIN_DIFF_FROM_2","L_MEAN_ABSVAL","L_MEDIAN_VAL","L_MIN_DOWNSHIFT","L_MIRRORED_BORDER","L_MODE_COUNT","L_MODE_VAL","L_MORPH_CLOSE","L_MORPH_DILATE","L_MORPH_ERODE","L_MORPH_HMT","L_MORPH_OPEN","L_MS_BYTE","L_MS_TWO_BYTES","L_NEGATIVE","L_NEG_SLOPE_LINE","L_NEXT_IMAGE","L_NOCOPY","L_NON_NEGATIVE","L_NON_POSITIVE","L_NOT_FOUND","L_NO_CHROMA_SAMPLING_JPEG","L_NO_COMPACTION","L_OBLIQUE_LINE","L_PAINT_DARK","L_PAINT_LIGHT","L_PDF_DATA","L_PLOT_AT_BOT","L_PLOT_AT_LEFT","L_PLOT_AT_MID_HORIZ","L_PLOT_AT_MID_VERT","L_PLOT_AT_RIGHT","L_PLOT_AT_TOP","L_PORTRAIT_MODE","L_POSITIVE","L_POS_SLOPE_LINE","L_PTRA","L_PTRAA","L_Pdf_Data","L_Ptra","L_Ptraa","L_QUADRATIC_INTERP","L_QUADRATIC_WARP","L_QUEUE","L_Queue","L_RBTREE","L_RBTREE_NODE","L_RCH","L_RCHA","L_RDID","L_RECOG","L_RED_SHIFT","L_RED_WEIGHT","L_REGPARAMS","L_REG_COMPARE","L_REG_DISPLAY","L_REG_GENERATE","L_REMOVE","L_REMOVE_SMALL","L_REMOVE_TRAIL_SLASH","L_ROOT_MEAN_SQUARE","L_ROTATE_AREA_MAP","L_ROTATE_SAMPLING","L_ROTATE_SHEAR","L_RO_SC_TR","L_RO_TR_SC","L_RUN_OFF","L_RUN_ON","L_Rbtree","L_Rbtree_Node","L_Rch","L_Rcha","L_Rdid","L_Recog","L_RegParams","L_SAMPLED","L_SCAN_BOTH","L_SCAN_HORIZONTAL","L_SCAN_NEGATIVE","L_SCAN_POSITIVE","L_SCAN_VERTICAL","L_SC_RO_TR","L_SC_TR_RO","L_SELECT_AVERAGE","L_SELECT_BLUE","L_SELECT_BY_AREA","L_SELECT_BY_HEIGHT","L_SELECT_BY_MAX_DIMENSION","L_SELECT_BY_PERIMETER","L_SELECT_BY_WIDTH","L_SELECT_GREEN","L_SELECT_HEIGHT","L_SELECT_HUE","L_SELECT_IF_BOTH","L_SELECT_IF_EITHER","L_SELECT_IF_GT","L_SELECT_IF_GTE","L_SELECT_IF_LT","L_SELECT_IF_LTE","L_SELECT_MAX","L_SELECT_MIN","L_SELECT_RED","L_SELECT_SATURATION","L_SELECT_WIDTH","L_SELECT_XVAL","L_SELECT_YVAL","L_SET_BLACK","L_SET_BOT","L_SET_LEFT","L_SET_PIXELS","L_SET_RIGHT","L_SET_TOP","L_SET_WHITE","L_SEVERITY_ALL","L_SEVERITY_DEBUG","L_SEVERITY_ERROR","L_SEVERITY_EXTERNAL","L_SEVERITY_INFO","L_SEVERITY_NONE","L_SEVERITY_WARNING","L_SHEAR_ABOUT_CENTER","L_SHEAR_ABOUT_CORNER","L_SHELL_SORT","L_SLOPE_BORDER","L_SMALLEST_AREA","L_SOBEL_EDGE","L_SORT_BY_AREA","L_SORT_BY_ASPECT_RATIO","L_SORT_BY_BOT","L_SORT_BY_HEIGHT","L_SORT_BY_MAX_DIMENSION","L_SORT_BY_MIN_DIMENSION","L_SORT_BY_PERIMETER","L_SORT_BY_RIGHT","L_SORT_BY_WIDTH","L_SORT_BY_X","L_SORT_BY_Y","L_SORT_DECREASING","L_SORT_INCREASING","L_STACK","L_STANDARD_DEVIATION","L_STRCODE","L_STR_MEMREADER","L_STR_NAME","L_STR_READER","L_STR_TYPE","L_SUBPIXEL_ORDER_BGR","L_SUBPIXEL_ORDER_RGB","L_SUBPIXEL_ORDER_VBGR","L_SUBPIXEL_ORDER_VRGB","L_SUBTRACTION","L_SUB_ON_LOC_DIFF","L_SUB_ON_SIZE_DIFF","L_SUDOKU","L_SUDOKU_INIT","L_SUDOKU_STATE","L_SV_HISTO","L_Stack","L_StrCode","L_Sudoku","L_TAKE_ABSVAL","L_TEXT_ORIENT_DOWN","L_TEXT_ORIENT_LEFT","L_TEXT_ORIENT_RIGHT","L_TEXT_ORIENT_UNKNOWN","L_TEXT_ORIENT_UP","L_THIN_BG","L_THIN_FG","L_TIMER","L_TOPHAT_BLACK","L_TOPHAT_WHITE","L_TR_RO_SC","L_TR_SC_RO","L_TWO_SIDED_EDGE","L_UC_ALPHA","L_UC_ROMAN_NUMERALS","L_UINT_TYPE","L_UNION","L_UNKNOWN","L_UPPER_LEFT","L_UPPER_RIGHT","L_USE_ALL_BOXES","L_USE_ALL_TEMPLATES","L_USE_AVERAGE_TEMPLATES","L_USE_CAPPED_MAX","L_USE_CAPPED_MIN","L_USE_INNER","L_USE_MAXSIZE","L_USE_MINSIZE","L_USE_OUTER","L_USE_SAME_PARITY_BOXES","L_VARIANCE","L_VERT","L_VERTICAL_EDGES","L_VERTICAL_LINE","L_VERTICAL_RUNS","L_WALLTIMER","L_WARP_TO_LEFT","L_WARP_TO_RIGHT","L_WHITE_IS_MAX","L_WSHED","L_WShed","L_WallTimer","L_ZERO","L_ctermid","L_tmpnam","LeptDebugOK","LeptMsgSeverity","NUMA","NUMAA","NUMA_VERSION_NUMBER","NUM_GPLOT_OUTPUTS","NUM_GPLOT_STYLES","Numa","Numaa","PDP_ENDIAN","PIX","PIXA","PIXAA","PIXAA_VERSION_NUMBER","PIXAC","PIXACC","PIXACOMP_VERSION_NUMBER","PIXA_VERSION_NUMBER","PIXC","PIXCMAP","PIXTILING","PIX_CLR","PIX_DST","PIX_MASK","PIX_PAINT","PIX_SET","PIX_SRC","PIX_XOR","PTA","PTAA","PTA_VERSION_NUMBER","PTRDIFF_MAX","PTRDIFF_MIN","P_tmpdir","Pix","PixColormap","PixComp","PixTiling","Pixa","PixaComp","Pixaa","Pixacc","Pta","Ptaa","RAND_MAX","RB_TYPE","RECOG_VERSION_NUMBER","REMOVE_CMAP_BASED_ON_SRC","REMOVE_CMAP_TO_BINARY","REMOVE_CMAP_TO_FULL_COLOR","REMOVE_CMAP_TO_GRAYSCALE","REMOVE_CMAP_WITH_ALPHA","RGBA_QUAD","RGBA_Quad","Rb_Type","SARRAY","SARRAY_VERSION_NUMBER","SEEK_CUR","SEEK_END","SEEK_SET","SEL","SELA","SEL_DONT_CARE","SEL_HIT","SEL_MISS","SEL_VERSION_NUMBER","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","SPLIT_ON_BLANK_LINE","SPLIT_ON_BOTH","SPLIT_ON_LEADING_WHITE","SYMMETRIC_MORPH_BC","Sarray","Sel","Sela","TIFF_BIGEND_ID","TIFF_LITTLEEND_ID","TMP_MAX","TRUE","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","UNDEF","UNIX_PATH_SEPCHAR","USE_BMPIO","USE_INLINE_ACCESSORS","USE_JP2KHEADER","USE_PDFIO","USE_PNMIO","USE_PSIO","WCONTINUED","WEXITED","WINT_MAX","WINT_MIN","WIN_PATH_SEPCHAR","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_STDIO_LIM_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_G_fpos64_t","_G_fpos_t","_IOFBF","_IOLBF","_IONBF","_IO_EOF_SEEN","_IO_ERR_SEEN","_IO_FILE","_IO_USER_LOCK","_IO_backup_base","_IO_buf_base","_IO_buf_end","_IO_codecvt","_IO_lock_t","_IO_marker","_IO_read_base","_IO_read_end","_IO_read_ptr","_IO_save_base","_IO_save_end","_IO_wide_data","_IO_write_base","_IO_write_end","_IO_write_ptr","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_STDIO_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__ENUM_IDTYPE_T","__FD_SETSIZE","__FD_ZERO_STOS","__FILE","__FILE_defined","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__LITTLE_ENDIAN","__LONG_DOUBLE_USES_FLOAT128","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","____FILE_defined","_____fpos64_t_defined","_____fpos_t_defined","____mbstate_t_defined","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__bindgen_anon_1","__bindgen_anon_2","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__count","__ctype_get_mb_cur_max","__cur_writer","__daddr_t","__data","__data","__data","__dev_t","__elision","__fd_mask","__fds_bits","__flags","__fpos64_t","__fpos_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g1_start32","__g_refs","__g_signals","__g_size","__getdelim","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__have_pthread_attr_t","__high","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__lock","__loff_t","__low","__low","__mbstate_t","__mbstate_t__bindgen_ty_1","__mode_t","__next","__next","__nlink_t","__nusers","__off64_t","__off_t","__old_x","__overflow","__owner","__pad1","__pad2","__pad3","__pad4","__pad5","__pid_t","__pos","__pos","__prev","__pthread_cond_s","__pthread_cond_s__bindgen_ty_1","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__pthread_cond_s__bindgen_ty_2","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__state","__state","__struct_FILE_defined","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uflow","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__value","__wch","__wchb","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__wseq32","__x","_bindgen_ty_1","_bindgen_ty_10","_bindgen_ty_11","_bindgen_ty_12","_bindgen_ty_13","_bindgen_ty_14","_bindgen_ty_15","_bindgen_ty_16","_bindgen_ty_17","_bindgen_ty_18","_bindgen_ty_19","_bindgen_ty_2","_bindgen_ty_20","_bindgen_ty_21","_bindgen_ty_22","_bindgen_ty_23","_bindgen_ty_24","_bindgen_ty_25","_bindgen_ty_26","_bindgen_ty_27","_bindgen_ty_28","_bindgen_ty_29","_bindgen_ty_3","_bindgen_ty_30","_bindgen_ty_31","_bindgen_ty_32","_bindgen_ty_33","_bindgen_ty_34","_bindgen_ty_35","_bindgen_ty_36","_bindgen_ty_37","_bindgen_ty_38","_bindgen_ty_39","_bindgen_ty_4","_bindgen_ty_40","_bindgen_ty_41","_bindgen_ty_42","_bindgen_ty_43","_bindgen_ty_44","_bindgen_ty_45","_bindgen_ty_46","_bindgen_ty_47","_bindgen_ty_48","_bindgen_ty_49","_bindgen_ty_5","_bindgen_ty_50","_bindgen_ty_51","_bindgen_ty_52","_bindgen_ty_53","_bindgen_ty_54","_bindgen_ty_55","_bindgen_ty_56","_bindgen_ty_57","_bindgen_ty_58","_bindgen_ty_59","_bindgen_ty_6","_bindgen_ty_60","_bindgen_ty_61","_bindgen_ty_62","_bindgen_ty_63","_bindgen_ty_64","_bindgen_ty_65","_bindgen_ty_66","_bindgen_ty_67","_bindgen_ty_68","_bindgen_ty_69","_bindgen_ty_7","_bindgen_ty_70","_bindgen_ty_71","_bindgen_ty_72","_bindgen_ty_73","_bindgen_ty_74","_bindgen_ty_75","_bindgen_ty_76","_bindgen_ty_77","_bindgen_ty_78","_bindgen_ty_79","_bindgen_ty_8","_bindgen_ty_80","_bindgen_ty_81","_bindgen_ty_82","_bindgen_ty_83","_bindgen_ty_84","_bindgen_ty_85","_bindgen_ty_86","_bindgen_ty_87","_bindgen_ty_88","_bindgen_ty_89","_bindgen_ty_9","_bindgen_ty_90","_bindgen_ty_91","_bindgen_ty_92","_bindgen_ty_93","_bindgen_ty_94","_chain","_codecvt","_cur_column","_fileno","_flags","_flags2","_freeres_buf","_freeres_list","_lock","_markers","_mode","_offset","_old_offset","_shortbuf","_unused2","_vtable_offset","_wide_data","a64l","abort","abs","addColorizedGrayToCmap","adjacentOnPixelInRaster","affineInvertXform","affineXformPt","affineXformSampledPt","aligned_alloc","alloc_fn","alloca","alpha","amapGetCountForColor","appendSubdirs","applyCubicFit","applyLinearFit","applyQuadraticFit","applyQuarticFit","array","array","array","array","array","array","array","array","array","arrayFindEachSequence","arrayFindSequence","arrayReplaceEachSequence","arraysize","at_quick_exit","atexit","atof","atoi","atol","atoll","auxstack","ave_done","barcodeDispatchDecoder","barcodeFormatIsSupported","baseindex","baseline1","baseline2","baseline3","baselinetab","bbufferCreate","bbufferDestroy","bbufferDestroyAndSaveData","bbufferExtendArray","bbufferRead","bbufferReadStream","bbufferWrite","bbufferWriteStream","beta","bilinearXformPt","bilinearXformSampledPt","blkcnt_t","blksize_t","blue","bmf","bmfCreate","bmfDestroy","bmfGetBaseline","bmfGetLineStrings","bmfGetPix","bmfGetStringWidth","bmfGetWidth","bmfGetWordWidths","bmf_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxAdjustSides","boxBoundingRegion","boxChangeRefcount","boxClipToRectangle","boxClipToRectangleParams","boxClone","boxCompareSize","boxContains","boxContainsPt","boxConvertToPta","boxCopy","boxCreate","boxCreateValid","boxDestroy","boxEqual","boxGetCenter","boxGetGeometry","boxGetRefcount","boxGetSideLocations","boxIntersectByLine","boxIntersects","boxIsValid","boxOverlapArea","boxOverlapDistance","boxOverlapFraction","boxOverlapRegion","boxPrintStreamInfo","boxRelocateOneSide","boxRotateOrth","boxSeparationDistance","boxSetGeometry","boxSetSide","boxSetSideLocations","boxSimilar","boxTransform","boxTransformOrdered","box_","boxa","boxa","boxa","boxa","boxa","boxa","boxaAddBox","boxaAdjustBoxSides","boxaAdjustHeightToTarget","boxaAdjustSides","boxaAdjustWidthToTarget","boxaAffineTransform","boxaBinSort","boxaClear","boxaClipToBox","boxaCombineOverlaps","boxaCombineOverlapsInPair","boxaCompareRegions","boxaConstrainSize","boxaContainedInBox","boxaContainedInBoxCount","boxaContainedInBoxa","boxaConvertToPta","boxaCopy","boxaCreate","boxaDestroy","boxaDisplayTiled","boxaEncapsulateAligned","boxaEqual","boxaExtendArray","boxaExtendArrayToSize","boxaExtractAsNuma","boxaExtractAsPta","boxaExtractCorners","boxaExtractSortedPattern","boxaFillSequence","boxaFindInvalidBoxes","boxaFindNearestBoxes","boxaGetArea","boxaGetAverageSize","boxaGetBox","boxaGetBoxGeometry","boxaGetCount","boxaGetCoverage","boxaGetExtent","boxaGetMedianVals","boxaGetNearestByDirection","boxaGetNearestToLine","boxaGetNearestToPt","boxaGetRankVals","boxaGetSizes","boxaGetValidBox","boxaGetValidCount","boxaGetWhiteblocks","boxaHandleOverlaps","boxaInitFull","boxaInsertBox","boxaIntersectsBox","boxaIntersectsBoxCount","boxaIsFull","boxaJoin","boxaLocationRange","boxaMakeAreaIndicator","boxaMakeSizeIndicator","boxaMakeWHRatioIndicator","boxaMedianDimensions","boxaMergeEvenOdd","boxaModifyWithBoxa","boxaPermutePseudorandom","boxaPermuteRandom","boxaPlotSides","boxaPlotSizes","boxaPruneSortedOnOverlap","boxaRead","boxaReadMem","boxaReadStream","boxaReconcileAllByMedian","boxaReconcileEvenOddHeight","boxaReconcilePairWidth","boxaReconcileSidesByMedian","boxaReconcileSizeByMedian","boxaRemoveBox","boxaRemoveBoxAndSave","boxaReplaceBox","boxaRotate","boxaRotateOrth","boxaSaveValid","boxaScale","boxaSelectByArea","boxaSelectBySize","boxaSelectByWHRatio","boxaSelectLargeULBox","boxaSelectRange","boxaSelectWithIndicator","boxaSetSide","boxaShiftWithPta","boxaSimilar","boxaSizeConsistency1","boxaSizeConsistency2","boxaSizeRange","boxaSizeVariation","boxaSmoothSequenceMedian","boxaSort","boxaSort2d","boxaSort2dByIndex","boxaSortByIndex","boxaSplitEvenOdd","boxaSwapBoxes","boxaTransform","boxaTransformOrdered","boxaTranslate","boxaWindowedMedian","boxaWrite","boxaWriteDebug","boxaWriteMem","boxaWriteStderr","boxaWriteStream","boxaaAddBox","boxaaAddBoxa","boxaaAlignBox","boxaaCopy","boxaaCreate","boxaaDestroy","boxaaDisplay","boxaaExtendArray","boxaaExtendArrayToSize","boxaaExtendWithInit","boxaaFlattenAligned","boxaaFlattenToBoxa","boxaaGetBox","boxaaGetBoxCount","boxaaGetBoxa","boxaaGetCount","boxaaGetExtent","boxaaInitFull","boxaaInsertBoxa","boxaaJoin","boxaaQuadtreeRegions","boxaaRead","boxaaReadFromFiles","boxaaReadMem","boxaaReadStream","boxaaRemoveBoxa","boxaaReplaceBoxa","boxaaSelectRange","boxaaSizeRange","boxaaTranspose","boxaaWrite","boxaaWriteMem","boxaaWriteStream","bps","bsearch","caddr_t","callSystemDebug","calloc","ccb","ccbCreate","ccbDestroy","ccbaAddCcb","ccbaCreate","ccbaDestroy","ccbaDisplayBorder","ccbaDisplayImage1","ccbaDisplayImage2","ccbaDisplaySPBorder","ccbaGenerateGlobalLocs","ccbaGenerateSPGlobalLocs","ccbaGenerateSinglePath","ccbaGenerateStepChains","ccbaGetCcb","ccbaGetCount","ccbaRead","ccbaReadStream","ccbaStepChainsToPixCoords","ccbaWrite","ccbaWriteSVG","ccbaWriteSVGString","ccbaWriteStream","centtab","changeFormatForMissingLib","charset_size","charset_type","check_columns","cidConvertToPdfData","cida","clearenv","clearerr","clearerr_unlocked","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmapEqual","cmapdata85","cmapdatahex","cmapflag","cmddata","cmdname","color","colormap","compareTilesByHisto","components","composeRGBAPixel","composeRGBPixel","comptype","concatenatePdf","concatenatePdfToData","convertFilesFittedToPS","convertFilesTo1bpp","convertFilesToPS","convertFilesToPdf","convertFlateToPS","convertFlateToPSEmbed","convertG4ToPS","convertG4ToPSEmbed","convertGrayCodeToInt","convertHSVToRGB","convertImageDataToPdf","convertImageDataToPdfData","convertIntToGrayCode","convertJpegToPS","convertJpegToPSEmbed","convertLABToRGB","convertLABToXYZ","convertNumberedMasksToBoxaa","convertOnBigEnd16","convertOnBigEnd32","convertOnLittleEnd16","convertOnLittleEnd32","convertPtaLineTo4cc","convertRGBToHSV","convertRGBToLAB","convertRGBToXYZ","convertRGBToYUV","convertSegmentedFilesToPdf","convertSegmentedPagesToPS","convertSepCharsInPath","convertSortedToNumberedPathnames","convertTiffMultipageToPS","convertTiffMultipageToPdf","convertToNUpFiles","convertToNUpPixa","convertToPSEmbed","convertToPdf","convertToPdfData","convertToPdfDataSegmented","convertToPdfSegmented","convertUnscaledFilesToPdf","convertUnscaledToPdfData","convertXYZToLAB","convertXYZToRGB","convertYUVToRGB","counta","create2dFloatArray","create2dIntArray","createMatrix2dRotate","createMatrix2dScale","createMatrix2dTranslate","ctermid","current","cx","cx","cy","cy","d","d","daddr_t","dahash","data","data","data","data","data","data","data","data","data","data85","datacomp","datanames","dealloc_fn","debug","debug","decodeAscii85","decodeBase64","delx","delx","delya","depth","descr","dev_t","dewa","dewarp","dewarpBuildLineModel","dewarpBuildPageModel","dewarpCreate","dewarpCreateRef","dewarpDebug","dewarpDestroy","dewarpFindHorizDisparity","dewarpFindHorizSlopeDisparity","dewarpFindVertDisparity","dewarpGetTextlineCenters","dewarpMinimize","dewarpPopulateFullRes","dewarpRead","dewarpReadMem","dewarpReadStream","dewarpRemoveShortLines","dewarpShowResults","dewarpSinglePage","dewarpSinglePageInit","dewarpSinglePageRun","dewarpWrite","dewarpWriteMem","dewarpWriteStream","dewarpaApplyDisparity","dewarpaApplyDisparityBoxa","dewarpaCreate","dewarpaCreateFromPixacomp","dewarpaDestroy","dewarpaDestroyDewarp","dewarpaGetDewarp","dewarpaInfo","dewarpaInsertDewarp","dewarpaInsertRefModels","dewarpaListPages","dewarpaModelStats","dewarpaModelStatus","dewarpaRead","dewarpaReadMem","dewarpaReadStream","dewarpaRestoreModels","dewarpaSetCheckColumns","dewarpaSetCurvatures","dewarpaSetMaxDistance","dewarpaSetValidModels","dewarpaShowArrays","dewarpaStripRefModels","dewarpaUseBothArrays","dewarpaWrite","dewarpaWriteMem","dewarpaWriteStream","dewarpcache","did","direction","directory","display","displayHSVColorRange","ditherToBinaryLineLow","div","div_t","dna","dna","dna_tochar","dpixAddMultConstant","dpixChangeRefcount","dpixClone","dpixConvertToFPix","dpixConvertToPix","dpixCopy","dpixCopyResolution","dpixCreate","dpixCreateTemplate","dpixDestroy","dpixEndianByteSwap","dpixGetData","dpixGetDimensions","dpixGetMax","dpixGetMin","dpixGetPixel","dpixGetRefcount","dpixGetResolution","dpixGetWpl","dpixLinearCombination","dpixRead","dpixReadMem","dpixReadStream","dpixResizeImageData","dpixScaleByInteger","dpixSetAllArbitrary","dpixSetData","dpixSetDimensions","dpixSetPixel","dpixSetResolution","dpixSetWpl","dpixWrite","dpixWriteMem","dpixWriteStream","dprintf","drand48","drand48_data","drand48_r","ecvt","ecvt_r","encodeAscii85","encodeBase64","end_ptr","erand48","erand48_r","exit","extractG4DataFromFile","extractMinMaxComponent","extractNumberFromFilename","extractRGBAValues","extractRGBValues","failure","fclose","fcvt","fcvt_r","fd_mask","fd_set","fdopen","feof","feof_unlocked","ferror","ferror_unlocked","fflush","fflush_unlocked","fgetJp2kResolution","fgetJpegComment","fgetJpegResolution","fgetPngColormapInfo","fgetPngResolution","fgetc","fgetc_unlocked","fgetpos","fgets","fhmtautogen","fhmtautogen1","fhmtautogen2","fhmtgen_low_1","fileAppendString","fileConcatenate","fileCopy","fileCorruptByDeletion","fileCorruptByMutation","fileFormatIsTiff","fileReplaceBytes","fileno","fileno","fileno_unlocked","filesAreIdentical","findFileFormat","findFileFormatBuffer","findFileFormatStream","findNextLargerPrime","findTiffCompression","finished","flockfile","fmemopen","fmorphautogen","fmorphautogen1","fmorphautogen2","fmorphopgen_low_1","fmorphopgen_low_2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fnbytesInFile","fonttab","fopen","fopenReadFromMemory","fopenReadStream","fopenWriteStream","fopenWriteWinTempfile","fp","fp_offset","fpix","fpixAddBorder","fpixAddContinuedBorder","fpixAddMirroredBorder","fpixAddMultConstant","fpixAddSlopeBorder","fpixAffine","fpixAffinePta","fpixAutoRenderContours","fpixChangeRefcount","fpixClone","fpixConvertToDPix","fpixConvertToPix","fpixConvolve","fpixConvolveSep","fpixCopy","fpixCopyResolution","fpixCreate","fpixCreateTemplate","fpixDestroy","fpixDisplayMaxDynamicRange","fpixEndianByteSwap","fpixFlipLR","fpixFlipTB","fpixGetData","fpixGetDimensions","fpixGetMax","fpixGetMin","fpixGetPixel","fpixGetRefcount","fpixGetResolution","fpixGetWpl","fpixLinearCombination","fpixPrintStream","fpixProjective","fpixProjectivePta","fpixRasterop","fpixRead","fpixReadMem","fpixReadStream","fpixRemoveBorder","fpixRenderContours","fpixResizeImageData","fpixRotate180","fpixRotate90","fpixRotateOrth","fpixScaleByInteger","fpixSetAllArbitrary","fpixSetData","fpixSetDimensions","fpixSetPixel","fpixSetResolution","fpixSetWpl","fpixThresholdToPix","fpixWrite","fpixWriteMem","fpixWriteStream","fpixaAddFPix","fpixaChangeRefcount","fpixaConvertLABToRGB","fpixaConvertLABToXYZ","fpixaConvertXYZToLAB","fpixaConvertXYZToRGB","fpixaCopy","fpixaCreate","fpixaDestroy","fpixaDisplayQuadtree","fpixaGetCount","fpixaGetData","fpixaGetFPix","fpixaGetFPixDimensions","fpixaGetPixel","fpixaSetPixel","fpos_t","fprintTiffInfo","fprintf","fptr","fputc","fputc_unlocked","fputs","fread","freadHeaderJp2k","freadHeaderJpeg","freadHeaderPng","freadHeaderPnm","freadHeaderSpix","freadHeaderTiff","fread_unlocked","free","freopen","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fscanf1","fseek","fseeko","fsetpos","fsfilcnt_t","fsid_t","ftell","ftello","ftrylockfile","ftype","fullarrays","fullhdispar","fullvdispar","fullydispar","function","funlockfile","fwrite","fwrite_unlocked","gamma","gaussDistribSampling","gaussjordan","gcvt","genConstrainedNumaInRange","genPathname","genRandomIntegerInRange","generateBinaryMaze","generatePtaBox","generatePtaBoxa","generatePtaFilledCircle","generatePtaFilledSquare","generatePtaGrid","generatePtaHashBox","generatePtaHashBoxa","generatePtaLine","generatePtaLineFromPt","generatePtaPolyline","generatePtaWideLine","generatePtaaBoxa","generatePtaaHashBoxa","generateUncompressedPS","getAffineXformCoeffs","getBilinearXformCoeffs","getCompositeParameters","getCutPathForHole","getExtendedCompositeParameters","getFilenamesInDirectory","getFormatExtension","getImagelibVersions","getImpliedFileFormat","getLeptonicaVersion","getLogBase2","getMorphBorderPixelColor","getNumberedPathnamesInDirectory","getOctcubeIndexFromRGB","getProjectiveXformCoeffs","getRGBFromIndex","getResA4Page","getResLetterPage","getSortedPathnamesInDirectory","getTiffResolution","getc","getc_unlocked","getchar","getchar_unlocked","getdelim","getenv","getline","getloadavg","getsubopt","getw","gid_t","global","gp_offset","gplotAddPlot","gplotCreate","gplotDestroy","gplotGenCommandFile","gplotGenDataFiles","gplotGeneralPix1","gplotGeneralPix2","gplotGeneralPixN","gplotMakeOutput","gplotMakeOutputPix","gplotRead","gplotSetScaling","gplotSimple1","gplotSimple2","gplotSimpleN","gplotSimplePix1","gplotSimplePix2","gplotSimplePixN","gplotSimpleXY1","gplotSimpleXY2","gplotSimpleXYN","gplotWrite","gplotfileoutputs","gplotstylenames","grayHistogramsToEMD","grayInterHistogramStats","green","h","h","h","h","h","h","h","h","h","h","h","h","hasref","hsuccess","hvalid","id","id_t","idtype_t","idtype_t_P_ALL","idtype_t_P_PGID","idtype_t_P_PID","ifunc","imax","index","index","informat","init","initsize","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioFormatTest","isPngInterlaced","itype","jbAccumulateComposites","jbAddPage","jbAddPageComponents","jbAddPages","jbClasserCreate","jbClasserDestroy","jbClassifyCorrelation","jbClassifyRankHaus","jbCorrelation","jbCorrelationInit","jbCorrelationInitWithoutComponents","jbDataDestroy","jbDataRead","jbDataRender","jbDataSave","jbDataWrite","jbGetComponents","jbGetLLCorners","jbGetULCorners","jbRankHaus","jbRankHausInit","jbTemplatesFromComposites","jbWordsInTextlines","jrand48","jrand48_r","keep_pixaa","kernelCopy","kernelCreate","kernelCreateFromFile","kernelCreateFromPix","kernelCreateFromString","kernelDestroy","kernelDisplayInPix","kernelGetElement","kernelGetMinMax","kernelGetParameters","kernelGetSum","kernelInvert","kernelNormalize","kernelRead","kernelReadStream","kernelSetElement","kernelSetOrigin","kernelWrite","kernelWriteStream","kernwidth","key","key_t","keytype","l64a","l_CIDataDestroy","l_amapCreate","l_amapDelete","l_amapDestroy","l_amapFind","l_amapGetFirst","l_amapGetLast","l_amapGetNext","l_amapGetPrev","l_amapInsert","l_amapSize","l_angleBetweenVectors","l_asetCreate","l_asetCreateFromDna","l_asetCreateFromPta","l_asetCreateFromSarray","l_asetDelete","l_asetDestroy","l_asetFind","l_asetGetFirst","l_asetGetLast","l_asetGetNext","l_asetGetPrev","l_asetInsert","l_asetSize","l_binaryCompare","l_binaryCopy","l_binaryRead","l_binaryReadSelect","l_binaryReadSelectStream","l_binaryReadStream","l_binaryWrite","l_bootnum_gen1","l_bootnum_gen2","l_bootnum_gen3","l_bootnum_gen4","l_byteaAppendData","l_byteaAppendString","l_byteaCopy","l_byteaCopyData","l_byteaCreate","l_byteaDestroy","l_byteaFindEachSequence","l_byteaGetData","l_byteaGetSize","l_byteaInitFromFile","l_byteaInitFromMem","l_byteaInitFromStream","l_byteaJoin","l_byteaSplit","l_byteaWrite","l_byteaWriteStream","l_chooseDisplayProg","l_clearDataBit","l_clearDataDibit","l_clearDataQbit","l_compressGrayHistograms","l_convertCharstrToInt","l_dnaAddNumber","l_dnaChangeRefcount","l_dnaClone","l_dnaConvertToNuma","l_dnaCopy","l_dnaCopyParameters","l_dnaCreate","l_dnaCreateFromDArray","l_dnaCreateFromIArray","l_dnaDestroy","l_dnaDiffAdjValues","l_dnaEmpty","l_dnaFindValByHash","l_dnaGetCount","l_dnaGetDArray","l_dnaGetDValue","l_dnaGetIArray","l_dnaGetIValue","l_dnaGetParameters","l_dnaGetRefcount","l_dnaHashAdd","l_dnaHashCreate","l_dnaHashCreateFromDna","l_dnaHashCreateFromPta","l_dnaHashCreateFromSarray","l_dnaHashDestroy","l_dnaHashGetCount","l_dnaHashGetDna","l_dnaHashGetTotalCount","l_dnaInsertNumber","l_dnaIntersectionByAset","l_dnaIntersectionByHash","l_dnaJoin","l_dnaMakeHistoByHash","l_dnaMakeSequence","l_dnaRead","l_dnaReadStream","l_dnaRemoveDupsByAset","l_dnaRemoveDupsByHash","l_dnaRemoveNumber","l_dnaReplaceNumber","l_dnaSetCount","l_dnaSetParameters","l_dnaSetValue","l_dnaShiftValue","l_dnaUnionByAset","l_dnaWrite","l_dnaWriteStream","l_dnaaAddDna","l_dnaaAddNumber","l_dnaaCreate","l_dnaaCreateFull","l_dnaaDestroy","l_dnaaFlattenToDna","l_dnaaGetCount","l_dnaaGetDna","l_dnaaGetDnaCount","l_dnaaGetNumberCount","l_dnaaGetValue","l_dnaaRead","l_dnaaReadStream","l_dnaaReplaceDna","l_dnaaTruncate","l_dnaaWrite","l_dnaaWriteStream","l_fileDisplay","l_float32","l_float64","l_generateCIData","l_generateCIDataForPdf","l_generateFlateData","l_generateFlateDataPdf","l_generateG4Data","l_generateJpegData","l_generateJpegDataMem","l_getCurrentTime","l_getDataBit","l_getDataByte","l_getDataDibit","l_getDataFourBytes","l_getDataQbit","l_getDataTwoBytes","l_getFormattedDate","l_getStructStrFromFile","l_hashFloat64ToUint64","l_hashPtToUint64","l_hashStringToUint64","l_int16","l_int32","l_int64","l_int8","l_intptr_t","l_jpegSetQuality","l_makeTempFilename","l_ok","l_pdfSetDateAndVersion","l_pdfSetG4ImageMask","l_pngSetReadStrip16To8","l_productMat2","l_productMat3","l_productMat4","l_productMatVec","l_psWriteBoundingBox","l_rbtreeCreate","l_rbtreeDelete","l_rbtreeDestroy","l_rbtreeGetCount","l_rbtreeGetFirst","l_rbtreeGetLast","l_rbtreeGetNext","l_rbtreeGetPrev","l_rbtreeInsert","l_rbtreeLookup","l_rbtreePrint","l_setAlphaMaskBorder","l_setConvolveSampling","l_setDataBit","l_setDataBitVal","l_setDataByte","l_setDataDibit","l_setDataFourBytes","l_setDataQbit","l_setDataTwoBytes","l_setNeutralBoostVal","l_uint16","l_uint32","l_uint64","l_uint8","l_uintptr_t","l_uncompressGrayHistograms","labs","latticeh","latticew","lcong48","lcong48_r","ldiv","ldiv_t","left","leftcurv","leftslope","leptSetStderrHandler","lept_calloc","lept_cp","lept_direxists","lept_fclose","lept_fopen","lept_free","lept_isPrime","lept_mkdir","lept_mv","lept_rm","lept_rm_match","lept_rmdir","lept_rmfile","lept_roundftoi","lept_stderr","lheapAdd","lheapCreate","lheapDestroy","lheapGetCount","lheapGetElement","lheapPrint","lheapRemove","lheapSort","lheapSortStrictOrder","lineEndianByteSwap","linearInterpolatePixelColor","linearInterpolatePixelFloat","linearInterpolatePixelGray","linearScaleRGBVal","lineheight","linelab32","linem1","lines8","linet1","linew","links","listAddToHead","listAddToTail","listDestroy","listFindElement","listFindTail","listGetCount","listInsertAfter","listInsertBefore","listJoin","listRemoveElement","listRemoveFromHead","listRemoveFromTail","listReverse","llabs","lldiv","lldiv_t","local","locatePtRadially","locs","loff_t","logScaleRGBVal","lqueueAdd","lqueueCreate","lqueueDestroy","lqueueGetCount","lqueuePrint","lqueueRemove","lrand48","lrand48_r","lstackAdd","lstackCreate","lstackDestroy","lstackGetCount","lstackPrint","lstackRemove","lut","makeCheckerboardCornerSela","makeDoGKernel","makeFlatKernel","makeGaussianKernel","makeGaussianKernelSep","makeGrayQuantIndexTable","makeGrayQuantTableArb","makeLogBase2Tab","makeMSBitLocTab","makeMosaicStrips","makeOrientDecision","makePixelCentroidTab8","makePixelSumTab8","makePlotPtaFromNuma","makePlotPtaFromNumaGen","makeRGBIndexTables","makeRGBToIndexTables","makeRangeKernel","makeSubsampleTab2x","makeTempDirname","malloc","max_diff_edgecurv","max_diff_linecurv","max_edgecurv","max_edgeslope","max_ht_ratio","max_linecurv","max_splith","max_wh_ratio","maxarraysize","maxcurv","maxdist","maxheight","maxheight_u","maxpage","maxwidth","maxwidth","maxwidth_u","maxyshift","mblen","mbstowcs","mbtowc","mediabox","method","min_diff_linecurv","min_nopad","min_splitw","mincurv","mindepth","minheight_u","minisblack","minlines","minlines","minwidth","minwidth_u","mkdtemp","mkstemp","mkstemps","mktemp","mode","mode_t","modelsready","modifyTrailingSlash","morphSequenceVerify","mrand48","mrand48_r","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","naarea","naasum","naasum_u","naclass","naclass","nacomps","nactual","nacurves","nadely","nadely_r","nafgt","naindex","nalevels","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","name","namh","namidys","namodels","namoment","napage","napage","napages","narray","nasample","nasample_r","nascore","nascore","nascore_r","nash","nasi","nasum","nasum","nasum_u","natempl","natempl_r","nawidth","nawidth","nawidth_r","naxloc","naxloc","naxloc_r","nayloc","nbuckets","nbytes","nbytes85","nbytesInFile","nbytescomp","nclass","nclass","ncmap","ncolors","nelem","next","nextOnPixelInRaster","nguess","nhead","nlines","nlink_t","nother","npages","npages","nplots","nrand48","nrand48_r","nseeds","num","num_samples","numa","numaAddBorder","numaAddNumber","numaAddSpecifiedBorder","numaAddToNumber","numaArithOp","numaBinSort","numaChangeRefcount","numaChooseSortType","numaClipToInterval","numaClone","numaClose","numaContrastTRC","numaConvertToDna","numaConvertToInt","numaConvertToPta1","numaConvertToPta2","numaConvertToSarray","numaCopy","numaCopyParameters","numaCountNonzeroRuns","numaCountReversals","numaCreate","numaCreateFromFArray","numaCreateFromIArray","numaCreateFromString","numaCrossingsByPeaks","numaCrossingsByThreshold","numaDestroy","numaDifferentiateInterval","numaDilate","numaDiscretizeRankAndIntensity","numaEarthMoverDistance","numaEmpty","numaEqualizeTRC","numaErode","numaEvalBestHaarParameters","numaEvalHaarSum","numaFindExtrema","numaFindLocForThreshold","numaFindPeaks","numaFitMax","numaGammaTRC","numaGetBinSortIndex","numaGetBinnedMedian","numaGetCount","numaGetCountRelativeToZero","numaGetEdgeValues","numaGetFArray","numaGetFValue","numaGetHistogramStats","numaGetHistogramStatsOnInterval","numaGetIArray","numaGetIValue","numaGetMax","numaGetMeanDevFromMedian","numaGetMedian","numaGetMedianDevFromMedian","numaGetMin","numaGetMode","numaGetNonzeroRange","numaGetParameters","numaGetPartialSums","numaGetRankBinValues","numaGetRankValue","numaGetRefcount","numaGetSortIndex","numaGetSpanValues","numaGetStatsUsingHistogram","numaGetSum","numaGetSumOnInterval","numaHasOnlyIntegers","numaHistogramGetRankFromVal","numaHistogramGetValFromRank","numaInsertNumber","numaIntegrateInterval","numaInterpolateArbxInterval","numaInterpolateArbxVal","numaInterpolateEqxInterval","numaInterpolateEqxVal","numaInvert","numaInvertMap","numaIsSorted","numaJoin","numaLogicalOp","numaLowPassIntervals","numaMakeAbsValue","numaMakeConstant","numaMakeDelta","numaMakeHistogram","numaMakeHistogramAuto","numaMakeHistogramClipped","numaMakeRankFromHistogram","numaMakeSequence","numaMakeThresholdIndicator","numaNormalizeHistogram","numaOpen","numaPseudorandomSequence","numaQuantizeCrossingsByWidth","numaQuantizeCrossingsByWindow","numaRandomPermutation","numaRead","numaReadMem","numaReadStream","numaRebinHistogram","numaRemoveBorder","numaRemoveNumber","numaReplaceNumber","numaReverse","numaSelectCrossingThreshold","numaSetCount","numaSetParameters","numaSetValue","numaShiftValue","numaSimilar","numaSimpleStats","numaSort","numaSortAutoSelect","numaSortByIndex","numaSortGeneral","numaSortIndexAutoSelect","numaSortPair","numaSplitDistribution","numaSubsample","numaThresholdEdges","numaTransform","numaUniformSampling","numaWindowedMean","numaWindowedMeanSquare","numaWindowedMedian","numaWindowedStats","numaWindowedVariance","numaWrite","numaWriteDebug","numaWriteMem","numaWriteStderr","numaWriteStream","numaaAddNuma","numaaAddNumber","numaaCompareImagesByBoxes","numaaCreate","numaaCreateFull","numaaDestroy","numaaFlattenToNuma","numaaGetCount","numaaGetNuma","numaaGetNumaCount","numaaGetNumberCount","numaaGetPtrArray","numaaGetValue","numaaJoin","numaaRead","numaaReadMem","numaaReadStream","numaaReplaceNuma","numaaTruncate","numaaWrite","numaaWriteMem","numaaWriteStream","nwritten","nx","nx","ny","ny","obj1","obj2","obj3","obj4","obj5","objloc","objsize","off_t","offset","offset","on_exit","open_memstream","outformat","outname","overflow_arg_area","pageno","parent","parseForProtos","parseStringForNumbers","partifyFiles","partifyPixac","pathJoin","pclose","perror","pid_t","pix","pix","pix","pix","pix","pix","pixAbsDiffByColumn","pixAbsDiffByRow","pixAbsDiffInRect","pixAbsDiffOnLine","pixAbsDifference","pixAccumulate","pixAdaptThresholdToBinary","pixAdaptThresholdToBinaryGen","pixAddAlphaTo1bpp","pixAddAlphaToBlend","pixAddBlackOrWhiteBorder","pixAddBorder","pixAddBorderGeneral","pixAddConstantGray","pixAddContinuedBorder","pixAddGaussianNoise","pixAddGray","pixAddGrayColormap8","pixAddMinimalGrayColormap8","pixAddMirroredBorder","pixAddMixedBorder","pixAddRGB","pixAddRepeatedBorder","pixAddSingleTextblock","pixAddText","pixAddTextlines","pixAddWithIndicator","pixAffine","pixAffineColor","pixAffineGray","pixAffinePta","pixAffinePtaColor","pixAffinePtaGray","pixAffinePtaWithAlpha","pixAffineSampled","pixAffineSampledPta","pixAffineSequential","pixAlphaBlendUniform","pixAlphaIsOpaque","pixAnd","pixApplyInvBackgroundGrayMap","pixApplyInvBackgroundRGBMap","pixApplyVariableGrayMap","pixAssignToNearestColor","pixAutoPhotoinvert","pixAverageByColumn","pixAverageByRow","pixAverageInRect","pixAverageInRectRGB","pixAverageIntensityProfile","pixAverageOnLine","pixBackgroundNorm","pixBackgroundNormFlex","pixBackgroundNormGrayArray","pixBackgroundNormGrayArrayMorph","pixBackgroundNormMorph","pixBackgroundNormRGBArrays","pixBackgroundNormRGBArraysMorph","pixBackgroundNormSimple","pixBestCorrelation","pixBilateral","pixBilateralExact","pixBilateralGray","pixBilateralGrayExact","pixBilinear","pixBilinearColor","pixBilinearGray","pixBilinearPta","pixBilinearPtaColor","pixBilinearPtaGray","pixBilinearPtaWithAlpha","pixBilinearSampled","pixBilinearSampledPta","pixBlend","pixBlendBackgroundToColor","pixBlendBoxaRandom","pixBlendCmap","pixBlendColor","pixBlendColorByChannel","pixBlendGray","pixBlendGrayAdapt","pixBlendGrayInverse","pixBlendHardLight","pixBlendInRect","pixBlendMask","pixBlendWithGrayMask","pixBlockBilateralExact","pixBlockconv","pixBlockconvAccum","pixBlockconvGray","pixBlockconvGrayTile","pixBlockconvGrayUnnormalized","pixBlockconvTiled","pixBlockrank","pixBlocksum","pixCensusTransform","pixCentroid","pixCentroid8","pixChangeRefcount","pixChooseOutputFormat","pixCleanBackgroundToWhite","pixCleanupByteProcessing","pixClearAll","pixClearInRect","pixClearPixel","pixClipBoxToEdges","pixClipBoxToForeground","pixClipMasked","pixClipRectangle","pixClipRectangles","pixClipToForeground","pixClone","pixClose","pixCloseBrick","pixCloseBrickDwa","pixCloseCompBrick","pixCloseCompBrickDwa","pixCloseCompBrickExtendDwa","pixCloseGeneralized","pixCloseGray","pixCloseGray3","pixCloseSafe","pixCloseSafeBrick","pixCloseSafeCompBrick","pixColorContent","pixColorFraction","pixColorGray","pixColorGrayCmap","pixColorGrayMasked","pixColorGrayMaskedCmap","pixColorGrayRegions","pixColorGrayRegionsCmap","pixColorMagnitude","pixColorMorph","pixColorMorphSequence","pixColorSegment","pixColorSegmentClean","pixColorSegmentCluster","pixColorSegmentRemoveColors","pixColorShiftRGB","pixColorizeGray","pixColorsForQuantization","pixColumnStats","pixCombineMasked","pixCombineMaskedGeneral","pixCompareBinary","pixCompareGray","pixCompareGrayByHisto","pixCompareGrayOrRGB","pixComparePhotoRegionsByHisto","pixCompareRGB","pixCompareRankDifference","pixCompareTiled","pixCompareWithTranslation","pixComponentFunction","pixConformsToRectangle","pixConnComp","pixConnCompAreaTransform","pixConnCompBB","pixConnCompIncrAdd","pixConnCompIncrInit","pixConnCompPixa","pixConnCompTransform","pixContrastNorm","pixContrastTRC","pixContrastTRCMasked","pixConvert16To8","pixConvert1To16","pixConvert1To2","pixConvert1To2Cmap","pixConvert1To32","pixConvert1To4","pixConvert1To4Cmap","pixConvert1To8","pixConvert1To8Cmap","pixConvert24To32","pixConvert2To8","pixConvert32To16","pixConvert32To24","pixConvert32To8","pixConvert4To8","pixConvert8To16","pixConvert8To2","pixConvert8To32","pixConvert8To4","pixConvertCmapTo1","pixConvertColorToSubpixelRGB","pixConvertForPSWrap","pixConvertGrayToColormap","pixConvertGrayToColormap8","pixConvertGrayToFalseColor","pixConvertGrayToSubpixelRGB","pixConvertHSVToRGB","pixConvertLossless","pixConvertRGBToBinaryArb","pixConvertRGBToCmap","pixConvertRGBToColormap","pixConvertRGBToGray","pixConvertRGBToGrayArb","pixConvertRGBToGrayFast","pixConvertRGBToGrayMinMax","pixConvertRGBToGraySatBoost","pixConvertRGBToHSV","pixConvertRGBToHue","pixConvertRGBToLAB","pixConvertRGBToLuminance","pixConvertRGBToSaturation","pixConvertRGBToValue","pixConvertRGBToXYZ","pixConvertRGBToYUV","pixConvertTo1","pixConvertTo16","pixConvertTo1Adaptive","pixConvertTo1BySampling","pixConvertTo2","pixConvertTo32","pixConvertTo32BySampling","pixConvertTo4","pixConvertTo8","pixConvertTo8BySampling","pixConvertTo8Colormap","pixConvertTo8Or32","pixConvertToDPix","pixConvertToFPix","pixConvertToPdf","pixConvertToPdfData","pixConvertToPdfDataSegmented","pixConvertToPdfSegmented","pixConvertToSubpixelRGB","pixConvertYUVToRGB","pixConvolve","pixConvolveRGB","pixConvolveRGBSep","pixConvolveSep","pixConvolveWithBias","pixCopy","pixCopyBorder","pixCopyColormap","pixCopyDimensions","pixCopyInputFormat","pixCopyRGBComponent","pixCopyResolution","pixCopySpp","pixCopyText","pixCopyWithBoxa","pixCorrelationBinary","pixCorrelationScore","pixCorrelationScoreShifted","pixCorrelationScoreSimple","pixCorrelationScoreThresholded","pixCountArbInRect","pixCountByColumn","pixCountByRow","pixCountConnComp","pixCountPixels","pixCountPixelsByColumn","pixCountPixelsByRow","pixCountPixelsInRect","pixCountPixelsInRow","pixCountRGBColors","pixCountTextColumns","pixCreate","pixCreateFromPixcomp","pixCreateHeader","pixCreateNoInit","pixCreateRGBImage","pixCreateTemplate","pixCreateTemplateNoInit","pixCreateWithCmap","pixCropAlignedToCentroid","pixCropToMatch","pixCropToSize","pixDarkenGray","pixDecideIfPhotoImage","pixDecideIfTable","pixDecideIfText","pixDeserializeFromMemory","pixDeskew","pixDeskewBarcode","pixDeskewBoth","pixDeskewGeneral","pixDeskewLocal","pixDestroy","pixDestroyColormap","pixDilate","pixDilateBrick","pixDilateBrickDwa","pixDilateCompBrick","pixDilateCompBrickDwa","pixDilateCompBrickExtendDwa","pixDilateGray","pixDilateGray3","pixDisplay","pixDisplayColorArray","pixDisplayDiffBinary","pixDisplayHitMissSel","pixDisplayLayersRGBA","pixDisplayMatchedPattern","pixDisplayPta","pixDisplayPtaPattern","pixDisplayPtaa","pixDisplayPtaaPattern","pixDisplaySelectedPixels","pixDisplayWithTitle","pixDisplayWrite","pixDistanceFunction","pixDitherTo2bpp","pixDitherTo2bppSpec","pixDitherToBinary","pixDitherToBinarySpec","pixDrawBoxa","pixDrawBoxaRandom","pixEmbedForRotation","pixEndianByteSwap","pixEndianByteSwapNew","pixEndianTwoByteSwap","pixEndianTwoByteSwapNew","pixEqual","pixEqualWithAlpha","pixEqualWithCmap","pixEqualizeTRC","pixErode","pixErodeBrick","pixErodeBrickDwa","pixErodeCompBrick","pixErodeCompBrickDwa","pixErodeCompBrickExtendDwa","pixErodeGray","pixErodeGray3","pixEstimateBackground","pixExpandBinaryPower2","pixExpandBinaryReplicate","pixExpandReplicate","pixExtendByReplication","pixExtractBarcodeCrossings","pixExtractBarcodeWidths1","pixExtractBarcodeWidths2","pixExtractBarcodes","pixExtractBorderConnComps","pixExtractBoundary","pixExtractData","pixExtractOnLine","pixExtractRawTextlines","pixExtractTextlines","pixFHMTGen_1","pixFMorphopGen_1","pixFMorphopGen_2","pixFadeWithGray","pixFastTophat","pixFewColorsMedianCutQuantMixed","pixFewColorsOctcubeQuant1","pixFewColorsOctcubeQuant2","pixFewColorsOctcubeQuantMixed","pixFillBgFromBorder","pixFillClosedBorders","pixFillHolesToBoundingRect","pixFillMapHoles","pixFillPolygon","pixFilterComponentBySize","pixFinalAccumulate","pixFinalAccumulateThreshold","pixFindAreaFraction","pixFindAreaFractionMasked","pixFindAreaPerimRatio","pixFindBaselines","pixFindCheckerboardCorners","pixFindColorRegions","pixFindCornerPixels","pixFindDifferentialSquareSum","pixFindEqualValues","pixFindHistoPeaksHSV","pixFindHorizontalRuns","pixFindLargeRectangles","pixFindLargestRectangle","pixFindMaxHorizontalRunOnLine","pixFindMaxRuns","pixFindMaxVerticalRunOnLine","pixFindNormalizedSquareSum","pixFindOverlapFraction","pixFindPageForeground","pixFindPerimSizeRatio","pixFindPerimToAreaRatio","pixFindRectangleComps","pixFindRectangleInCC","pixFindRepCloseTile","pixFindSkew","pixFindSkewAndDeskew","pixFindSkewOrthogonalRange","pixFindSkewSweep","pixFindSkewSweepAndSearch","pixFindSkewSweepAndSearchScore","pixFindSkewSweepAndSearchScorePivot","pixFindStrokeLength","pixFindStrokeWidth","pixFindThreshFgExtent","pixFindVerticalRuns","pixFindWordAndCharacterBoxes","pixFixedOctcubeQuant256","pixFixedOctcubeQuantGenRGB","pixFlipFHMTGen","pixFlipLR","pixFlipPixel","pixFlipTB","pixForegroundFraction","pixFractionFgInMask","pixFreeData","pixGammaTRC","pixGammaTRCMasked","pixGammaTRCWithAlpha","pixGenHalftoneMask","pixGenPhotoHistos","pixGenTextblockMask","pixGenTextlineMask","pixGenerateCIData","pixGenerateFromPta","pixGenerateHalftoneMask","pixGenerateMaskByBand","pixGenerateMaskByBand32","pixGenerateMaskByDiscr32","pixGenerateMaskByValue","pixGeneratePtaBoundary","pixGenerateSelBoundary","pixGenerateSelRandom","pixGenerateSelWithRuns","pixGetAllCCBorders","pixGetAutoFormat","pixGetAverageMasked","pixGetAverageMaskedRGB","pixGetAverageTiled","pixGetAverageTiledRGB","pixGetBackgroundGrayMap","pixGetBackgroundGrayMapMorph","pixGetBackgroundRGBMap","pixGetBackgroundRGBMapMorph","pixGetBinnedColor","pixGetBinnedComponentRange","pixGetBlackOrWhiteVal","pixGetCmapHistogram","pixGetCmapHistogramInRect","pixGetCmapHistogramMasked","pixGetColorAmapHistogram","pixGetColorHistogram","pixGetColorHistogramMasked","pixGetColorNearMaskBoundary","pixGetColormap","pixGetColumnStats","pixGetData","pixGetDepth","pixGetDifferenceHistogram","pixGetDifferenceStats","pixGetDimensions","pixGetEdgeProfile","pixGetExtremeValue","pixGetGrayHistogram","pixGetGrayHistogramInRect","pixGetGrayHistogramMasked","pixGetGrayHistogramTiled","pixGetHeight","pixGetInputFormat","pixGetInvBackgroundMap","pixGetLastOffPixelInRun","pixGetLastOnPixelInRun","pixGetLinePtrs","pixGetLocalSkewAngles","pixGetLocalSkewTransform","pixGetMaxValueInRect","pixGetMomentByColumn","pixGetMostPopulatedColors","pixGetOuterBorder","pixGetOuterBordersPtaa","pixGetPSNR","pixGetPerceptualDiff","pixGetPixel","pixGetPixelAverage","pixGetPixelStats","pixGetRGBComponent","pixGetRGBComponentCmap","pixGetRGBHistogram","pixGetRGBLine","pixGetRGBPixel","pixGetRandomPixel","pixGetRangeValues","pixGetRankColorArray","pixGetRankValue","pixGetRankValueMasked","pixGetRankValueMaskedRGB","pixGetRasterData","pixGetRefcount","pixGetRegionsBinary","pixGetResolution","pixGetRowStats","pixGetRunCentersOnLine","pixGetRunsOnLine","pixGetSortedNeighborValues","pixGetSpp","pixGetText","pixGetTileCount","pixGetWidth","pixGetWordBoxesInTextlines","pixGetWordsInTextlines","pixGetWpl","pixGetXRes","pixGetYRes","pixGlobalNormNoSatRGB","pixGlobalNormRGB","pixGrayMorphSequence","pixGrayQuantFromCmap","pixGrayQuantFromHisto","pixHDome","pixHMT","pixHMTDwa_1","pixHShear","pixHShearCenter","pixHShearCorner","pixHShearIP","pixHShearLI","pixHalfEdgeByBandpass","pixHasHighlightRed","pixHaustest","pixHolesByFilling","pixInitAccumulate","pixIntersectionOfMorphOps","pixInvert","pixItalicWords","pixLinearEdgeFade","pixLinearMapToTargetColor","pixLinearTRCTiled","pixLocToColorTransform","pixLocalExtrema","pixLocateBarcodes","pixMakeAlphaFromMask","pixMakeArbMaskFromRGB","pixMakeColorSquare","pixMakeCoveringOfRectangles","pixMakeFrameMask","pixMakeHistoHS","pixMakeHistoHV","pixMakeHistoSV","pixMakeMaskFromLUT","pixMakeMaskFromVal","pixMakeRangeMaskHS","pixMakeRangeMaskHV","pixMakeRangeMaskSV","pixMakeSymmetricMask","pixMaskBoxa","pixMaskConnComp","pixMaskOverColorPixels","pixMaskOverColorRange","pixMaskOverGrayPixels","pixMaskedThreshOnBackgroundNorm","pixMaxDynamicRange","pixMaxDynamicRangeRGB","pixMeanInRectangle","pixMeanSquareAccum","pixMeasureEdgeSmoothness","pixMeasureSaturation","pixMedianCutHisto","pixMedianCutQuant","pixMedianCutQuantGeneral","pixMedianCutQuantMixed","pixMedianFilter","pixMinMaxNearLine","pixMinMaxTiles","pixMinOrMax","pixMirrorDetect","pixMirrorDetectDwa","pixMirroredTiling","pixModifyBrightness","pixModifyHue","pixModifySaturation","pixModifyStrokeWidth","pixMorphCompSequence","pixMorphCompSequenceDwa","pixMorphDwa_1","pixMorphDwa_2","pixMorphGradient","pixMorphSequence","pixMorphSequenceByComponent","pixMorphSequenceByRegion","pixMorphSequenceDwa","pixMorphSequenceMasked","pixMosaicColorShiftRGB","pixMultConstAccumulate","pixMultConstantColor","pixMultConstantGray","pixMultMatrixColor","pixMultiplyByColor","pixMultiplyGray","pixNumColors","pixNumSignificantGrayColors","pixNumberOccupiedOctcubes","pixOctcubeHistogram","pixOctcubeQuantFromCmap","pixOctcubeQuantMixedWithGray","pixOctreeColorQuant","pixOctreeColorQuantGeneral","pixOctreeQuantByPopulation","pixOctreeQuantNumColors","pixOpen","pixOpenBrick","pixOpenBrickDwa","pixOpenCompBrick","pixOpenCompBrickDwa","pixOpenCompBrickExtendDwa","pixOpenGeneralized","pixOpenGray","pixOpenGray3","pixOr","pixOrientCorrect","pixOrientDetect","pixOrientDetectDwa","pixOtsuAdaptiveThreshold","pixOtsuThreshOnBackgroundNorm","pixPadToCenterCentroid","pixPaintBoxa","pixPaintBoxaRandom","pixPaintSelfThroughMask","pixPaintThroughMask","pixPlotAlongPta","pixPrepare1bpp","pixPrintStreamInfo","pixProcessBarcodes","pixProjective","pixProjectiveColor","pixProjectiveGray","pixProjectivePta","pixProjectivePtaColor","pixProjectivePtaGray","pixProjectivePtaWithAlpha","pixProjectiveSampled","pixProjectiveSampledPta","pixQuadraticVShear","pixQuadraticVShearLI","pixQuadraticVShearSampled","pixQuadtreeMean","pixQuadtreeVariance","pixQuantFromCmap","pixQuantizeIfFewColors","pixRandomHarmonicWarp","pixRankBinByStrip","pixRankColumnTransform","pixRankFilter","pixRankFilterGray","pixRankFilterRGB","pixRankFilterWithScaling","pixRankHaustest","pixRankRowTransform","pixRasterop","pixRasteropFullImage","pixRasteropHip","pixRasteropIP","pixRasteropVip","pixRead","pixReadBarcodeWidths","pixReadBarcodes","pixReadFromMultipageTiff","pixReadHeader","pixReadHeaderMem","pixReadIndexed","pixReadJp2k","pixReadJpeg","pixReadMem","pixReadMemBmp","pixReadMemFromMultipageTiff","pixReadMemGif","pixReadMemJp2k","pixReadMemJpeg","pixReadMemPng","pixReadMemPnm","pixReadMemSpix","pixReadMemTiff","pixReadMemWebP","pixReadStream","pixReadStreamBmp","pixReadStreamGif","pixReadStreamJp2k","pixReadStreamJpeg","pixReadStreamPng","pixReadStreamPnm","pixReadStreamSpix","pixReadStreamTiff","pixReadStreamWebP","pixReadTiff","pixReadWithHint","pixReduceBinary2","pixReduceRankBinary2","pixReduceRankBinaryCascade","pixRemoveAlpha","pixRemoveBorder","pixRemoveBorderConnComps","pixRemoveBorderGeneral","pixRemoveBorderToSize","pixRemoveColormap","pixRemoveColormapGeneral","pixRemoveMatchedPattern","pixRemoveSeededComponents","pixRemoveUnusedColors","pixRemoveWithIndicator","pixRenderBox","pixRenderBoxArb","pixRenderBoxBlend","pixRenderBoxa","pixRenderBoxaArb","pixRenderBoxaBlend","pixRenderContours","pixRenderGridArb","pixRenderHashBox","pixRenderHashBoxArb","pixRenderHashBoxBlend","pixRenderHashBoxa","pixRenderHashBoxaArb","pixRenderHashBoxaBlend","pixRenderHashMaskArb","pixRenderLine","pixRenderLineArb","pixRenderLineBlend","pixRenderPlotFromNuma","pixRenderPlotFromNumaGen","pixRenderPolygon","pixRenderPolyline","pixRenderPolylineArb","pixRenderPolylineBlend","pixRenderPta","pixRenderPtaArb","pixRenderPtaBlend","pixRenderRandomCmapPtaa","pixResizeImageData","pixResizeToMatch","pixReversalProfile","pixRotate","pixRotate180","pixRotate2Shear","pixRotate3Shear","pixRotate90","pixRotateAM","pixRotateAMColor","pixRotateAMColorCorner","pixRotateAMColorFast","pixRotateAMCorner","pixRotateAMGray","pixRotateAMGrayCorner","pixRotateBinaryNice","pixRotateBySampling","pixRotateOrth","pixRotateShear","pixRotateShearCenter","pixRotateShearCenterIP","pixRotateShearIP","pixRotateWithAlpha","pixRowStats","pixRunHistogramMorph","pixRunlengthTransform","pixSauvolaBinarize","pixSauvolaBinarizeTiled","pixSaveTiled","pixSaveTiledOutline","pixSaveTiledWithText","pixScale","pixScaleAndTransferAlpha","pixScaleAreaMap","pixScaleAreaMap2","pixScaleAreaMapToSize","pixScaleBinary","pixScaleByIntSampling","pixScaleBySampling","pixScaleBySamplingToSize","pixScaleColor2xLI","pixScaleColor4xLI","pixScaleColorLI","pixScaleGeneral","pixScaleGray2xLI","pixScaleGray2xLIDither","pixScaleGray2xLIThresh","pixScaleGray4xLI","pixScaleGray4xLIDither","pixScaleGray4xLIThresh","pixScaleGrayLI","pixScaleGrayMinMax","pixScaleGrayMinMax2","pixScaleGrayRank2","pixScaleGrayRankCascade","pixScaleGrayToBinaryFast","pixScaleLI","pixScaleMipmap","pixScaleRGBToBinaryFast","pixScaleRGBToGray2","pixScaleRGBToGrayFast","pixScaleResolution","pixScaleSmooth","pixScaleSmoothToSize","pixScaleToGray","pixScaleToGray16","pixScaleToGray2","pixScaleToGray3","pixScaleToGray4","pixScaleToGray6","pixScaleToGray8","pixScaleToGrayFast","pixScaleToGrayMipmap","pixScaleToResolution","pixScaleToSize","pixScaleToSizeRel","pixScaleWithAlpha","pixScanForEdge","pixScanForForeground","pixSearchBinaryMaze","pixSearchGrayMaze","pixSeedfill","pixSeedfill4","pixSeedfill4BB","pixSeedfill8","pixSeedfill8BB","pixSeedfillBB","pixSeedfillBinary","pixSeedfillBinaryRestricted","pixSeedfillGray","pixSeedfillGrayBasin","pixSeedfillGrayInv","pixSeedfillGrayInvSimple","pixSeedfillGraySimple","pixSeedfillMorph","pixSeedspread","pixSelectByAreaFraction","pixSelectByPerimSizeRatio","pixSelectByPerimToAreaRatio","pixSelectBySize","pixSelectByWidthHeightRatio","pixSelectComponentBySize","pixSelectLargeULComp","pixSelectMinInConnComp","pixSelectedLocalExtrema","pixSelectiveConnCompFill","pixSerializeToMemory","pixSetAll","pixSetAllArbitrary","pixSetAllGray","pixSetAlphaOverWhite","pixSetBlackOrWhite","pixSetBlackOrWhiteBoxa","pixSetBorderRingVal","pixSetBorderVal","pixSetChromaSampling","pixSetCmapPixel","pixSetColormap","pixSetComponentArbitrary","pixSetData","pixSetDepth","pixSetDimensions","pixSetHeight","pixSetInRect","pixSetInRectArbitrary","pixSetInputFormat","pixSetLowContrast","pixSetMasked","pixSetMaskedCmap","pixSetMaskedGeneral","pixSetMirroredBorder","pixSetOrClearBorder","pixSetPadBits","pixSetPadBitsBand","pixSetPixel","pixSetPixelColumn","pixSetRGBComponent","pixSetRGBPixel","pixSetResolution","pixSetSelectCmap","pixSetSelectMaskedCmap","pixSetSpecial","pixSetSpp","pixSetStrokeWidth","pixSetText","pixSetTextblock","pixSetTextline","pixSetUnderTransparency","pixSetWidth","pixSetWpl","pixSetXRes","pixSetYRes","pixSetZlibCompression","pixSetupByteProcessing","pixShiftAndTransferAlpha","pixShiftByComponent","pixSimpleCaptcha","pixSimpleColorQuantize","pixSizesEqual","pixSmoothConnectedRegions","pixSnapColor","pixSnapColorCmap","pixSobelEdgeFilter","pixSplitComponentIntoBoxa","pixSplitComponentWithProfile","pixSplitDistributionFgBg","pixSplitIntoBoxa","pixSplitIntoCharacters","pixStereoFromPair","pixStretchHorizontal","pixStretchHorizontalLI","pixStretchHorizontalSampled","pixStrokeWidthTransform","pixSubsampleBoundaryPixels","pixSubtract","pixSubtractGray","pixSwapAndDestroy","pixTRCMap","pixTRCMapGeneral","pixTestClipToForeground","pixTestForSimilarity","pixThinConnected","pixThinConnectedBySet","pixThreshold8","pixThresholdByConnComp","pixThresholdByHisto","pixThresholdForFgBg","pixThresholdGrayArb","pixThresholdOn8bpp","pixThresholdPixelSum","pixThresholdSpreadNorm","pixThresholdTo2bpp","pixThresholdTo4bpp","pixThresholdToBinary","pixThresholdToValue","pixTilingCreate","pixTilingDestroy","pixTilingGetCount","pixTilingGetSize","pixTilingGetTile","pixTilingNoStripOnPaint","pixTilingPaintTile","pixTophat","pixTransferAllData","pixTranslate","pixTwoSidedEdgeFilter","pixUnionOfMorphOps","pixUnpackBinary","pixUnsharpMasking","pixUnsharpMaskingFast","pixUnsharpMaskingGray","pixUnsharpMaskingGray1D","pixUnsharpMaskingGray2D","pixUnsharpMaskingGrayFast","pixUpDownDetect","pixUpDownDetectDwa","pixUpDownDetectGeneral","pixUpDownDetectGeneralDwa","pixUsesCmapColor","pixVShear","pixVShearCenter","pixVShearCorner","pixVShearIP","pixVShearLI","pixVarThresholdToBinary","pixVarianceByColumn","pixVarianceByRow","pixVarianceInRect","pixVarianceInRectangle","pixWarpStereoscopic","pixWindowedMean","pixWindowedMeanSquare","pixWindowedStats","pixWindowedVariance","pixWindowedVarianceOnLine","pixWordBoxesByDilation","pixWordMaskByDilation","pixWrite","pixWriteAutoFormat","pixWriteCompressedToPS","pixWriteDebug","pixWriteImpliedFormat","pixWriteJp2k","pixWriteJpeg","pixWriteMem","pixWriteMemBmp","pixWriteMemGif","pixWriteMemJp2k","pixWriteMemJpeg","pixWriteMemPS","pixWriteMemPam","pixWriteMemPdf","pixWriteMemPng","pixWriteMemPnm","pixWriteMemSpix","pixWriteMemTiff","pixWriteMemTiffCustom","pixWriteMemWebP","pixWriteMixedToPS","pixWritePSEmbed","pixWritePng","pixWriteSegmentedPageToPS","pixWriteStream","pixWriteStreamAsciiPnm","pixWriteStreamBmp","pixWriteStreamGif","pixWriteStreamJp2k","pixWriteStreamJpeg","pixWriteStreamPS","pixWriteStreamPam","pixWriteStreamPdf","pixWriteStreamPng","pixWriteStreamPnm","pixWriteStreamSpix","pixWriteStreamTiff","pixWriteStreamTiffWA","pixWriteStreamWebP","pixWriteStringPS","pixWriteTiff","pixWriteTiffCustom","pixWriteWebP","pixXor","pixZero","pixa","pixa","pixa","pixaAccumulateSamples","pixaAddBorderGeneral","pixaAddBox","pixaAddPix","pixaAddPixWithText","pixaAddTextNumber","pixaAddTextlines","pixaAnyColormaps","pixaBinSort","pixaCentroids","pixaChangeRefcount","pixaClear","pixaClipToForeground","pixaClipToPix","pixaCompareInPdf","pixaComparePhotoRegionsByHisto","pixaConstrainedSelect","pixaConvertTo1","pixaConvertTo32","pixaConvertTo8","pixaConvertTo8Colormap","pixaConvertToNUpPixa","pixaConvertToPdf","pixaConvertToPdfData","pixaConvertToSameDepth","pixaCopy","pixaCountPixels","pixaCountText","pixaCreate","pixaCreateFromBoxa","pixaCreateFromPix","pixaCreateFromPixacomp","pixaDestroy","pixaDisplay","pixaDisplayBoxaa","pixaDisplayLinearly","pixaDisplayMultiTiled","pixaDisplayOnLattice","pixaDisplayRandomCmap","pixaDisplayTiled","pixaDisplayTiledAndScaled","pixaDisplayTiledByIndex","pixaDisplayTiledInColumns","pixaDisplayTiledInRows","pixaDisplayTiledWithText","pixaDisplayUnsplit","pixaEqual","pixaExtendArrayToSize","pixaExtendByMorph","pixaExtendByScaling","pixaExtractColumnFromEachPix","pixaFindAreaFraction","pixaFindAreaFractionMasked","pixaFindDimensions","pixaFindPerimSizeRatio","pixaFindPerimToAreaRatio","pixaFindStrokeWidth","pixaFindWidthHeightProduct","pixaFindWidthHeightRatio","pixaGetAlignedStats","pixaGetBox","pixaGetBoxGeometry","pixaGetBoxa","pixaGetBoxaCount","pixaGetCount","pixaGetDepthInfo","pixaGetFont","pixaGetLinePtrs","pixaGetPix","pixaGetPixArray","pixaGetPixDimensions","pixaGetRenderingDepth","pixaHasColor","pixaInitFull","pixaInsertPix","pixaInterleave","pixaIsFull","pixaJoin","pixaMakeFromTiledPix","pixaMakeFromTiledPixa","pixaMakeSizeIndicator","pixaModifyStrokeWidth","pixaMorphSequenceByComponent","pixaMorphSequenceByRegion","pixaRead","pixaReadBoth","pixaReadFiles","pixaReadFilesSA","pixaReadMem","pixaReadMemMultipageTiff","pixaReadMultipageTiff","pixaReadStream","pixaRemoveOutliers1","pixaRemoveOutliers2","pixaRemovePix","pixaRemovePixAndSave","pixaRemoveSelected","pixaRenderComponent","pixaReplacePix","pixaRotate","pixaRotateOrth","pixaSaveFont","pixaScale","pixaScaleBySampling","pixaScaleToSize","pixaScaleToSizeRel","pixaSelectByAreaFraction","pixaSelectByNumConnComp","pixaSelectByPerimSizeRatio","pixaSelectByPerimToAreaRatio","pixaSelectBySize","pixaSelectByWidthHeightRatio","pixaSelectRange","pixaSelectToPdf","pixaSelectWithIndicator","pixaSelectWithString","pixaSetBoxa","pixaSetFullSizeBoxa","pixaSetStrokeWidth","pixaSetText","pixaSizeRange","pixaSort","pixaSort2dByIndex","pixaSortByIndex","pixaSplitIntoFiles","pixaSplitPix","pixaThinConnected","pixaTranslate","pixaVerifyDepth","pixaVerifyDimensions","pixaWrite","pixaWriteCompressedToPS","pixaWriteDebug","pixaWriteFiles","pixaWriteMem","pixaWriteMemMultipageTiff","pixaWriteMemWebPAnim","pixaWriteMultipageTiff","pixaWriteStream","pixaWriteStreamInfo","pixaWriteStreamWebPAnim","pixaWriteWebPAnim","pixa_id","pixa_tr","pixa_u","pixaa","pixaa","pixaaAddBox","pixaaAddPix","pixaaAddPixa","pixaaClear","pixaaCreate","pixaaCreateFromPixa","pixaaDestroy","pixaaDisplay","pixaaDisplayByPixa","pixaaDisplayTiledAndScaled","pixaaExtendArray","pixaaFlattenToPixa","pixaaGetBoxa","pixaaGetCount","pixaaGetPix","pixaaGetPixa","pixaaInitFull","pixaaIsFull","pixaaJoin","pixaaRead","pixaaReadFromFiles","pixaaReadMem","pixaaReadStream","pixaaReplacePixa","pixaaScaleToSize","pixaaScaleToSizeVar","pixaaSelectRange","pixaaSizeRange","pixaaTruncate","pixaaVerifyDepth","pixaaVerifyDimensions","pixaaWrite","pixaaWriteMem","pixaaWriteStream","pixaa_u","pixaccAdd","pixaccCreate","pixaccCreateFromPix","pixaccDestroy","pixaccFinal","pixaccGetOffset","pixaccGetPix","pixaccMultConst","pixaccMultConstAccumulate","pixaccSubtract","pixacompAddBox","pixacompAddPix","pixacompAddPixcomp","pixacompConvertToPdf","pixacompConvertToPdfData","pixacompCreate","pixacompCreateFromFiles","pixacompCreateFromPixa","pixacompCreateFromSA","pixacompCreateWithInit","pixacompDestroy","pixacompDisplayTiledAndScaled","pixacompFastConvertToPdfData","pixacompGetBox","pixacompGetBoxGeometry","pixacompGetBoxa","pixacompGetBoxaCount","pixacompGetCount","pixacompGetOffset","pixacompGetPix","pixacompGetPixDimensions","pixacompGetPixcomp","pixacompInterleave","pixacompJoin","pixacompRead","pixacompReadMem","pixacompReadStream","pixacompReplacePix","pixacompReplacePixcomp","pixacompSetOffset","pixacompWrite","pixacompWriteFiles","pixacompWriteMem","pixacompWriteStream","pixacompWriteStreamInfo","pixad","pixadb_ave","pixadb_boot","pixadb_split","pixat","pixatd","pixc","pixcmapAddBlackOrWhite","pixcmapAddColor","pixcmapAddNearestColor","pixcmapAddNewColor","pixcmapAddRGBA","pixcmapClear","pixcmapColorToGray","pixcmapContrastTRC","pixcmapConvertHSVToRGB","pixcmapConvertRGBToHSV","pixcmapConvertRGBToYUV","pixcmapConvertTo4","pixcmapConvertTo8","pixcmapConvertToHex","pixcmapConvertYUVToRGB","pixcmapCopy","pixcmapCountGrayColors","pixcmapCreate","pixcmapCreateLinear","pixcmapCreateRandom","pixcmapDeserializeFromMemory","pixcmapDestroy","pixcmapGammaTRC","pixcmapGetColor","pixcmapGetColor32","pixcmapGetCount","pixcmapGetDepth","pixcmapGetDistanceToColor","pixcmapGetFreeCount","pixcmapGetIndex","pixcmapGetMinDepth","pixcmapGetNearestGrayIndex","pixcmapGetNearestIndex","pixcmapGetRGBA","pixcmapGetRGBA32","pixcmapGetRangeValues","pixcmapGetRankIntensity","pixcmapGrayToColor","pixcmapHasColor","pixcmapIsBlackAndWhite","pixcmapIsOpaque","pixcmapIsValid","pixcmapRead","pixcmapReadMem","pixcmapReadStream","pixcmapResetColor","pixcmapSerializeToMemory","pixcmapSetAlpha","pixcmapSetBlackAndWhite","pixcmapShiftByComponent","pixcmapShiftIntensity","pixcmapToArrays","pixcmapToOctcubeLUT","pixcmapToRGBTable","pixcmapUsableColor","pixcmapWrite","pixcmapWriteMem","pixcmapWriteStream","pixcompCopy","pixcompCreateFromFile","pixcompCreateFromPix","pixcompCreateFromString","pixcompDestroy","pixcompDetermineFormat","pixcompGetDimensions","pixcompGetParameters","pixcompWriteFile","pixcompWriteStreamInfo","pixdb_ave","pixdb_range","pixelFractionalShift","pixelLinearMapToTargetColor","pixelShiftByComponent","pixlab","pixm","pixs","pixs","pixs","pixt","plotdata","plotlabels","plotstyles","pmsCreate","pmsCustomAlloc","pmsCustomDealloc","pmsDestroy","pmsGetAlloc","pmsGetLevelForAlloc","pmsGetLevelForDealloc","pmsLogInfo","popen","posix_memalign","poststream","predictor","prev","printf","projectiveXformPt","projectiveXformSampledPt","pselect","pta","pta","ptaAddPt","ptaAffineTransform","ptaChangeRefcount","ptaClone","ptaContainsPt","ptaConvertToBox","ptaConvertToBoxa","ptaConvertToNuma","ptaCopy","ptaCopyRange","ptaCreate","ptaCreateFromNuma","ptaCropToMask","ptaCyclicPerm","ptaDestroy","ptaEmpty","ptaEqual","ptaFindPtByHash","ptaGetArrays","ptaGetBoundaryPixels","ptaGetBoundingRegion","ptaGetCount","ptaGetCubicLSF","ptaGetIPt","ptaGetInsideBox","ptaGetLinearLSF","ptaGetMinMax","ptaGetNeighborPixLocs","ptaGetPixelsFromPix","ptaGetPt","ptaGetQuadraticLSF","ptaGetQuarticLSF","ptaGetRange","ptaGetRankValue","ptaGetRefcount","ptaGetSortIndex","ptaInsertPt","ptaIntersectionByAset","ptaIntersectionByHash","ptaJoin","ptaNoisyLinearLSF","ptaNoisyQuadraticLSF","ptaPtInsidePolygon","ptaRead","ptaReadMem","ptaReadStream","ptaRemoveDupsByAset","ptaRemoveDupsByHash","ptaRemovePt","ptaReplicatePattern","ptaReverse","ptaRotate","ptaScale","ptaSelectByValue","ptaSelectRange","ptaSetPt","ptaSort","ptaSort2d","ptaSortByIndex","ptaSubsample","ptaTestIntersection","ptaTransform","ptaTranslate","ptaTranspose","ptaUnionByAset","ptaUnionByHash","ptaWrite","ptaWriteDebug","ptaWriteMem","ptaWriteStream","pta_u","ptaa","ptaaAddPt","ptaaAddPta","ptaaCreate","ptaaDestroy","ptaaGetBoundaryPixels","ptaaGetCount","ptaaGetPt","ptaaGetPta","ptaaIndexLabeledPixels","ptaaInitFull","ptaaJoin","ptaaRead","ptaaReadMem","ptaaReadStream","ptaaReplacePta","ptaaSortByIndex","ptaaTruncate","ptaaWrite","ptaaWriteDebug","ptaaWriteMem","ptaaWriteStream","ptaa_u","ptac","ptact","ptall","ptas","ptaul","ptaul","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","ptra","ptraAdd","ptraCompactArray","ptraConcatenatePdf","ptraConcatenatePdfToData","ptraCreate","ptraDestroy","ptraGetActualCount","ptraGetMaxIndex","ptraGetPtrToItem","ptraInsert","ptraJoin","ptraRemove","ptraRemoveLast","ptraReplace","ptraReverse","ptraSwap","ptraaCreate","ptraaDestroy","ptraaFlattenToPtra","ptraaGetPtra","ptraaGetSize","ptraaInsertPtra","ptype","putc","putc_unlocked","putchar","putchar_unlocked","putenv","puts","putw","qecvt","qecvt_r","qfcvt","qfcvt_r","qgcvt","qsort","quad_t","quadtreeGetChildren","quadtreeGetParent","quadtreeMaxLevels","quick_exit","quot","quot","quot","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rankhaus","rasteropHipLow","rasteropLow","rasteropUniLow","rasteropVipLow","rch","rchDestroy","rchExtract","rcha","rchaDestroy","rchaExtract","readHeaderJp2k","readHeaderJpeg","readHeaderMemJp2k","readHeaderMemJpeg","readHeaderMemPng","readHeaderMemPnm","readHeaderMemTiff","readHeaderMemWebP","readHeaderPng","readHeaderPnm","readHeaderSpix","readHeaderTiff","readHeaderWebP","readResolutionMemJpeg","realloc","reallocNew","reallocarray","realpath","recogAddDigitPadTemplates","recogAddSample","recogAverageSamples","recogCorrelationBestChar","recogCorrelationBestRow","recogCreate","recogCreateDid","recogCreateFromPixa","recogCreateFromPixaNoFinish","recogCreateFromRecog","recogDebugAverages","recogDecode","recogDestroy","recogDestroyDid","recogDidExists","recogExtractNumbers","recogExtractPixa","recogFilterPixaBySize","recogGetClassIndex","recogGetClassString","recogGetCount","recogGetDid","recogIdentifyMultiple","recogIdentifyPix","recogIdentifyPixa","recogIsPaddingNeeded","recogMakeBootDigitRecog","recogMakeBootDigitTemplates","recogModifyTemplate","recogPadDigitTrainingSet","recogProcessLabeled","recogProcessToIdentify","recogRead","recogReadMem","recogReadStream","recogRemoveOutliers1","recogRemoveOutliers2","recogSetChannelParams","recogSetParams","recogShowAverageTemplates","recogShowContent","recogShowMatch","recogShowMatchesInRange","recogSkipIdentify","recogSortPixaByClass","recogSplitIntoCharacters","recogStringToIndex","recogTrainFromBoot","recogTrainLabeled","recogTrainingFinished","recogWrite","recogWriteMem","recogWriteStream","red","redfactor","redfactor","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","reformatPacked64","refpage","regTestCheckFile","regTestCleanup","regTestCompareFiles","regTestComparePix","regTestCompareSimilarPix","regTestCompareStrings","regTestCompareValues","regTestGenLocalFilename","regTestSetup","regTestWriteDataAndCheck","regTestWritePixAndCheck","reg_save_area","register_t","rem","rem","rem","remove","rename","renameat","res","resetMorphBoundaryCondition","returnErrorFloat","returnErrorInt","returnErrorPtr","rewind","right","rightcurv","rightslope","root","rootname","rpmatch","rptr","runlengthMembershipOnLine","saConcatenatePdf","saConcatenatePdfToData","saConvertFilesToPdf","saConvertFilesToPdfData","saConvertUnscaledFilesToPdf","saConvertUnscaledFilesToPdfData","sa_text","sacmap","safiles","samphdispar","sample","sampling","sampling","sampvdispar","sampydispar","saprex","sarrayAddString","sarrayAppend","sarrayAppendRange","sarrayChangeRefcount","sarrayClear","sarrayClone","sarrayConvertFilesFittedToPS","sarrayConvertFilesToPS","sarrayConvertWordsToLines","sarrayCopy","sarrayCreate","sarrayCreateInitialized","sarrayCreateLinesFromString","sarrayCreateWordsFromString","sarrayDestroy","sarrayFindStringByHash","sarrayGenerateIntegers","sarrayGetArray","sarrayGetCount","sarrayGetRefcount","sarrayGetString","sarrayIntersectionByAset","sarrayIntersectionByHash","sarrayJoin","sarrayLookupCSKV","sarrayPadToSameSize","sarrayParseRange","sarrayRead","sarrayReadMem","sarrayReadStream","sarrayRemoveDupsByAset","sarrayRemoveDupsByHash","sarrayRemoveString","sarrayReplaceString","sarraySelectByRange","sarraySelectBySubstring","sarraySort","sarraySortByIndex","sarraySplitString","sarrayToString","sarrayToStringRange","sarrayUnionByAset","sarrayWrite","sarrayWriteMem","sarrayWriteStream","satext","scaleh","scalew","scaling","scanf","scanf1","score","seed48","seed48_r","sel","selCopy","selCreate","selCreateBrick","selCreateComb","selCreateFromColorPix","selCreateFromPix","selCreateFromPta","selCreateFromString","selDestroy","selDisplayInPix","selFindMaxTranslations","selGetElement","selGetName","selGetParameters","selGetTypeAtOrigin","selMakePlusSign","selPrintToString","selRead","selReadFromColorImage","selReadStream","selRotateOrth","selSetElement","selSetName","selSetOrigin","selWrite","selWriteStream","sela4and8ccThin","sela4ccThin","sela8ccThin","selaAddBasic","selaAddCrossJunctions","selaAddDwaCombs","selaAddDwaLinear","selaAddHitMiss","selaAddSel","selaAddTJunctions","selaCreate","selaCreateFromColorPixa","selaCreateFromFile","selaDestroy","selaDisplayInPix","selaFindSelByName","selaGetBrickName","selaGetCombName","selaGetCount","selaGetSel","selaGetSelnames","selaMakeThinSets","selaRead","selaReadStream","selaWrite","selaWriteStream","select","selectComposableSels","selectComposableSizes","selectDefaultPdfEncoding","setLeptDebugOK","setLineDataVal","setMsgSeverity","setPixMemoryManager","setPixelLow","setbuf","setbuffer","setenv","setlinebuf","setsize","setstate","setstate_r","setvbuf","setwidth","showExtractNumbers","sigset_t","size","size","size","size","size_t","sizehaus","skip_horiz","snprintf","spacewidth","special","spglobal","splitPathAtDirectory","splitPathAtExtension","splitStringToParagraphs","splocal","spp","spp","sprintf","srand","srand48","srand48_r","srandom","srandom_r","sreadHeaderSpix","sscanf","sscanf1","ssize_t","stack","start","startTimer","startTimerNested","startWallTimer","start_sec","start_usec","startx","startx","state","state","stderr","stdin","stdout","step","stopTimer","stopTimerNested","stopWallTimer","stop_sec","stop_usec","strcodeCreate","strcodeCreateFromFile","strcodeFinalize","strcodeGenerate","stringCat","stringCheckForChars","stringCompareLexical","stringConcatNew","stringCopy","stringCopySegment","stringFindEachSubstr","stringFindSubstr","stringJoin","stringJoinIP","stringLength","stringNew","stringRemoveChars","stringReplace","stringReplaceEachSubstr","stringReplaceSubstr","stringReverse","stringSplitOnToken","strip","strtod","strtof","strtokSafe","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtouq","success","sudokuCreate","sudokuDestroy","sudokuGenerate","sudokuOutput","sudokuReadFile","sudokuReadString","sudokuSolve","sudokuTestUniqueness","sumtab","suseconds_t","sx","sx","sy","sy","sys_errlist","sys_nerr","system","tempfile","templ_use","tempnam","testname","text","text","text","thresh","threshold","thresholdToBinaryLineLow","tiffGetCount","time_t","timer_t","timespec","timeval","title","title","tmpfile","tmpnam","tmpnam_r","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trailer","train_done","trellisscore","trellistempl","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstart","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","ungetc","unsetenv","useboth","ushort","utype","va_list","valloc","value","vdprintf","vertlinesep","vfprintf","vfscanf","vfscanf1","vprintf","vscanf","vscanf1","vsnprintf","vsprintf","vsscanf","vsscanf1","vsuccess","vvalid","w","w","w","w","w","w","w","w","w","w","w","w","wchar_t","wcstombs","wctomb","weightfactor","wh","width","widthtab","wpl","wpl","wpl","writeImageCompressedToPSFile","writeImageFileInfo","writeMultipageTiff","writeMultipageTiffSA","wshedApply","wshedBasins","wshedCreate","wshedDestroy","wshedRenderColors","wshedRenderFill","x","x","xlabel","xloc","xoverlap","xrefloc","xres","xres","xres","xres","xy","y","y","ylabel","yloc","yoverlap","yres","yres","yres","yres","ysuccess","zlibCompress","zlibUncompress"],"q":["leptonica_sysdeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,9,10,11,12,12,0,0,0,0,2,0,0,0,0,0,0,13,14,0,15,0,6,7,8,0,14,0,16,15,0,0,0,0,0,0,0,0,12,17,17,12,12,12,0,0,0,0,0,18,19,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14,0,14,0,18,19,0,0,0,20,21,0,14,0,0,2,0,14,15,15,15,15,1,0,22,23,20,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,15,0,0,0,3,4,5,6,7,8,9,10,11,0,14,0,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,13,26,26,12,15,15,15,27,27,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,29,30,31,32,33,34,35,36,37,0,0,0,38,0,0,0,0,0,0,36,39,0,0,40,41,41,41,41,0,0,0,0,0,0,0,0,42,0,0,0,0,28,39,0,0,0,0,0,0,0,0,39,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,62,74,75,78,87,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,39,39,64,0,68,0,0,0,0,0,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,0,67,67,86,66,66,61,73,0,40,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,92,70,72,70,72,73,86,0,40,56,57,70,72,73,83,85,86,91,67,67,66,0,65,38,0,0,29,30,42,37,91,0,65,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,39,33,41,90,0,0,0,0,54,55,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,24,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,18,19,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,60,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,0,41,0,0,0,0,0,90,93,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,0,0,0,0,0,0,0,0,0,0,0,59,42,65,65,65,91,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,63,65,67,40,69,73,76,81,82,83,85,86,65,65,65,68,0,0,0,0,0,91,34,88,90,73,92,55,0,0,0,0,0,0,0,0,0,0,0,0,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,61,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,0,0,0,0,61,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,38,38,38,38,39,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,64,64,39,64,39,39,39,65,64,40,39,64,40,39,39,39,0,0,0,68,40,64,39,39,65,38,39,67,64,65,39,39,0,0,0,0,90,0,64,0,0,0,0,29,53,30,54,31,32,33,36,63,68,71,37,74,75,77,78,79,80,84,87,91,40,39,39,40,69,40,34,65,42,42,40,89,38,29,53,30,54,31,56,32,33,34,58,35,36,63,64,71,37,74,75,77,78,79,80,84,87,70,38,65,64,42,40,69,64,42,89,42,89,42,42,38,38,39,42,39,42,42,89,42,42,89,42,42,89,55,67,67,0,67,40,69,68,67,35,57,0,92,35,65,0,38,40,69,66,0,0,38,92,39,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,65,82,65,82,68,68,68,68,68,68,68,0,81,87,0,0,66,66,93,65,61,0,0,0,0,0,0,0,0,62,63,69,74,81,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,75,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,40,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,39,39,40,40,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,38,38,65,42,38,38,66,66,66,0,0,0,0,0,0,0,0,0,0,68,67,57,0,0,0,0,80,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,40,40,40,38,40,69,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,48,0,51,0,51,51,0,0,0,40,0,0,0,0,39,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,64,65,29,30,31,56,62,73,74,76,77,79,83,84,85,0,65,0,0,0,0,0,0,0,0,0,0,0,93,0,46,47,48,0,0,0,67,0,0,0,0,0,61,65,65,60,66,0,51,0,0,0,0,0,0,0,39,68,40,65,88,64,65,65,65,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,39,39,66,0,0,88,0,0,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,42,0,0,56,41,86,42,0,40,65,0,41,73,62,0,0,0,62,67,73,0,0,0,0,0,0,0,0,0,0,35,62,0,0,0,52,52,29,30,51,92,0,0,0,62,0,0,0,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,0,0,0,0,39,0,70,72,70,72,0,0,0,90,39,0,90,73,86,88,40,39,0,0,0,0,0,0,66,68,0,0,0,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,68,39,42,42,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,90,50,49,50,49,67,24,13,26,22,23,43,44,45,1,46,47,48,25,49,50,16,20,21,14,15,12,27,18,17,19,3,4,5,6,7,8,9,10,11,51,2,52,29,53,30,54,55,31,56,32,33,57,34,58,35,59,60,61,36,41,62,63,64,65,66,67,68,40,69,70,71,72,73,37,28,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,42,90,91,92,38,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,59,0,0,61,0,41,0,0,0,0,0,0,0,0,0,0,65,65,63,65,67,40,69,73,76,81,82,83,85,86,0,0,0,40,68,88,41,73,83,85,0,0,0,0,0,0,0,0,0,0,76,79,66,88,82,68,73,83,85,86,68,76,79,66,88,82,73,83,85,86,65,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["__fsid_t",3]],["__fsid_t",3]],[[["__mbstate_t",3]],["__mbstate_t",3]],[[["__mbstate_t__bindgen_ty_1",19]],["__mbstate_t__bindgen_ty_1",19]],[[["_g_fpos_t",3]],["_g_fpos_t",3]],[[["_g_fpos64_t",3]],["_g_fpos64_t",3]],[[["_io_marker",3]],["_io_marker",3]],[[["_io_codecvt",3]],["_io_codecvt",3]],[[["_io_wide_data",3]],["_io_wide_data",3]],[[["_io_file",3]],["_io_file",3]],[[["div_t",3]],["div_t",3]],[[["ldiv_t",3]],["ldiv_t",3]],[[["lldiv_t",3]],["lldiv_t",3]],[[["__sigset_t",3]],["__sigset_t",3]],[[["timeval",3]],["timeval",3]],[[["timespec",3]],["timespec",3]],[[["fd_set",3]],["fd_set",3]],[[["__pthread_internal_list",3]],["__pthread_internal_list",3]],[[["__pthread_internal_slist",3]],["__pthread_internal_slist",3]],[[["__pthread_mutex_s",3]],["__pthread_mutex_s",3]],[[["__pthread_rwlock_arch_t",3]],["__pthread_rwlock_arch_t",3]],[[["__pthread_cond_s",3]],["__pthread_cond_s",3]],[[["__pthread_cond_s__bindgen_ty_1",19]],["__pthread_cond_s__bindgen_ty_1",19]],[[["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]],[[["__pthread_cond_s__bindgen_ty_2",19]],["__pthread_cond_s__bindgen_ty_2",19]],[[["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]],[[["pthread_mutexattr_t",19]],["pthread_mutexattr_t",19]],[[["pthread_condattr_t",19]],["pthread_condattr_t",19]],[[["pthread_attr_t",19]],["pthread_attr_t",19]],[[["pthread_mutex_t",19]],["pthread_mutex_t",19]],[[["pthread_cond_t",19]],["pthread_cond_t",19]],[[["pthread_rwlock_t",19]],["pthread_rwlock_t",19]],[[["pthread_rwlockattr_t",19]],["pthread_rwlockattr_t",19]],[[["pthread_barrier_t",19]],["pthread_barrier_t",19]],[[["pthread_barrierattr_t",19]],["pthread_barrierattr_t",19]],[[["random_data",3]],["random_data",3]],[[["drand48_data",3]],["drand48_data",3]],[[["l_walltimer",3]],["l_walltimer",3]],[[["numa",3]],["numa",3]],[[["numaa",3]],["numaa",3]],[[["l_dna",3]],["l_dna",3]],[[["l_dnaa",3]],["l_dnaa",3]],[[["l_dnahash",3]],["l_dnahash",3]],[[["sarray",3]],["sarray",3]],[[["l_bytea",3]],["l_bytea",3]],[[["l_bytebuffer",3]],["l_bytebuffer",3]],[[["l_heap",3]],["l_heap",3]],[[["doublelinkedlist",3]],["doublelinkedlist",3]],[[["l_ptra",3]],["l_ptra",3]],[[["l_ptraa",3]],["l_ptraa",3]],[[["l_queue",3]],["l_queue",3]],[[["rb_type",19]],["rb_type",19]],[[["l_rbtree",3]],["l_rbtree",3]],[[["l_rbtree_node",3]],["l_rbtree_node",3]],[[["l_stack",3]],["l_stack",3]],[[["l_bmf",3]],["l_bmf",3]],[[["ccbord",3]],["ccbord",3]],[[["ccborda",3]],["ccborda",3]],[[["l_dewarpa",3]],["l_dewarpa",3]],[[["l_dewarp",3]],["l_dewarp",3]],[[["gplot",3]],["gplot",3]],[[["l_compressed_data",3]],["l_compressed_data",3]],[[["l_pdf_data",3]],["l_pdf_data",3]],[[["jbclasser",3]],["jbclasser",3]],[[["jbdata",3]],["jbdata",3]],[[["sel",3]],["sel",3]],[[["sela",3]],["sela",3]],[[["l_kernel",3]],["l_kernel",3]],[[["pix",3]],["pix",3]],[[["pixcolormap",3]],["pixcolormap",3]],[[["rgba_quad",3]],["rgba_quad",3]],[[["pixa",3]],["pixa",3]],[[["pixaa",3]],["pixaa",3]],[[["box",3]],["box",3]],[[["boxa",3]],["boxa",3]],[[["boxaa",3]],["boxaa",3]],[[["pta",3]],["pta",3]],[[["ptaa",3]],["ptaa",3]],[[["pixacc",3]],["pixacc",3]],[[["pixtiling",3]],["pixtiling",3]],[[["fpix",3]],["fpix",3]],[[["fpixa",3]],["fpixa",3]],[[["dpix",3]],["dpix",3]],[[["pixcomp",3]],["pixcomp",3]],[[["pixacomp",3]],["pixacomp",3]],[[["l_recog",3]],["l_recog",3]],[[["l_rch",3]],["l_rch",3]],[[["l_rcha",3]],["l_rcha",3]],[[["l_rdid",3]],["l_rdid",3]],[[["l_regparams",3]],["l_regparams",3]],[[["l_strcode",3]],["l_strcode",3]],[[["l_sudoku",3]],["l_sudoku",3]],[[["l_wshed",3]],["l_wshed",3]],[[["__va_list_tag",3]],["__va_list_tagnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["__fsid_t",3],["formatter",3]],["result",6]],[[["_io_marker",3],["formatter",3]],["result",6]],[[["_io_codecvt",3],["formatter",3]],["result",6]],[[["_io_wide_data",3],["formatter",3]],["result",6]],[[["_io_file",3],["formatter",3]],["result",6]],[[["div_t",3],["formatter",3]],["result",6]],[[["ldiv_t",3],["formatter",3]],["result",6]],[[["lldiv_t",3],["formatter",3]],["result",6]],[[["__sigset_t",3],["formatter",3]],["result",6]],[[["timeval",3],["formatter",3]],["result",6]],[[["timespec",3],["formatter",3]],["result",6]],[[["fd_set",3],["formatter",3]],["result",6]],[[["__pthread_internal_list",3],["formatter",3]],["result",6]],[[["__pthread_internal_slist",3],["formatter",3]],["result",6]],[[["__pthread_mutex_s",3],["formatter",3]],["result",6]],[[["__pthread_rwlock_arch_t",3],["formatter",3]],["result",6]],[[["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["random_data",3],["formatter",3]],["result",6]],[[["drand48_data",3],["formatter",3]],["result",6]],[[["l_walltimer",3],["formatter",3]],["result",6]],[[["numa",3],["formatter",3]],["result",6]],[[["numaa",3],["formatter",3]],["result",6]],[[["l_dna",3],["formatter",3]],["result",6]],[[["l_dnaa",3],["formatter",3]],["result",6]],[[["l_dnahash",3],["formatter",3]],["result",6]],[[["sarray",3],["formatter",3]],["result",6]],[[["l_bytea",3],["formatter",3]],["result",6]],[[["l_bytebuffer",3],["formatter",3]],["result",6]],[[["l_heap",3],["formatter",3]],["result",6]],[[["doublelinkedlist",3],["formatter",3]],["result",6]],[[["l_ptra",3],["formatter",3]],["result",6]],[[["l_ptraa",3],["formatter",3]],["result",6]],[[["l_queue",3],["formatter",3]],["result",6]],[[["l_rbtree",3],["formatter",3]],["result",6]],[[["l_stack",3],["formatter",3]],["result",6]],[[["l_bmf",3],["formatter",3]],["result",6]],[[["ccbord",3],["formatter",3]],["result",6]],[[["ccborda",3],["formatter",3]],["result",6]],[[["l_dewarpa",3],["formatter",3]],["result",6]],[[["l_dewarp",3],["formatter",3]],["result",6]],[[["gplot",3],["formatter",3]],["result",6]],[[["l_compressed_data",3],["formatter",3]],["result",6]],[[["l_pdf_data",3],["formatter",3]],["result",6]],[[["jbclasser",3],["formatter",3]],["result",6]],[[["jbdata",3],["formatter",3]],["result",6]],[[["sel",3],["formatter",3]],["result",6]],[[["sela",3],["formatter",3]],["result",6]],[[["l_kernel",3],["formatter",3]],["result",6]],[[["pix",3],["formatter",3]],["result",6]],[[["pixcolormap",3],["formatter",3]],["result",6]],[[["rgba_quad",3],["formatter",3]],["result",6]],[[["pixa",3],["formatter",3]],["result",6]],[[["pixaa",3],["formatter",3]],["result",6]],[[["box",3],["formatter",3]],["result",6]],[[["boxa",3],["formatter",3]],["result",6]],[[["boxaa",3],["formatter",3]],["result",6]],[[["pta",3],["formatter",3]],["result",6]],[[["ptaa",3],["formatter",3]],["result",6]],[[["pixacc",3],["formatter",3]],["result",6]],[[["pixtiling",3],["formatter",3]],["result",6]],[[["fpix",3],["formatter",3]],["result",6]],[[["fpixa",3],["formatter",3]],["result",6]],[[["dpix",3],["formatter",3]],["result",6]],[[["pixcomp",3],["formatter",3]],["result",6]],[[["pixacomp",3],["formatter",3]],["result",6]],[[["l_recog",3],["formatter",3]],["result",6]],[[["l_rch",3],["formatter",3]],["result",6]],[[["l_rcha",3],["formatter",3]],["result",6]],[[["l_rdid",3],["formatter",3]],["result",6]],[[["l_regparams",3],["formatter",3]],["result",6]],[[["l_strcode",3],["formatter",3]],["result",6]],[[["l_sudoku",3],["formatter",3]],["result",6]],[[["l_wshed",3],["formatter",3]],["result",6]],[[["__va_list_tag",3],["formatter",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"_IO_FILE"],[3,"drand48_data"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"__pthread_cond_s"],[3,"__mbstate_t"],[3,"__pthread_mutex_s"],[3,"__pthread_rwlock_arch_t"],[3,"fd_set"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[3,"__pthread_internal_list"],[3,"__pthread_internal_slist"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"__fsid_t"],[3,"__sigset_t"],[19,"__mbstate_t__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"RGBA_Quad"],[3,"Numa"],[3,"L_Dna"],[3,"Sarray"],[3,"L_ByteBuffer"],[3,"L_Heap"],[3,"L_Ptra"],[3,"L_Queue"],[3,"L_Stack"],[3,"PixColormap"],[3,"L_WShed"],[3,"L_Recog"],[3,"JbClasser"],[3,"L_Bmf"],[3,"L_Rdid"],[3,"_IO_marker"],[3,"_IO_codecvt"],[3,"_IO_wide_data"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"timeval"],[3,"timespec"],[3,"random_data"],[3,"L_WallTimer"],[3,"Numaa"],[3,"L_Dnaa"],[3,"L_DnaHash"],[3,"L_Bytea"],[3,"DoubleLinkedList"],[3,"L_Ptraa"],[19,"Rb_Type"],[3,"L_Rbtree"],[3,"L_Rbtree_Node"],[3,"CCBord"],[3,"CCBorda"],[3,"L_Dewarpa"],[3,"L_Dewarp"],[3,"GPlot"],[3,"L_Compressed_Data"],[3,"L_Pdf_Data"],[3,"JbData"],[3,"Sel"],[3,"Sela"],[3,"L_Kernel"],[3,"Pix"],[3,"Pixa"],[3,"Pixaa"],[3,"Box"],[3,"Boxa"],[3,"Boxaa"],[3,"Pta"],[3,"Ptaa"],[3,"Pixacc"],[3,"PixTiling"],[3,"FPix"],[3,"FPixa"],[3,"DPix"],[3,"PixComp"],[3,"PixaComp"],[3,"L_Rch"],[3,"L_Rcha"],[3,"L_RegParams"],[3,"L_StrCode"],[3,"L_Sudoku"],[3,"__va_list_tag"]]},\
"proc_macro2":{"doc":"githubâ€‚crates-ioâ€‚docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal â€¦","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), â€¦","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), â€¦","<code>Ã˜ ... Ã˜</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> â€¦","A region of source code, along with macro expansion â€¦","An abstract stream of tokens, or more concretely a â€¦","A single token or a delimited sequence of token trees â€¦","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior â€¦","The span located at the invocation of the procedural â€¦","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token â€¦","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the â€¦","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>â€¦","","Creates a new span with the same line/column information â€¦","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>â€™s delimiters, but not â€¦","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its â€¦","Configures the span associated for this literal.","Returns the spacing of this punctuation character, â€¦","","Returns the span of this tree, delegating to the <code>span</code> â€¦","Returns the span for the delimiters of this token stream, â€¦","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this â€¦","Returns the span pointing to the opening delimiter of this â€¦","Returns the <code>TokenStream</code> of tokens that are delimited in â€¦","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing â€¦","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified â€¦","Creates a new unsuffixed integer literal with the â€¦","","","","","An iterator over <code>TokenStream</code>â€™s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[1,2,2,0,0,3,0,3,1,0,0,3,2,2,0,3,0,0,0,0,4,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,7,10,6,7,3,8,2,4,1,9,10,6,7,3,8,2,4,1,9,10,9,6,8,2,1,9,9,6,6,10,10,10,10,5,5,6,6,7,3,3,8,8,2,4,4,1,9,9,10,10,5,6,6,6,7,7,3,3,3,3,3,8,2,4,1,9,10,6,6,6,10,9,10,10,10,10,10,10,10,10,10,10,5,6,7,3,8,2,4,1,9,10,6,6,10,10,7,7,7,6,8,4,9,9,9,7,3,8,4,9,10,4,5,3,8,4,9,10,8,8,8,10,10,6,7,3,8,2,4,1,9,10,5,6,3,8,4,9,10,0,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,10,10,10,10,10,10,10,10,10,7,10,10,11,12,13,14,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["punct",3]],["char",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["literal",3]],[[],["span",3]],[[["char",0]],["literal",3]],[[["tokenstream",3]],["tokenstream",3]],[[["span",3]],["span",3]],[[["tokentree",4]],["tokentree",4]],[[["group",3]],["group",3]],[[["delimiter",4]],["delimiter",4]],[[["punct",3]],["punct",3]],[[["spacing",4]],["spacing",4]],[[["ident",3]],["ident",3]],[[["literal",3]],["literal",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ident",3],["ident",3]],["ordering",4]],[[],["tokenstream",3]],[[["group",3]],["delimiter",4]],[[["delimiter",4],["delimiter",4]],["bool",0]],[[["spacing",4],["spacing",4]],["bool",0]],[[["ident",3],["",0]],["bool",0]],[[["ident",3],["ident",3]],["bool",0]],[[["tokenstream",3],["intoiterator",8]]],[[["tokenstream",3],["intoiterator",8]]],[[["f32",0]],["literal",3]],[[["f32",0]],["literal",3]],[[["f64",0]],["literal",3]],[[["f64",0]],["literal",3]],[[["lexerror",3],["formatter",3]],["result",6]],[[["lexerror",3],["formatter",3]],["result",6]],[[["tokenstream",3],["formatter",3]],["result",6]],[[["tokenstream",3],["formatter",3]],["result",6]],[[["span",3],["formatter",3]],["result",6]],[[["tokentree",4],["formatter",3]],["result",6]],[[["tokentree",4],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["delimiter",4],["formatter",3]],["result",6]],[[["punct",3],["formatter",3]],["result",6]],[[["punct",3],["formatter",3]],["result",6]],[[["spacing",4],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[]],[[["tokenstream",3]],["tokenstream",3]],[[["tokentree",4]],["tokenstream",3]],[[]],[[]],[[["span",3]],["span",3]],[[]],[[["group",3]],["tokentree",4]],[[["ident",3]],["tokentree",4]],[[["punct",3]],["tokentree",4]],[[["literal",3]],["tokentree",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["tokenstream",3]],[[["intoiterator",8]],["tokenstream",3]],[[["str",0]],["result",4,[["tokenstream",3],["lexerror",3]]]],[[["str",0]],["result",4,[["literal",3],["lexerror",3]]]],[[["ident",3],["",0]]],[[["i128",0]],["literal",3]],[[["i128",0]],["literal",3]],[[["i16",0]],["literal",3]],[[["i16",0]],["literal",3]],[[["i32",0]],["literal",3]],[[["i32",0]],["literal",3]],[[["i64",0]],["literal",3]],[[["i64",0]],["literal",3]],[[["i8",0]],["literal",3]],[[["i8",0]],["literal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenstream",3]],["intoiter",3]],[[["tokenstream",3]],["bool",0]],[[["isize",0]],["literal",3]],[[["isize",0]],["literal",3]],[[["span",3],["span",3]],["option",4,[["span",3]]]],[[["span",3],["span",3]],["span",3]],[[],["span",3]],[[],["tokenstream",3]],[[["delimiter",4],["tokenstream",3]],["group",3]],[[["char",0],["spacing",4]],["punct",3]],[[["str",0],["span",3]],["ident",3]],[[["str",0],["span",3]],["ident",3]],[[["ident",3],["ident",3]],["option",4,[["ordering",4]]]],[[["span",3],["span",3]],["span",3]],[[["tokentree",4],["span",3]]],[[["group",3],["span",3]]],[[["punct",3],["span",3]]],[[["ident",3],["span",3]]],[[["literal",3],["span",3]]],[[["punct",3]],["spacing",4]],[[["lexerror",3]],["span",3]],[[["tokentree",4]],["span",3]],[[["group",3]],["span",3]],[[["punct",3]],["span",3]],[[["ident",3]],["span",3]],[[["literal",3]],["span",3]],[[["group",3]],["span",3]],[[["group",3]],["span",3]],[[["group",3]],["tokenstream",3]],[[["str",0]],["literal",3]],[[["literal",3],["rangebounds",8,[["usize",0]]]],["option",4,[["span",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u128",0]],["literal",3]],[[["u128",0]],["literal",3]],[[["u16",0]],["literal",3]],[[["u16",0]],["literal",3]],[[["u32",0]],["literal",3]],[[["u32",0]],["literal",3]],[[["u64",0]],["literal",3]],[[["u64",0]],["literal",3]],[[["u8",0]],["literal",3]],[[["u8",0]],["literal",3]],[[["span",3]],["span",3]],[[["usize",0]],["literal",3]],[[["usize",0]],["literal",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3]],["intoiter",3]],[[["",0],["",0]]],[[["intoiter",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["intoiter",3]],["option",4,[["tokentree",4]]]],[[["intoiter",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Spacing"],[4,"Delimiter"],[4,"TokenTree"],[3,"Punct"],[3,"LexError"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Ident"],[3,"Literal"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"githubâ€‚crates-ioâ€‚docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending â€¦","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens â€¦","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,2,0,3,3,0,0,2,2,3,3,3],"f":[null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],null,[[],["tokenstream",3]],[[],["tokenstream",3]],null,null,[[["",0]],["option",4,[["span",3]]]],[[["",0]],["option",4,[["span",3]]]],[[["",0]],["tokenstream",3]],[[["",0]],["tokenstream",3]],[[["",0],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"syn":{"doc":"githubâ€‚crates-ioâ€‚docs-rs","tn":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Block","Bool","BoundLifetimes","Box","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Enum","Eq","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericMethodArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMacro2","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro2","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","Method","Method","MethodCall","MethodTurbofish","Mod","Mul","MulEq","Name","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatBox","PatIdent","PatLit","PatMacro","PatOr","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemEq","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Semi","Shl","ShlEq","Shr","ShrEq","Signature","Slice","Slice","Static","Static","Stmt","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubEq","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","box_token","box_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","constness","content","continue_token","crate_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","discriminant","dot2_token","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","else_branch","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","hi","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","left","len","len","len","let_token","let_token","lhs_ty","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","lo","loop_token","lt_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","macro_token","make_where_clause","match_token","member","member","member","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","qself","question_token","raw","receiver","receiver","reference","rename","rename","rest","return_token","rhs_ty","right","right","right","rules","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","visit","visit_mut","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_tokenursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","0","0","1","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Visit","visit_abi","visit_abi","visit_abi","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_arm","visit_arm","visit_arm","visit_attr_style","visit_attr_style","visit_attr_style","visit_attribute","visit_attribute","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg","visit_bare_fn_arg","visit_bin_op","visit_bin_op","visit_bin_op","visit_binding","visit_binding","visit_binding","visit_block","visit_block","visit_block","visit_bound_lifetimes","visit_bound_lifetimes","visit_bound_lifetimes","visit_const_param","visit_const_param","visit_const_param","visit_constraint","visit_constraint","visit_constraint","visit_data","visit_data","visit_data","visit_data_enum","visit_data_enum","visit_data_enum","visit_data_struct","visit_data_struct","visit_data_struct","visit_data_union","visit_data_union","visit_data_union","visit_derive_input","visit_derive_input","visit_derive_input","visit_expr","visit_expr","visit_expr","visit_expr_array","visit_expr_array","visit_expr_array","visit_expr_assign","visit_expr_assign","visit_expr_assign","visit_expr_assign_op","visit_expr_assign_op","visit_expr_assign_op","visit_expr_async","visit_expr_async","visit_expr_async","visit_expr_await","visit_expr_await","visit_expr_await","visit_expr_binary","visit_expr_binary","visit_expr_binary","visit_expr_block","visit_expr_block","visit_expr_block","visit_expr_box","visit_expr_box","visit_expr_box","visit_expr_break","visit_expr_break","visit_expr_break","visit_expr_call","visit_expr_call","visit_expr_call","visit_expr_cast","visit_expr_cast","visit_expr_cast","visit_expr_closure","visit_expr_closure","visit_expr_closure","visit_expr_continue","visit_expr_continue","visit_expr_continue","visit_expr_field","visit_expr_field","visit_expr_field","visit_expr_for_loop","visit_expr_for_loop","visit_expr_for_loop","visit_expr_group","visit_expr_group","visit_expr_group","visit_expr_if","visit_expr_if","visit_expr_if","visit_expr_index","visit_expr_index","visit_expr_index","visit_expr_let","visit_expr_let","visit_expr_let","visit_expr_lit","visit_expr_lit","visit_expr_lit","visit_expr_loop","visit_expr_loop","visit_expr_loop","visit_expr_macro","visit_expr_macro","visit_expr_macro","visit_expr_match","visit_expr_match","visit_expr_match","visit_expr_method_call","visit_expr_method_call","visit_expr_method_call","visit_expr_paren","visit_expr_paren","visit_expr_paren","visit_expr_path","visit_expr_path","visit_expr_path","visit_expr_range","visit_expr_range","visit_expr_range","visit_expr_reference","visit_expr_reference","visit_expr_reference","visit_expr_repeat","visit_expr_repeat","visit_expr_repeat","visit_expr_return","visit_expr_return","visit_expr_return","visit_expr_struct","visit_expr_struct","visit_expr_struct","visit_expr_try","visit_expr_try","visit_expr_try","visit_expr_try_block","visit_expr_try_block","visit_expr_try_block","visit_expr_tuple","visit_expr_tuple","visit_expr_tuple","visit_expr_type","visit_expr_type","visit_expr_type","visit_expr_unary","visit_expr_unary","visit_expr_unary","visit_expr_unsafe","visit_expr_unsafe","visit_expr_unsafe","visit_expr_while","visit_expr_while","visit_expr_while","visit_expr_yield","visit_expr_yield","visit_expr_yield","visit_field","visit_field","visit_field","visit_field_pat","visit_field_pat","visit_field_pat","visit_field_value","visit_field_value","visit_field_value","visit_fields","visit_fields","visit_fields","visit_fields_named","visit_fields_named","visit_fields_named","visit_fields_unnamed","visit_fields_unnamed","visit_fields_unnamed","visit_file","visit_file","visit_file","visit_fn_arg","visit_fn_arg","visit_fn_arg","visit_foreign_item","visit_foreign_item","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_type","visit_foreign_item_type","visit_foreign_item_type","visit_generic_argument","visit_generic_argument","visit_generic_argument","visit_generic_method_argument","visit_generic_method_argument","visit_generic_method_argument","visit_generic_param","visit_generic_param","visit_generic_param","visit_generics","visit_generics","visit_generics","visit_ident","visit_ident","visit_ident","visit_impl_item","visit_impl_item","visit_impl_item","visit_impl_item_const","visit_impl_item_const","visit_impl_item_const","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_method","visit_impl_item_method","visit_impl_item_method","visit_impl_item_type","visit_impl_item_type","visit_impl_item_type","visit_index","visit_index","visit_index","visit_item","visit_item","visit_item","visit_item_const","visit_item_const","visit_item_const","visit_item_enum","visit_item_enum","visit_item_enum","visit_item_extern_crate","visit_item_extern_crate","visit_item_extern_crate","visit_item_fn","visit_item_fn","visit_item_fn","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_impl","visit_item_impl","visit_item_impl","visit_item_macro","visit_item_macro","visit_item_macro","visit_item_macro2","visit_item_macro2","visit_item_macro2","visit_item_mod","visit_item_mod","visit_item_mod","visit_item_static","visit_item_static","visit_item_static","visit_item_struct","visit_item_struct","visit_item_struct","visit_item_trait","visit_item_trait","visit_item_trait","visit_item_trait_alias","visit_item_trait_alias","visit_item_trait_alias","visit_item_type","visit_item_type","visit_item_type","visit_item_union","visit_item_union","visit_item_union","visit_item_use","visit_item_use","visit_item_use","visit_label","visit_label","visit_label","visit_lifetime","visit_lifetime","visit_lifetime","visit_lifetime_def","visit_lifetime_def","visit_lifetime_def","visit_lit","visit_lit","visit_lit","visit_lit_bool","visit_lit_bool","visit_lit_bool","visit_lit_byte","visit_lit_byte","visit_lit_byte","visit_lit_byte_str","visit_lit_byte_str","visit_lit_byte_str","visit_lit_char","visit_lit_char","visit_lit_char","visit_lit_float","visit_lit_float","visit_lit_float","visit_lit_int","visit_lit_int","visit_lit_int","visit_lit_str","visit_lit_str","visit_lit_str","visit_local","visit_local","visit_local","visit_macro","visit_macro","visit_macro","visit_macro_delimiter","visit_macro_delimiter","visit_macro_delimiter","visit_member","visit_member","visit_member","visit_meta","visit_meta","visit_meta","visit_meta_list","visit_meta_list","visit_meta_list","visit_meta_name_value","visit_meta_name_value","visit_meta_name_value","visit_method_turbofish","visit_method_turbofish","visit_method_turbofish","visit_nested_meta","visit_nested_meta","visit_nested_meta","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_pat","visit_pat","visit_pat","visit_pat_box","visit_pat_box","visit_pat_box","visit_pat_ident","visit_pat_ident","visit_pat_ident","visit_pat_lit","visit_pat_lit","visit_pat_lit","visit_pat_macro","visit_pat_macro","visit_pat_macro","visit_pat_or","visit_pat_or","visit_pat_or","visit_pat_path","visit_pat_path","visit_pat_path","visit_pat_range","visit_pat_range","visit_pat_range","visit_pat_reference","visit_pat_reference","visit_pat_reference","visit_pat_rest","visit_pat_rest","visit_pat_rest","visit_pat_slice","visit_pat_slice","visit_pat_slice","visit_pat_struct","visit_pat_struct","visit_pat_struct","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_type","visit_pat_type","visit_pat_type","visit_pat_wild","visit_pat_wild","visit_pat_wild","visit_path","visit_path","visit_path","visit_path_arguments","visit_path_arguments","visit_path_arguments","visit_path_segment","visit_path_segment","visit_path_segment","visit_predicate_eq","visit_predicate_eq","visit_predicate_eq","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_type","visit_predicate_type","visit_predicate_type","visit_qself","visit_qself","visit_qself","visit_range_limits","visit_range_limits","visit_range_limits","visit_receiver","visit_receiver","visit_receiver","visit_return_type","visit_return_type","visit_return_type","visit_signature","visit_signature","visit_signature","visit_span","visit_span","visit_span","visit_stmt","visit_stmt","visit_stmt","visit_trait_bound","visit_trait_bound","visit_trait_bound","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_item","visit_trait_item","visit_trait_item","visit_trait_item_const","visit_trait_item_const","visit_trait_item_const","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_method","visit_trait_item_method","visit_trait_item_method","visit_trait_item_type","visit_trait_item_type","visit_trait_item_type","visit_type","visit_type","visit_type","visit_type_array","visit_type_array","visit_type_array","visit_type_bare_fn","visit_type_bare_fn","visit_type_bare_fn","visit_type_group","visit_type_group","visit_type_group","visit_type_impl_trait","visit_type_impl_trait","visit_type_impl_trait","visit_type_infer","visit_type_infer","visit_type_infer","visit_type_macro","visit_type_macro","visit_type_macro","visit_type_never","visit_type_never","visit_type_never","visit_type_param","visit_type_param","visit_type_param","visit_type_param_bound","visit_type_param_bound","visit_type_param_bound","visit_type_paren","visit_type_paren","visit_type_paren","visit_type_path","visit_type_path","visit_type_path","visit_type_ptr","visit_type_ptr","visit_type_ptr","visit_type_reference","visit_type_reference","visit_type_reference","visit_type_slice","visit_type_slice","visit_type_slice","visit_type_trait_object","visit_type_trait_object","visit_type_trait_object","visit_type_tuple","visit_type_tuple","visit_type_tuple","visit_un_op","visit_un_op","visit_un_op","visit_use_glob","visit_use_glob","visit_use_glob","visit_use_group","visit_use_group","visit_use_group","visit_use_name","visit_use_name","visit_use_name","visit_use_path","visit_use_path","visit_use_path","visit_use_rename","visit_use_rename","visit_use_rename","visit_use_tree","visit_use_tree","visit_use_tree","visit_variadic","visit_variadic","visit_variadic","visit_variant","visit_variant","visit_variant","visit_vis_crate","visit_vis_crate","visit_vis_crate","visit_vis_public","visit_vis_public","visit_vis_public","visit_vis_restricted","visit_vis_restricted","visit_vis_restricted","visit_visibility","visit_visibility","visit_visibility","visit_where_clause","visit_where_clause","visit_where_clause","visit_where_predicate","visit_where_predicate","visit_where_predicate","VisitMut","visit_abi_mut","visit_abi_mut","visit_abi_mut","visit_angle_bracketed_generic_arguments_mut","visit_angle_bracketed_generic_arguments_mut","visit_angle_bracketed_generic_arguments_mut","visit_arm_mut","visit_arm_mut","visit_arm_mut","visit_attr_style_mut","visit_attr_style_mut","visit_attr_style_mut","visit_attribute_mut","visit_attribute_mut","visit_attribute_mut","visit_bare_fn_arg_mut","visit_bare_fn_arg_mut","visit_bare_fn_arg_mut","visit_bin_op_mut","visit_bin_op_mut","visit_bin_op_mut","visit_binding_mut","visit_binding_mut","visit_binding_mut","visit_block_mut","visit_block_mut","visit_block_mut","visit_bound_lifetimes_mut","visit_bound_lifetimes_mut","visit_bound_lifetimes_mut","visit_const_param_mut","visit_const_param_mut","visit_const_param_mut","visit_constraint_mut","visit_constraint_mut","visit_constraint_mut","visit_data_enum_mut","visit_data_enum_mut","visit_data_enum_mut","visit_data_mut","visit_data_mut","visit_data_mut","visit_data_struct_mut","visit_data_struct_mut","visit_data_struct_mut","visit_data_union_mut","visit_data_union_mut","visit_data_union_mut","visit_derive_input_mut","visit_derive_input_mut","visit_derive_input_mut","visit_expr_array_mut","visit_expr_array_mut","visit_expr_array_mut","visit_expr_assign_mut","visit_expr_assign_mut","visit_expr_assign_mut","visit_expr_assign_op_mut","visit_expr_assign_op_mut","visit_expr_assign_op_mut","visit_expr_async_mut","visit_expr_async_mut","visit_expr_async_mut","visit_expr_await_mut","visit_expr_await_mut","visit_expr_await_mut","visit_expr_binary_mut","visit_expr_binary_mut","visit_expr_binary_mut","visit_expr_block_mut","visit_expr_block_mut","visit_expr_block_mut","visit_expr_box_mut","visit_expr_box_mut","visit_expr_box_mut","visit_expr_break_mut","visit_expr_break_mut","visit_expr_break_mut","visit_expr_call_mut","visit_expr_call_mut","visit_expr_call_mut","visit_expr_cast_mut","visit_expr_cast_mut","visit_expr_cast_mut","visit_expr_closure_mut","visit_expr_closure_mut","visit_expr_closure_mut","visit_expr_continue_mut","visit_expr_continue_mut","visit_expr_continue_mut","visit_expr_field_mut","visit_expr_field_mut","visit_expr_field_mut","visit_expr_for_loop_mut","visit_expr_for_loop_mut","visit_expr_for_loop_mut","visit_expr_group_mut","visit_expr_group_mut","visit_expr_group_mut","visit_expr_if_mut","visit_expr_if_mut","visit_expr_if_mut","visit_expr_index_mut","visit_expr_index_mut","visit_expr_index_mut","visit_expr_let_mut","visit_expr_let_mut","visit_expr_let_mut","visit_expr_lit_mut","visit_expr_lit_mut","visit_expr_lit_mut","visit_expr_loop_mut","visit_expr_loop_mut","visit_expr_loop_mut","visit_expr_macro_mut","visit_expr_macro_mut","visit_expr_macro_mut","visit_expr_match_mut","visit_expr_match_mut","visit_expr_match_mut","visit_expr_method_call_mut","visit_expr_method_call_mut","visit_expr_method_call_mut","visit_expr_mut","visit_expr_mut","visit_expr_mut","visit_expr_paren_mut","visit_expr_paren_mut","visit_expr_paren_mut","visit_expr_path_mut","visit_expr_path_mut","visit_expr_path_mut","visit_expr_range_mut","visit_expr_range_mut","visit_expr_range_mut","visit_expr_reference_mut","visit_expr_reference_mut","visit_expr_reference_mut","visit_expr_repeat_mut","visit_expr_repeat_mut","visit_expr_repeat_mut","visit_expr_return_mut","visit_expr_return_mut","visit_expr_return_mut","visit_expr_struct_mut","visit_expr_struct_mut","visit_expr_struct_mut","visit_expr_try_block_mut","visit_expr_try_block_mut","visit_expr_try_block_mut","visit_expr_try_mut","visit_expr_try_mut","visit_expr_try_mut","visit_expr_tuple_mut","visit_expr_tuple_mut","visit_expr_tuple_mut","visit_expr_type_mut","visit_expr_type_mut","visit_expr_type_mut","visit_expr_unary_mut","visit_expr_unary_mut","visit_expr_unary_mut","visit_expr_unsafe_mut","visit_expr_unsafe_mut","visit_expr_unsafe_mut","visit_expr_while_mut","visit_expr_while_mut","visit_expr_while_mut","visit_expr_yield_mut","visit_expr_yield_mut","visit_expr_yield_mut","visit_field_mut","visit_field_mut","visit_field_mut","visit_field_pat_mut","visit_field_pat_mut","visit_field_pat_mut","visit_field_value_mut","visit_field_value_mut","visit_field_value_mut","visit_fields_mut","visit_fields_mut","visit_fields_mut","visit_fields_named_mut","visit_fields_named_mut","visit_fields_named_mut","visit_fields_unnamed_mut","visit_fields_unnamed_mut","visit_fields_unnamed_mut","visit_file_mut","visit_file_mut","visit_file_mut","visit_fn_arg_mut","visit_fn_arg_mut","visit_fn_arg_mut","visit_foreign_item_fn_mut","visit_foreign_item_fn_mut","visit_foreign_item_fn_mut","visit_foreign_item_macro_mut","visit_foreign_item_macro_mut","visit_foreign_item_macro_mut","visit_foreign_item_mut","visit_foreign_item_mut","visit_foreign_item_mut","visit_foreign_item_static_mut","visit_foreign_item_static_mut","visit_foreign_item_static_mut","visit_foreign_item_type_mut","visit_foreign_item_type_mut","visit_foreign_item_type_mut","visit_generic_argument_mut","visit_generic_argument_mut","visit_generic_argument_mut","visit_generic_method_argument_mut","visit_generic_method_argument_mut","visit_generic_method_argument_mut","visit_generic_param_mut","visit_generic_param_mut","visit_generic_param_mut","visit_generics_mut","visit_generics_mut","visit_generics_mut","visit_ident_mut","visit_ident_mut","visit_ident_mut","visit_impl_item_const_mut","visit_impl_item_const_mut","visit_impl_item_const_mut","visit_impl_item_macro_mut","visit_impl_item_macro_mut","visit_impl_item_macro_mut","visit_impl_item_method_mut","visit_impl_item_method_mut","visit_impl_item_method_mut","visit_impl_item_mut","visit_impl_item_mut","visit_impl_item_mut","visit_impl_item_type_mut","visit_impl_item_type_mut","visit_impl_item_type_mut","visit_index_mut","visit_index_mut","visit_index_mut","visit_item_const_mut","visit_item_const_mut","visit_item_const_mut","visit_item_enum_mut","visit_item_enum_mut","visit_item_enum_mut","visit_item_extern_crate_mut","visit_item_extern_crate_mut","visit_item_extern_crate_mut","visit_item_fn_mut","visit_item_fn_mut","visit_item_fn_mut","visit_item_foreign_mod_mut","visit_item_foreign_mod_mut","visit_item_foreign_mod_mut","visit_item_impl_mut","visit_item_impl_mut","visit_item_impl_mut","visit_item_macro2_mut","visit_item_macro2_mut","visit_item_macro2_mut","visit_item_macro_mut","visit_item_macro_mut","visit_item_macro_mut","visit_item_mod_mut","visit_item_mod_mut","visit_item_mod_mut","visit_item_mut","visit_item_mut","visit_item_mut","visit_item_static_mut","visit_item_static_mut","visit_item_static_mut","visit_item_struct_mut","visit_item_struct_mut","visit_item_struct_mut","visit_item_trait_alias_mut","visit_item_trait_alias_mut","visit_item_trait_alias_mut","visit_item_trait_mut","visit_item_trait_mut","visit_item_trait_mut","visit_item_type_mut","visit_item_type_mut","visit_item_type_mut","visit_item_union_mut","visit_item_union_mut","visit_item_union_mut","visit_item_use_mut","visit_item_use_mut","visit_item_use_mut","visit_label_mut","visit_label_mut","visit_label_mut","visit_lifetime_def_mut","visit_lifetime_def_mut","visit_lifetime_def_mut","visit_lifetime_mut","visit_lifetime_mut","visit_lifetime_mut","visit_lit_bool_mut","visit_lit_bool_mut","visit_lit_bool_mut","visit_lit_byte_mut","visit_lit_byte_mut","visit_lit_byte_mut","visit_lit_byte_str_mut","visit_lit_byte_str_mut","visit_lit_byte_str_mut","visit_lit_char_mut","visit_lit_char_mut","visit_lit_char_mut","visit_lit_float_mut","visit_lit_float_mut","visit_lit_float_mut","visit_lit_int_mut","visit_lit_int_mut","visit_lit_int_mut","visit_lit_mut","visit_lit_mut","visit_lit_mut","visit_lit_str_mut","visit_lit_str_mut","visit_lit_str_mut","visit_local_mut","visit_local_mut","visit_local_mut","visit_macro_delimiter_mut","visit_macro_delimiter_mut","visit_macro_delimiter_mut","visit_macro_mut","visit_macro_mut","visit_macro_mut","visit_member_mut","visit_member_mut","visit_member_mut","visit_meta_list_mut","visit_meta_list_mut","visit_meta_list_mut","visit_meta_mut","visit_meta_mut","visit_meta_mut","visit_meta_name_value_mut","visit_meta_name_value_mut","visit_meta_name_value_mut","visit_method_turbofish_mut","visit_method_turbofish_mut","visit_method_turbofish_mut","visit_nested_meta_mut","visit_nested_meta_mut","visit_nested_meta_mut","visit_parenthesized_generic_arguments_mut","visit_parenthesized_generic_arguments_mut","visit_parenthesized_generic_arguments_mut","visit_pat_box_mut","visit_pat_box_mut","visit_pat_box_mut","visit_pat_ident_mut","visit_pat_ident_mut","visit_pat_ident_mut","visit_pat_lit_mut","visit_pat_lit_mut","visit_pat_lit_mut","visit_pat_macro_mut","visit_pat_macro_mut","visit_pat_macro_mut","visit_pat_mut","visit_pat_mut","visit_pat_mut","visit_pat_or_mut","visit_pat_or_mut","visit_pat_or_mut","visit_pat_path_mut","visit_pat_path_mut","visit_pat_path_mut","visit_pat_range_mut","visit_pat_range_mut","visit_pat_range_mut","visit_pat_reference_mut","visit_pat_reference_mut","visit_pat_reference_mut","visit_pat_rest_mut","visit_pat_rest_mut","visit_pat_rest_mut","visit_pat_slice_mut","visit_pat_slice_mut","visit_pat_slice_mut","visit_pat_struct_mut","visit_pat_struct_mut","visit_pat_struct_mut","visit_pat_tuple_mut","visit_pat_tuple_mut","visit_pat_tuple_mut","visit_pat_tuple_struct_mut","visit_pat_tuple_struct_mut","visit_pat_tuple_struct_mut","visit_pat_type_mut","visit_pat_type_mut","visit_pat_type_mut","visit_pat_wild_mut","visit_pat_wild_mut","visit_pat_wild_mut","visit_path_arguments_mut","visit_path_arguments_mut","visit_path_arguments_mut","visit_path_mut","visit_path_mut","visit_path_mut","visit_path_segment_mut","visit_path_segment_mut","visit_path_segment_mut","visit_predicate_eq_mut","visit_predicate_eq_mut","visit_predicate_eq_mut","visit_predicate_lifetime_mut","visit_predicate_lifetime_mut","visit_predicate_lifetime_mut","visit_predicate_type_mut","visit_predicate_type_mut","visit_predicate_type_mut","visit_qself_mut","visit_qself_mut","visit_qself_mut","visit_range_limits_mut","visit_range_limits_mut","visit_range_limits_mut","visit_receiver_mut","visit_receiver_mut","visit_receiver_mut","visit_return_type_mut","visit_return_type_mut","visit_return_type_mut","visit_signature_mut","visit_signature_mut","visit_signature_mut","visit_span_mut","visit_span_mut","visit_span_mut","visit_stmt_mut","visit_stmt_mut","visit_stmt_mut","visit_trait_bound_modifier_mut","visit_trait_bound_modifier_mut","visit_trait_bound_modifier_mut","visit_trait_bound_mut","visit_trait_bound_mut","visit_trait_bound_mut","visit_trait_item_const_mut","visit_trait_item_const_mut","visit_trait_item_const_mut","visit_trait_item_macro_mut","visit_trait_item_macro_mut","visit_trait_item_macro_mut","visit_trait_item_method_mut","visit_trait_item_method_mut","visit_trait_item_method_mut","visit_trait_item_mut","visit_trait_item_mut","visit_trait_item_mut","visit_trait_item_type_mut","visit_trait_item_type_mut","visit_trait_item_type_mut","visit_type_array_mut","visit_type_array_mut","visit_type_array_mut","visit_type_bare_fn_mut","visit_type_bare_fn_mut","visit_type_bare_fn_mut","visit_type_group_mut","visit_type_group_mut","visit_type_group_mut","visit_type_impl_trait_mut","visit_type_impl_trait_mut","visit_type_impl_trait_mut","visit_type_infer_mut","visit_type_infer_mut","visit_type_infer_mut","visit_type_macro_mut","visit_type_macro_mut","visit_type_macro_mut","visit_type_mut","visit_type_mut","visit_type_mut","visit_type_never_mut","visit_type_never_mut","visit_type_never_mut","visit_type_param_bound_mut","visit_type_param_bound_mut","visit_type_param_bound_mut","visit_type_param_mut","visit_type_param_mut","visit_type_param_mut","visit_type_paren_mut","visit_type_paren_mut","visit_type_paren_mut","visit_type_path_mut","visit_type_path_mut","visit_type_path_mut","visit_type_ptr_mut","visit_type_ptr_mut","visit_type_ptr_mut","visit_type_reference_mut","visit_type_reference_mut","visit_type_reference_mut","visit_type_slice_mut","visit_type_slice_mut","visit_type_slice_mut","visit_type_trait_object_mut","visit_type_trait_object_mut","visit_type_trait_object_mut","visit_type_tuple_mut","visit_type_tuple_mut","visit_type_tuple_mut","visit_un_op_mut","visit_un_op_mut","visit_un_op_mut","visit_use_glob_mut","visit_use_glob_mut","visit_use_glob_mut","visit_use_group_mut","visit_use_group_mut","visit_use_group_mut","visit_use_name_mut","visit_use_name_mut","visit_use_name_mut","visit_use_path_mut","visit_use_path_mut","visit_use_path_mut","visit_use_rename_mut","visit_use_rename_mut","visit_use_rename_mut","visit_use_tree_mut","visit_use_tree_mut","visit_use_tree_mut","visit_variadic_mut","visit_variadic_mut","visit_variadic_mut","visit_variant_mut","visit_variant_mut","visit_variant_mut","visit_vis_crate_mut","visit_vis_crate_mut","visit_vis_crate_mut","visit_vis_public_mut","visit_vis_public_mut","visit_vis_public_mut","visit_vis_restricted_mut","visit_vis_restricted_mut","visit_vis_restricted_mut","visit_visibility_mut","visit_visibility_mut","visit_visibility_mut","visit_where_clause_mut","visit_where_clause_mut","visit_where_clause_mut","visit_where_predicate_mut","visit_where_predicate_mut","visit_where_predicate_mut"],"q":["synsyn::AttrStyle","syn::BinOp","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Data","","","syn::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Fields","","syn::FnArg","","syn::ForeignItem","","","","","syn::GenericArgument","","","","","syn::GenericMethodArgument","","syn::GenericParam","","","syn::ImplItem","","","","","syn::Item","","","","","","","","","","","","","","","","","syn::Lit","","","","","","","","syn::MacroDelimiter","","","syn::Member","","syn::Meta","","","syn::NestedMeta","","syn::Pat","","","","","","","","","","","","","","","","syn::PathArguments","","syn::RangeLimits","","syn::ReturnType","","syn::Stmt","","","","","syn::StrStyle","syn::TraitBoundModifier","syn::TraitItem","","","","","syn::Type","","","","","","","","","","","","","","","syn::TypeParamBound","","syn::UnOp","","","syn::UseTree","","","","","syn::Visibility","","","syn::WherePredicate","","","syn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::punctuated::Pair","","","syn::spanned","","syn::tokensyn::visitsyn::visit_mutd":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in â€¦","One arm of a <code>match</code> expression: <code>0...10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and â€¦","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation â€¦","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in â€¦","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: â€¦","A binding (equality constraint) on an associated type: the â€¦","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","A box pattern: <code>box v</code>.","","","A <code>break</code>, with an optional label to break and an optional â€¦","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input â€¦","A Rust expression.","Expr without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional â€¦","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple â€¦","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: â€¦","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic â€¦","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: â€¦","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple â€¦","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as â€¦","Unnamed fields of a tuple struct or tuple variant such as â€¦","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: â€¦","A foreign function in an <code>extern</code> block.","An argument in a function signature: the <code>n: usize</code> in â€¦","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","An individual generic argument to a method, like <code>T</code>.","A generic type parameter, lifetime, or const generic: â€¦","Lifetimes and type parameters attached to a declaration of â€¦","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","A word of Rust code, which may be a keyword or legal â€¦","A pattern that binds a new variable: â€¦","An <code>if</code> expression with an optional <code>else</code> block: â€¦","An impl block providing trait or associated items: â€¦","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","A macro invocation within an impl block.","A method within an impl block.","An associated type within an impl block.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a â€¦","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: â€¦","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or â€¦","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: â€¦","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: â€¦","A macro invocation, which includes <code>macro_rules!</code> â€¦","A 2.0-style declarative macro introduced by the <code>macro</code> â€¦","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>â€¦","A type alias: â€¦","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like â€¦","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in â€¦","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> â€¦","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in the type position.","A macro in pattern position.","A 2.0-style declarative macro introduced by the <code>macro</code> â€¦","A grouping token that surrounds a macro body: <code>m!(...)</code> or â€¦","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct â€¦","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> â€¦","A structured list within an attribute, like â€¦","A name-value pair within an attribute, like â€¦","A trait method within the definition of a trait.","A method within an impl block.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>::&lt;&gt;</code> explicit type parameters passed to a method call: â€¦","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like â€¦","Named fields of a struct or struct variant such as â€¦","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in â€¦","A pattern in a local binding, function signature, match â€¦","A box pattern: <code>box v</code>.","A pattern that binds a new variable: â€¦","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>â€¦","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: â€¦","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. â€¦","","A path like <code>std::mem::replace</code> possibly containing generic â€¦","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path like <code>std::slice::Iter</code>, optionally qualified with a â€¦","A path pattern like <code>Color::Red</code>, optionally qualified with a","Angle bracketed or parenthesized arguments of a path â€¦","A segment of a path together with any path arguments on â€¦","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: â€¦","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in â€¦","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method, whether taken â€¦","The <code>self</code> argument of an associated method, whether taken â€¦","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A reference pattern: <code>&amp;mut var</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: â€¦","An array literal constructed from one repeated element: â€¦","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A visibility level restricted to some path: <code>pub(self)</code> or â€¦","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","Expression with trailing semicolon.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: â€¦","A dynamically sized slice type: <code>[T]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>â€¦","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A statement, usually ending in a semicolon.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a â€¦","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type â€¦","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>â€¦","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> â€¦","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A macro invocation within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where â€¦","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: â€¦","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A type argument.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: â€¦","A type alias: â€¦","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A particular type is returned.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a â€¦","Indication that a type should be inferred by the compiler: â€¦","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a â€¦","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where â€¦","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as â€¦","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: â€¦","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> â€¦","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by â€¦","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or â€¦","The visibility level of an item: inherited or <code>pub</code> or â€¦","A <code>where</code> clause in a definition: â€¦","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","","Turn a typeâ€™s generics like <code>&lt;X, Y&gt;</code> into a turbofish like â€¦","","","","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to â€¦","","","","","","","","Parse a set of square brackets and expose their content to â€¦","","A stably addressed token buffer supporting efficient â€¦he colon in <code>Struct { x: x }</code>. If written in shorthand like â€¦","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant â€¦","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the â€¦","","","","","","","","","","","Define a type that supports parsing and printing a given â€¦","Define a type that supports parsing and printing a â€¦","Data within the struct or enum.","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of the field.","","","","","Extension traits to provide parsing methods on foreign â€¦","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Generics required to complete the definition.","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","Name of the struct or enum.","","","","","","","","","","","","","","","","<code>(A, B)</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the â€¦","","","","","","Get an iterator over the borrowed <code>Field</code> items in this â€¦","Get an iterator over the mutably borrowed <code>Field</code> items in â€¦","","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime â€¦","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the â€¦","","","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one â€¦","","","Name or index of the field.","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the â€¦","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>â€¦","","","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to â€¦","Parsing interface for parsing a token stream into a syntax â€¦","Parse tokens of source code into the chosen syntax tree â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax â€¦","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given â€¦","Parse the tokens within the macro invocationâ€™s â€¦","Parse the tokens within the macro invocationâ€™s â€¦","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a â€¦","Parses the content of the attribute, consisting of the â€¦","Parse a <code>Path</code> containing no path arguments on any of its â€¦","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> â€¦","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree â€¦","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, â€¦","An alternative to the primary <code>Expr::parse</code> parser (from the â€¦","","","","","","","","","","","","Returns the identifier that begins this structured meta â€¦","","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by â€¦","","","","","","A methodâ€™s <code>self</code> receiver, such as <code>&amp;self</code> or â€¦","","","","","","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its â€¦","","","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents â€¦","Split a typeâ€™s generics into the pieces required for implâ€¦","","","","","Statements in a blockokens representing Rust punctuation, keywords, and â€¦","","","","","","","","","","Trait this impl implementsype of the fieldeturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type â€¦","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Visibility of the field.","","","","","","","","","","","","","","","","","","","","Visibility of the struct or enum.","Syntax tree traversal to walk a shared borrow of a syntax â€¦","Syntax tree traversal to mutate an exclusive borrow of a â€¦","","","","In some positions, types may not contain the <code>+</code> character, â€¦cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, â€¦","Creates a cursor referencing the first token in the buffer â€¦","","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end â€¦","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given â€¦","If the cursor is pointing at a <code>Ident</code>, returns it along â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along â€¦","If the cursor is pointing at a <code>Literal</code>, return it along â€¦","Creates a <code>TokenBuffer</code> containing all the tokens from the â€¦","Creates a <code>TokenBuffer</code> containing all the tokens from the â€¦","If the cursor is pointing at a <code>Punct</code>, returns it along â€¦","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>â€¦","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along â€¦","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 â€¦","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: â€¦","Strips the raw marker <code>r#</code>, if any, from the beginning of an â€¦","Error returned when a Syn parser cannot parse the input â€¦","Support for checking the next token in a stream to decide â€¦","An empty syntax tree node that consumes no tokens when â€¦","","Parsing interface implemented by all types that can be â€¦","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax â€¦","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree â€¦","","","","","Add another error message to self such that when â€¦","Provides low-level access to the token representation â€¦","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse â€¦","Triggers an error at the current position of the parse â€¦","Triggers an error at the current position of the parse â€¦","","","","","","Forks a parse stream so that parsing tokens out of either â€¦","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this â€¦","Usually the <code>ParseStream::error</code> method will be used â€¦","Creates an error with the specified message spanning the â€¦","","Parses a syntax tree node of type <code>T</code>, advancing the â€¦","Parse tokens of source code into the chosen syntax tree â€¦","","Parse a proc-macro2 token stream into the chosen syntax â€¦","Parse a string of Rust code into the chosen syntax tree â€¦","Parses zero or more occurrences of <code>T</code> separated by â€¦","Looks at the next token in the parse stream to determine â€¦","Looks at the next token in the parse stream to determine â€¦","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","Returns the <code>Span</code> of the next token in the parse stream, or â€¦","The source location of the error.","Speculatively parses tokens from this parse stream, â€¦","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative â€¦","Advance this parse stream to the position of a forked â€¦","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its â€¦","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type â€¦","A punctuated sequence of syntax tree nodes of type <code>T</code> â€¦","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making â€¦","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has â€¦","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as â€¦","Produces this punctuated pair as a tuple of syntax tree â€¦","Extracts the syntax tree node from this punctuated pair, â€¦","Determines whether this punctuated sequence is empty, â€¦","Returns an iterator over borrowed syntax tree nodes of â€¦","Returns an iterator over mutably borrowed syntax tree â€¦","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated â€¦","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an â€¦","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as â€¦","Returns an iterator over the contents of this sequence as â€¦","Parses one or more occurrences of <code>T</code> separated by â€¦","Parses one or more occurrences of <code>T</code> using the given parse â€¦","Parses zero or more occurrences of <code>T</code> separated by â€¦","Parses zero or more occurrences of <code>T</code> using the given parse â€¦","Removes the last punctuated pair from this sequence, or â€¦","Borrows the punctuation from this punctuated pair, unless â€¦","Mutably borrows the punctuation from this punctuated pair, â€¦","Appends a syntax tree node onto the end of this punctuated â€¦","Appends a trailing punctuation onto the end of this â€¦","Appends a syntax tree node onto the end of this punctuated â€¦","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated â€¦","","","","A trait that can provide the <code>Span</code> of the complete contents â€¦","Returns a <code>Span</code> covering the complete contents of this â€¦","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntax tree traversal to walk a shared borrow of a syntax â€¦yntax tree traversal to mutate an exclusive borrow of a â€¦i":[0,1,1,1,2,0,0,3,4,3,3,3,0,0,0,3,4,0,0,3,0,5,1,1,1,1,1,1,0,3,6,0,3,7,8,8,3,6,6,3,3,6,9,3,10,11,12,13,14,5,0,0,5,3,15,16,0,0,0,0,17,18,0,1,1,12,19,20,1,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,3,0,0,0,0,0,0,6,12,22,0,3,0,0,0,0,0,12,1,0,0,0,0,23,3,23,4,1,9,0,7,3,12,0,0,0,0,0,0,4,0,3,4,16,24,6,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,11,25,20,5,0,26,0,27,3,7,0,0,0,0,0,0,0,0,21,3,1,0,3,12,22,13,14,4,7,12,0,3,28,0,0,27,0,0,13,14,3,0,12,1,1,23,26,29,30,1,18,0,4,28,2,18,1,7,24,3,8,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,3,23,4,7,0,0,0,0,0,4,16,0,3,7,0,15,0,31,3,4,7,1,1,23,3,7,16,0,3,0,21,1,1,1,1,0,4,7,12,22,0,6,0,3,12,19,7,1,1,0,25,12,12,0,0,0,0,0,0,0,4,3,3,3,4,7,7,0,0,3,10,11,20,12,22,13,14,17,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,3,12,19,29,29,30,3,12,0,0,0,0,0,0,0,0,3,12,22,13,14,6,4,7,0,0,0,0,0,0,3,7,3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,33,51,52,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,100,56,138,139,56,62,140,141,140,141,49,58,78,82,93,114,50,63,69,83,86,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,159,87,88,159,160,101,111,177,184,189,59,123,148,44,76,91,32,94,100,165,172,174,132,0,145,53,66,74,175,183,131,0,60,0,124,49,50,127,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,38,41,162,42,52,80,85,154,87,88,89,159,160,90,98,100,106,109,111,113,135,137,189,86,65,83,155,155,89,90,109,113,182,33,97,61,151,92,0,0,119,155,156,2,87,89,109,110,111,94,113,114,115,138,51,76,130,132,56,62,40,122,184,175,176,180,182,36,183,53,79,185,131,133,65,91,172,142,142,38,30,153,147,54,67,87,89,161,90,98,101,102,113,115,188,59,60,45,63,64,66,67,44,71,35,74,75,77,80,81,84,85,90,98,113,125,0,92,186,86,51,76,99,103,171,173,132,142,142,142,38,30,153,140,141,33,34,63,156,142,142,142,142,142,142,142,143,48,144,38,145,24,26,26,26,26,146,147,27,27,27,51,29,29,29,148,149,52,16,16,16,16,150,151,152,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,30,30,153,153,41,10,85,154,86,9,155,11,11,11,11,87,87,88,89,156,25,25,25,157,28,158,20,20,20,20,159,160,161,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,23,23,23,23,23,162,163,46,164,165,22,22,22,22,22,105,106,107,108,13,13,13,13,13,109,110,111,112,14,14,14,14,14,113,114,115,116,33,31,31,31,117,118,6,6,6,6,6,6,6,6,166,167,168,169,140,140,141,141,170,15,138,8,119,119,119,119,19,19,19,19,171,172,173,1,18,174,21,120,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,187,43,43,2,5,42,188,189,190,47,73,39,91,94,99,100,101,102,103,111,115,33,119,187,64,176,41,155,156,42,47,86,142,38,30,153,129,38,51,52,87,89,90,91,92,95,96,97,98,99,100,101,102,103,162,163,46,106,107,109,111,113,115,33,119,124,43,188,189,65,94,177,152,63,66,153,120,50,33,34,190,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,29,29,29,29,2,187,32,94,100,165,118,29,29,58,60,61,63,69,83,104,187,127,54,55,57,29,74,175,67,120,161,117,88,160,36,155,156,157,159,34,155,73,129,147,68,129,69,41,155,156,42,47,70,95,108,112,116,179,126,96,155,44,62,85,137,40,97,157,50,35,98,106,117,182,36,124,37,154,186,121,148,146,142,38,88,6,166,167,168,169,140,141,170,142,55,57,81,50,50,50,33,34,190,155,146,149,152,39,40,71,79,157,33,34,180,185,133,190,0,0,0,142,38,26,146,147,27,51,148,149,16,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,166,167,168,169,140,141,170,138,119,1,18,174,21,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,17,7,187,43,5,42,188,189,190,0,142,145,145,138,138,0,145,0,145,187,52,145,0,0,0,52,166,174,3,142,38,63,67,86,120,123,37,134,135,137,26,145,146,147,152,72,76,157,138,181,128,132,134,47,145,158,150,152,0,72,181,128,77,35,33,40,117,92,46,76,75,161,54,55,57,96,187,117,94,97,74,90,92,95,98,99,101,102,104,105,106,107,108,109,110,111,112,113,115,116,171,120,175,142,38,6,166,167,168,169,140,141,170,118,93,105,110,114,142,142,142,143,48,144,38,38,145,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,153,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,6,166,166,167,167,168,168,169,169,140,140,141,141,170,170,138,119,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,153,170,0,155,164,182,98,106,174,99,171,145,124,6,166,167,168,169,140,141,100,65,73,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,38,140,141,142,143,48,144,38,145,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,119,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,0,166,167,168,169,140,141,170,145,138,94,100,101,104,162,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,78,40,52,45,80,89,90,98,102,106,109,113,115,121,135,188,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,155,155,102,107,111,115,178,136,103,173,149,142,82,94,100,33,34,104,166,167,168,169,170,170,33,34,91,172,52,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,119,0,0,155,158,83,4,177,184,17,84,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,342,343,344,345,346,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,0,0,385,385,386,385,386,386,386,385,386,386,386,385,386,386,386,385,386,386,386,385,385,386,386,386,386,386,385,386,385,386,385,386,0,387,387,387,0,0,0,388,0,0,0,0,0,0,0,389,390,389,391,392,393,390,389,391,392,393,389,391,393,391,393,393,389,391,0,389,390,389,391,393,389,389,393,393,389,390,389,391,392,393,393,390,389,391,392,393,393,393,393,389,389,393,393,394,389,388,392,388,388,389,390,389,389,389,389,393,389,393,391,393,389,393,390,389,391,392,393,390,389,391,392,393,390,389,391,392,393,0,395,396,0,0,0,0,0,0,0,0,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,397,398,400,401,402,396,397,398,400,401,402,396,397,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,398,399,400,401,402,403,397,396,396,397,397,397,397,397,397,398,399,400,401,402,403,397,396,398,399,400,401,402,403,398,399,400,401,402,403,397,397,397,397,397,397,397,396,396,397,397,397,398,399,400,401,402,403,397,396,397,398,400,401,402,396,397,396,397,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,396,396,404,405,404,0,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,506,507,508,509,407,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,0,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511,0,511,511],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["typegenerics",3]],["turbofish",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["litint",3]],["str",0]],[[["litfloat",3]],["str",0]],[[["litint",3]],["result",6]],[[["litfloat",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3]],["ident",3]],[[["implgenerics",3]],["implgenerics",3]],[[["typegenerics",3]],["typegenerics",3]],[[["turbofish",3]],["turbofish",3]],[[["lifetime",3]],["lifetime",3]],[[["attribute",3]],["attribute",3]],[[["attrstyle",4]],["attrstyle",4]],[[["meta",4]],["meta",4]],[[["metalist",3]],["metalist",3]],[[["metanamevalue",3]],["metanamevalue",3]],[[["nestedmeta",4]],["nestedmeta",4]],[[["variant",3]],["variant",3]],[[["fields",4]],["fields",4]],[[["fieldsnamed",3]],["fieldsnamed",3]],[[["fieldsunnamed",3]],["fieldsunnamed",3]],[[["field",3]],["field",3]],[[["visibility",4]],["visibility",4]],[[["vispublic",3]],["vispublic",3]],[[["viscrate",3]],["viscrate",3]],[[["visrestricted",3]],["visrestricted",3]],[[["expr",4]],["expr",4]],[[["exprarray",3]],["exprarray",3]],[[["exprassign",3]],["exprassign",3]],[[["exprassignop",3]],["exprassignop",3]],[[["exprasync",3]],["exprasync",3]],[[["exprawait",3]],["exprawait",3]],[[["exprbinary",3]],["exprbinary",3]],[[["exprblock",3]],["exprblock",3]],[[["exprbox",3]],["exprbox",3]],[[["exprbreak",3]],["exprbreak",3]],[[["exprcall",3]],["exprcall",3]],[[["exprcast",3]],["exprcast",3]],[[["exprclosure",3]],["exprclosure",3]],[[["exprcontinue",3]],["exprcontinue",3]],[[["exprfield",3]],["exprfield",3]],[[["exprforloop",3]],["exprforloop",3]],[[["exprgroup",3]],["exprgroup",3]],[[["exprif",3]],["exprif",3]],[[["exprindex",3]],["exprindex",3]],[[["exprlet",3]],["exprlet",3]],[[["exprlit",3]],["exprlit",3]],[[["exprloop",3]],["exprloop",3]],[[["exprmacro",3]],["exprmacro",3]],[[["exprmatch",3]],["exprmatch",3]],[[["exprmethodcall",3]],["exprmethodcall",3]],[[["exprparen",3]],["exprparen",3]],[[["exprpath",3]],["exprpath",3]],[[["exprrange",3]],["exprrange",3]],[[["exprreference",3]],["exprreference",3]],[[["exprrepeat",3]],["exprrepeat",3]],[[["exprreturn",3]],["exprreturn",3]],[[["exprstruct",3]],["exprstruct",3]],[[["exprtry",3]],["exprtry",3]],[[["exprtryblock",3]],["exprtryblock",3]],[[["exprtuple",3]],["exprtuple",3]],[[["exprtype",3]],["exprtype",3]],[[["exprunary",3]],["exprunary",3]],[[["exprunsafe",3]],["exprunsafe",3]],[[["exprwhile",3]],["exprwhile",3]],[[["expryield",3]],["expryield",3]],[[["member",4]],["member",4]],[[["index",3]],["index",3]],[[["methodturbofish",3]],["methodturbofish",3]],[[["genericmethodargument",4]],["genericmethodargument",4]],[[["fieldvalue",3]],["fieldvalue",3]],[[["label",3]],["label",3]],[[["arm",3]],["arm",3]],[[["rangelimits",4]],["rangelimits",4]],[[["generics",3]],["generics",3]],[[["genericparam",4]],["genericparam",4]],[[["typeparam",3]],["typeparam",3]],[[["lifetimedef",3]],["lifetimedef",3]],[[["constparam",3]],["constparam",3]],[[["boundlifetimes",3]],["boundlifetimes",3]],[[["typeparambound",4]],["typeparambound",4]],[[["traitbound",3]],["traitbound",3]],[[["traitboundmodifier",4]],["traitboundmodifier",4]],[[["whereclause",3]],["whereclause",3]],[[["wherepredicate",4]],["wherepredicate",4]],[[["predicatetype",3]],["predicatetype",3]],[[["predicatelifetime",3]],["predicatelifetime",3]],[[["predicateeq",3]],["predicateeq",3]],[[["item",4]],["item",4]],[[["itemconst",3]],["itemconst",3]],[[["itemenum",3]],["itemenum",3]],[[["itemexterncrate",3]],["itemexterncrate",3]],[[["itemfn",3]],["itemfn",3]],[[["itemforeignmod",3]],["itemforeignmod",3]],[[["itemimpl",3]],["itemimpl",3]],[[["itemmacro",3]],["itemmacro",3]],[[["itemmacro2",3]],["itemmacro2",3]],[[["itemmod",3]],["itemmod",3]],[[["itemstatic",3]],["itemstatic",3]],[[["itemstruct",3]],["itemstruct",3]],[[["itemtrait",3]],["itemtrait",3]],[[["itemtraitalias",3]],["itemtraitalias",3]],[[["itemtype",3]],["itemtype",3]],[[["itemunion",3]],["itemunion",3]],[[["itemuse",3]],["itemuse",3]],[[["usetree",4]],["usetree",4]],[[["usepath",3]],["usepath",3]],[[["usename",3]],["usename",3]],[[["userename",3]],["userename",3]],[[["useglob",3]],["useglob",3]],[[["usegroup",3]],["usegroup",3]],[[["foreignitem",4]],["foreignitem",4]],[[["foreignitemfn",3]],["foreignitemfn",3]],[[["foreignitemstatic",3]],["foreignitemstatic",3]],[[["foreignitemtype",3]],["foreignitemtype",3]],[[["foreignitemmacro",3]],["foreignitemmacro",3]],[[["traititem",4]],["traititem",4]],[[["traititemconst",3]],["traititemconst",3]],[[["traititemmethod",3]],["traititemmethod",3]],[[["traititemtype",3]],["traititemtype",3]],[[["traititemmacro",3]],["traititemmacro",3]],[[["implitem",4]],["implitem",4]],[[["implitemconst",3]],["implitemconst",3]],[[["implitemmethod",3]],["implitemmethod",3]],[[["implitemtype",3]],["implitemtype",3]],[[["implitemmacro",3]],["implitemmacro",3]],[[["signature",3]],["signature",3]],[[["fnarg",4]],["fnarg",4]],[[["receiver",3]],["receiver",3]],[[["file",3]],["file",3]],[[["lit",4]],["lit",4]],[[["litstr",3]],["litstr",3]],[[["litbytestr",3]],["litbytestr",3]],[[["litbyte",3]],["litbyte",3]],[[["litchar",3]],["litchar",3]],[[["litint",3]],["litint",3]],[[["litfloat",3]],["litfloat",3]],[[["litbool",3]],["litbool",3]],[[["macro",3]],["macro",3]],[[["macrodelimiter",4]],["macrodelimiter",4]],[[["deriveinput",3]],["deriveinput",3]],[[["data",4]],["data",4]],[[["datastruct",3]],["datastruct",3]],[[["dataenum",3]],["dataenum",3]],[[["dataunion",3]],["dataunion",3]],[[["binop",4]],["binop",4]],[[["unop",4]],["unop",4]],[[["block",3]],["block",3]],[[["stmt",4]],["stmt",4]],[[["local",3]],["local",3]],[[["type",4]],["type",4]],[[["typearray",3]],["typearray",3]],[[["typebarefn",3]],["typebarefn",3]],[[["typegroup",3]],["typegroup",3]],[[["typeimpltrait",3]],["typeimpltrait",3]],[[["typeinfer",3]],["typeinfer",3]],[[["typemacro",3]],["typemacro",3]],[[["typenever",3]],["typenever",3]],[[["typeparen",3]],["typeparen",3]],[[["typepath",3]],["typepath",3]],[[["typeptr",3]],["typeptr",3]],[[["typereference",3]],["typereference",3]],[[["typeslice",3]],["typeslice",3]],[[["typetraitobject",3]],["typetraitobject",3]],[[["typetuple",3]],["typetuple",3]],[[["abi",3]],["abi",3]],[[["barefnarg",3]],["barefnarg",3]],[[["variadic",3]],["variadic",3]],[[["returntype",4]],["returntype",4]],[[["pat",4]],["pat",4]],[[["patbox",3]],["patbox",3]],[[["patident",3]],["patident",3]],[[["patlit",3]],["patlit",3]],[[["patmacro",3]],["patmacro",3]],[[["pator",3]],["pator",3]],[[["patpath",3]],["patpath",3]],[[["patrange",3]],["patrange",3]],[[["patreference",3]],["patreference",3]],[[["patrest",3]],["patrest",3]],[[["patslice",3]],["patslice",3]],[[["patstruct",3]],["patstruct",3]],[[["pattuple",3]],["pattuple",3]],[[["pattuplestruct",3]],["pattuplestruct",3]],[[["pattype",3]],["pattype",3]],[[["patwild",3]],["patwild",3]],[[["fieldpat",3]],["fieldpat",3]],[[["path",3]],["path",3]],[[["pathsegment",3]],["pathsegment",3]],[[["patharguments",4]],["patharguments",4]],[[["genericargument",4]],["genericargument",4]],[[["anglebracketedgenericarguments",3]],["anglebracketedgenericarguments",3]],[[["binding",3]],["binding",3]],[[["constraint",3]],["constraint",3]],[[["parenthesizedgenericarguments",3]],["parenthesizedgenericarguments",3]],[[["qself",3]],["qselfident",3],["ident",3]],["ordering",4]],[[["lifetime",3],["lifetime",3]],["ordering",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["generics",3]],["constparams",3]],[[["generics",3]],["constparamsmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["generics",3]],[[],["boundlifetimes",3]],[[],["patharguments",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["",0]],["bool",0]],[[["ident",3],["ident",3]],["bool",0]],[[["lifetime",3],["lifetime",3]],["bool",0]],[[["member",4],["member",4]],["bool",0]],[[["index",3],["index",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["lifetime",3],["formatter",3]],["result",6]],[[["member",4],["formatter",3]],["result",6]],[[["index",3],["formatter",3]],["result",6]],[[["litint",3],["formatter",3]],["result",6]],[[["litfloat",3],["formatter",3]],["result",6]],null,null,null,null,[[["selfvalue",3]],["ident",3]],[[["super",3]],["ident",3]],[[["crate",3]],["ident",3]],[[["extern",3]],["ident",3]],[[["underscore",3]],["ident",3]],[[["selftype",3]],["ident",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["metalist",3]],["meta",4]],[[]],[[["metanamevalue",3]],["meta",4]],[[["path",3]],["meta",4]],[[]],[[]],[[["meta",4]],["nestedmeta",4]],[[]],[[["lit",4]],["nestedmeta",4]],[[]],[[["fieldsunnamed",3]],["fields",4]],[[["fieldsnamed",3]],["fields",4]],[[]],[[]],[[]],[[]],[[["viscrate",3]],["visibility",4]],[[["vispublic",3]],["visibility",4]],[[]],[[["visrestricted",3]],["visibility",4]],[[]],[[]],[[]],[[["exprfield",3]],["expr",4]],[[["exprtry",3]],["expr",4]],[[["exprindex",3]],["expr",4]],[[["exprlet",3]],["expr",4]],[[]],[[["expryield",3]],["expr",4]],[[["exprmatch",3]],["expr",4]],[[["exprwhile",3]],["expr",4]],[[["exprunsafe",3]],["expr",4]],[[["exprunary",3]],["expr",4]],[[["exprlit",3]],["expr",4]],[[["exprbinary",3]],["expr",4]],[[["exprforloop",3]],["expr",4]],[[["exprarray",3]],["expr",4]],[[["exprtype",3]],["expr",4]],[[["exprassign",3]],["expr",4]],[[["exprbox",3]],["expr",4]],[[["exprloop",3]],["expr",4]],[[["exprcontinue",3]],["expr",4]],[[["exprtuple",3]],["expr",4]],[[["exprmacro",3]],["expr",4]],[[["exprtryblock",3]],["expr",4]],[[["exprassignop",3]],["expr",4]],[[["exprgroup",3]],["expr",4]],[[["exprstruct",3]],["expr",4]],[[["exprreturn",3]],["expr",4]],[[["exprawait",3]],["expr",4]],[[["exprmethodcall",3]],["expr",4]],[[["exprclosure",3]],["expr",4]],[[["exprasync",3]],["expr",4]],[[["exprbreak",3]],["expr",4]],[[["exprrepeat",3]],["expr",4]],[[["exprparen",3]],["expr",4]],[[["exprif",3]],["expr",4]],[[["exprcast",3]],["expr",4]],[[["exprreference",3]],["expr",4]],[[["exprrange",3]],["expr",4]],[[["exprblock",3]],["expr",4]],[[["exprcall",3]],["expr",4]],[[["exprpath",3]],["expr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["index",3]],["member",4]],[[["ident",3]],["member",4]],[[]],[[["usize",0]],["member",4]],[[["usize",0]],["index",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["constparam",3]],["genericparam",4]],[[["lifetimedef",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[]],[[["ident",3]],["typeparam",3]],[[]],[[]],[[]],[[["lifetime",3]],["typeparambound",4]],[[["traitbound",3]],["typeparambound",4]],[[]],[[]],[[]],[[]],[[["predicateeq",3]],["wherepredicate",4]],[[]],[[["predicatetype",3]],["wherepredicate",4]],[[["predicatelifetime",3]],["wherepredicate",4]],[[]],[[]],[[]],[[["itemfn",3]],["item",4]],[[["itemenum",3]],["item",4]],[[["itemtraitalias",3]],["item",4]],[[]],[[["itemimpl",3]],["item",4]],[[["itemexterncrate",3]],["item",4]],[[["itemconst",3]],["item",4]],[[["itemtype",3]],["item",4]],[[["itemstatic",3]],["item",4]],[[["deriveinput",3]],["item",4]],[[["itemunion",3]],["item",4]],[[["itemforeignmod",3]],["item",4]],[[["itemmacro",3]],["item",4]],[[["itemuse",3]],["item",4]],[[["itemtrait",3]],["item",4]],[[["itemmacro2",3]],["item",4]],[[["itemstruct",3]],["item",4]],[[["itemmod",3]],["item",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usegroup",3]],["usetree",4]],[[]],[[["usename",3]],["usetree",4]],[[["usepath",3]],["usetree",4]],[[["useglob",3]],["usetree",4]],[[["userename",3]],["usetree",4]],[[]],[[]],[[]],[[]],[[]],[[["foreignitemtype",3]],["foreignitem",4]],[[]],[[["foreignitemfn",3]],["foreignitem",4]],[[["foreignitemmacro",3]],["foreignitem",4]],[[["foreignitemstatic",3]],["foreignitem",4]],[[]],[[]],[[]],[[]],[[["traititemmethod",3]],["traititem",4]],[[]],[[["traititemconst",3]],["traititem",4]],[[["traititemmacro",3]],["traititem",4]],[[["traititemtype",3]],["traititem",4]],[[]],[[]],[[]],[[]],[[["implitemtype",3]],["implitem",4]],[[["implitemmacro",3]],["implitem",4]],[[["implitemmethod",3]],["implitem",4]],[[["implitemconst",3]],["implitem",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pattype",3]],["fnarg",4]],[[["receiver",3]],["fnarg",4]],[[]],[[]],[[["litbool",3]],["lit",4]],[[["litint",3]],["lit",4]],[[["litbyte",3]],["lit",4]],[[]],[[["litfloat",3]],["lit",4]],[[["litbytestr",3]],["lit",4]],[[["litchar",3]],["lit",4]],[[["litstr",3]],["lit",4]],[[]],[[]],[[]],[[]],[[["literal",3]],["litint",3]],[[]],[[["literal",3]],["litfloat",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["itemenum",3]],["deriveinput",3]],[[["itemstruct",3]],["deriveinput",3]],[[["itemunion",3]],["deriveinput",3]],[[]],[[["dataunion",3]],["data",4]],[[["dataenum",3]],["data",4]],[[["datastruct",3]],["data",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typearray",3]],["type",4]],[[["typemacro",3]],["type",4]],[[]],[[["typeparen",3]],["type",4]],[[["typetuple",3]],["type",4]],[[["typepath",3]],["type",4]],[[["typetraitobject",3]],["type",4]],[[["typeslice",3]],["type",4]],[[["typeinfer",3]],["type",4]],[[["typegroup",3]],["type",4]],[[["typenever",3]],["type",4]],[[["typeptr",3]],["type",4]],[[["typereference",3]],["type",4]],[[["typeimpltrait",3]],["type",4]],[[["typebarefn",3]],["type",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["patlit",3]],["pat",4]],[[["patslice",3]],["pat",4]],[[["patrest",3]],["pat",4]],[[["patreference",3]],["pat",4]],[[["patident",3]],["pat",4]],[[["pattype",3]],["pat",4]],[[["patstruct",3]],["pat",4]],[[]],[[["patrange",3]],["pat",4]],[[["patpath",3]],["pat",4]],[[["pattuple",3]],["pat",4]],[[["pator",3]],["pat",4]],[[["patwild",3]],["pat",4]],[[["pattuplestruct",3]],["pat",4]],[[["patbox",3]],["pat",4]],[[["patmacro",3]],["pat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["path",3]],[[]],[[]],[[],["pathsegment",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["path",3]],["option",4,[["ident",3]]]],null,null,null,null,null,null,null,null,[[["ident",3],["",0]]],[[["lifetime",3],["",0]]],[[["member",4],["",0]]],[[["index",3],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fields",4]]],[[["fields",4]]],[[["fields",4]]],[[["fields",4]],["bool",0]],[[["patharguments",4]],["bool",0]],[[["path",3],["",0]],["bool",0]],null,null,null,null,null,[[["fields",4]],["iter",3,[["field",3]]]],[[["fields",4]],["itermut",3,[["field",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["fields",4]],["usize",0]],null,null,null,null,null,[[["receiver",3]],["option",4,[["lifetime",3]]]],null,null,null,[[["generics",3]],["lifetimes",3]],null,null,null,null,[[["generics",3]],["lifetimesmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["generics",3]],["whereclause",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0],["span",3]],["ident",3]],[[["str",0],["span",3]],["lifetime",3]],[[["lifetime",3]],["lifetimedef",3]],[[["literal",3]],["lit",4]],[[["str",0],["span",3]],["litstr",3]],[[["span",3]],["litbytestr",3]],[[["u8",0],["span",3]],["litbyte",3]],[[["char",0],["span",3]],["litchar",3]],[[["str",0],["span",3]],["litint",3]],[[["str",0],["span",3]],["litfloat",3]],[[["bool",0],["span",3]],["litbool",3]],[[["str",0],["span",3]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["ident",3]]]],[[["parsestream",6]],["result",6,[["lifetime",3]]]],[[["parsestream",6]],["result",6,[["meta",4]]]],[[["parsestream",6]],["result",6,[["metalist",3]]]],[[["parsestream",6]],["result",6,[["metanamevalue",3]]]],[[["parsestream",6]],["result",6,[["nestedmeta",4]]]],[[["parsestream",6]],["result",6,[["variant",3]]]],[[["parsestream",6]],["result",6,[["fieldsnamed",3]]]],[[["parsestream",6]],["result",6,[["fieldsunnamed",3]]]],[[["parsestream",6]],["result",6,[["visibility",4]]]],[[["parsestream",6]],["result",6,[["expr",4]]]],[[["parsestream",6]],["result",6,[["exprarray",3]]]],[[["parsestream",6]],["result",6,[["exprassign",3]]]],[[["parsestream",6]],["result",6,[["exprassignop",3]]]],[[["parsestream",6]],["result",6,[["exprasync",3]]]],[[["parsestream",6]],["result",6,[["exprawait",3]]]],[[["parsestream",6]],["result",6,[["exprbinary",3]]]],[[["parsestream",6]],["result",6,[["exprblock",3]]]],[[["parsestream",6]],["result",6,[["exprbox",3]]]],[[["parsestream",6]],["result",6,[["exprbreak",3]]]],[[["parsestream",6]],["result",6,[["exprcall",3]]]],[[["parsestream",6]],["result",6,[["exprcast",3]]]],[[["parsestream",6]],["result",6,[["exprclosure",3]]]],[[["parsestream",6]],["result",6,[["exprcontinue",3]]]],[[["parsestream",6]],["result",6,[["exprfield",3]]]],[[["parsestream",6]],["result",6,[["exprforloop",3]]]],[[["parsestream",6]],["result",6,[["exprif",3]]]],[[["parsestream",6]],["result",6,[["exprindex",3]]]],[[["parsestream",6]],["result",6,[["exprlet",3]]]],[[["parsestream",6]],["result",6,[["exprlit",3]]]],[[["parsestream",6]],["result",6,[["exprloop",3]]]],[[["parsestream",6]],["result",6,[["exprmacro",3]]]],[[["parsestream",6]],["result",6,[["exprmatch",3]]]],[[["parsestream",6]],["result",6,[["exprmethodcall",3]]]],[[["parsestream",6]],["result",6,[["exprparen",3]]]],[[["parsestream",6]],["result",6,[["exprpath",3]]]],[[["parsestream",6]],["result",6,[["exprrange",3]]]],[[["parsestream",6]],["result",6,[["exprreference",3]]]],[[["parsestream",6]],["result",6,[["exprrepeat",3]]]],[[["parsestream",6]],["result",6,[["exprreturn",3]]]],[[["parsestream",6]],["result",6,[["exprstruct",3]]]],[[["parsestream",6]],["result",6,[["exprtry",3]]]],[[["parsestream",6]],["result",6,[["exprtryblock",3]]]],[[["parsestream",6]],["result",6,[["exprtuple",3]]]],[[["parsestream",6]],["result",6,[["exprtype",3]]]],[[["parsestream",6]],["result",6,[["exprunary",3]]]],[[["parsestream",6]],["result",6,[["exprunsafe",3]]]],[[["parsestream",6]],["result",6,[["exprwhile",3]]]],[[["parsestream",6]],["result",6,[["expryield",3]]]],[[["parsestream",6]],["result",6,[["member",4]]]],[[["parsestream",6]],["result",6,[["index",3]]]],[[["parsestream",6]],["result",6,[["methodturbofish",3]]]],[[["parsestream",6]],["result",6,[["genericmethodargument",4]]]],[[["parsestream",6]],["result",6,[["fieldvalue",3]]]],[[["parsestream",6]],["result",6,[["label",3]]]],[[["parsestream",6]],["result",6,[["arm",3]]]],[[["parsestream",6]],["result",6,[["rangelimits",4]]]],[[["parsestream",6]],["result",6,[["generics",3]]]],[[["parsestream",6]],["result",6,[["genericparam",4]]]],[[["parsestream",6]],["result",6,[["typeparam",3]]]],[[["parsestream",6]],["result",6,[["lifetimedef",3]]]],[[["parsestream",6]],["result",6,[["constparam",3]]]],[[["parsestream",6]],["result",6,[["boundlifetimes",3]]]],[[["parsestream",6]],["result",6,[["typeparambound",4]]]],[[["parsestream",6]],["result",6,[["traitbound",3]]]],[[["parsestream",6]],["result",6,[["traitboundmodifier",4]]]],[[["parsestream",6]],["result",6,[["whereclause",3]]]],[[["parsestream",6]],["result",6,[["wherepredicate",4]]]],[[["parsestream",6]],["result",6,[["item",4]]]],[[["parsestream",6]],["result",6,[["itemconst",3]]]],[[["parsestream",6]],["result",6,[["itemenum",3]]]],[[["parsestream",6]],["result",6,[["itemexterncrate",3]]]],[[["parsestream",6]],["result",6,[["itemfn",3]]]],[[["parsestream",6]],["result",6,[["itemforeignmod",3]]]],[[["parsestream",6]],["result",6,[["itemimpl",3]]]],[[["parsestream",6]],["result",6,[["itemmacro",3]]]],[[["parsestream",6]],["result",6,[["itemmacro2",3]]]],[[["parsestream",6]],["result",6,[["itemmod",3]]]],[[["parsestream",6]],["result",6,[["itemstatic",3]]]],[[["parsestream",6]],["result",6,[["itemstruct",3]]]],[[["parsestream",6]],["result",6,[["itemtrait",3]]]],[[["parsestream",6]],["result",6,[["itemtraitalias",3]]]],[[["parsestream",6]],["result",6,[["itemtype",3]]]],[[["parsestream",6]],["result",6,[["itemunion",3]]]],[[["parsestream",6]],["result",6,[["itemuse",3]]]],[[["parsestream",6]],["result",6,[["usetree",4]]]],[[["parsestream",6]],["result",6,[["foreignitem",4]]]],[[["parsestream",6]],["result",6,[["foreignitemfn",3]]]],[[["parsestream",6]],["result",6,[["foreignitemstatic",3]]]],[[["parsestream",6]],["result",6,[["foreignitemtype",3]]]],[[["parsestream",6]],["result",6,[["foreignitemmacro",3]]]],[[["parsestream",6]],["result",6,[["traititem",4]]]],[[["parsestream",6]],["result",6,[["traititemconst",3]]]],[[["parsestream",6]],["result",6,[["traititemmethod",3]]]],[[["parsestream",6]],["result",6,[["traititemtype",3]]]],[[["parsestream",6]],["result",6,[["traititemmacro",3]]]],[[["parsestream",6]],["result",6,[["implitem",4]]]],[[["parsestream",6]],["result",6,[["implitemconst",3]]]],[[["parsestream",6]],["result",6,[["implitemmethod",3]]]],[[["parsestream",6]],["result",6,[["implitemtype",3]]]],[[["parsestream",6]],["result",6,[["implitemmacro",3]]]],[[["parsestream",6]],["result",6,[["signature",3]]]],[[["parsestream",6]],["result",6,[["fnarg",4]]]],[[["parsestream",6]],["result",6,[["receiver",3]]]],[[["parsestream",6]],["result",6,[["file",3]]]],[[["parsestream",6]],["result",6,[["lit",4]]]],[[["parsestream",6]],["result",6,[["litstr",3]]]],[[["litstr",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["litbytestr",3]]]],[[["parsestream",6]],["result",6,[["litbyte",3]]]],[[["parsestream",6]],["result",6,[["litchar",3]]]],[[["parsestream",6]],["result",6,[["litint",3]]]],[[["parsestream",6]],["result",6,[["litfloat",3]]]],[[["parsestream",6]],["result",6,[["litbool",3]]]],[[["parsestream",6]],["result",6,[["macro",3]]]],[[["parsestream",6]],["result",6,[["deriveinput",3]]]],[[["parsestream",6]],["result",6,[["binop",4]]]],[[["parsestream",6]],["result",6,[["unop",4]]]],[[["parsestream",6]],["result",6,[["block",3]]]],[[["parsestream",6]],["result",6,[["stmt",4]]]],[[["parsestream",6]],["result",6,[["type",4]]]],[[["parsestream",6]],["result",6,[["typearray",3]]]],[[["parsestream",6]],["result",6,[["typebarefn",3]]]],[[["parsestream",6]],["result",6,[["typegroup",3]]]],[[["parsestream",6]],["result",6,[["typeimpltrait",3]]]],[[["parsestream",6]],["result",6,[["typeinfer",3]]]],[[["parsestream",6]],["result",6,[["typemacro",3]]]],[[["parsestream",6]],["result",6,[["typenever",3]]]],[[["parsestream",6]],["result",6,[["typeparen",3]]]],[[["parsestream",6]],["result",6,[["typepath",3]]]],[[["parsestream",6]],["result",6,[["typeptr",3]]]],[[["parsestream",6]],["result",6,[["typereference",3]]]],[[["parsestream",6]],["result",6,[["typeslice",3]]]],[[["parsestream",6]],["result",6,[["typetraitobject",3]]]],[[["parsestream",6]],["result",6,[["typetuple",3]]]],[[["parsestream",6]],["result",6,[["abi",3]]]],[[["parsestream",6]],["result",6,[["barefnarg",3]]]],[[["parsestream",6]],["result",6,[["returntype",4]]]],[[["parsestream",6]],["result",6,[["pat",4]]]],[[["parsestream",6]],["result",6,[["path",3]]]],[[["parsestream",6]],["result",6,[["pathsegment",3]]]],[[["parsestream",6]],["result",6,[["genericargument",4]]]],[[["parsestream",6]],["result",6,[["anglebracketedgenericarguments",3]]]],[[["parsestream",6]],["result",6,[["binding",3]]]],[[["parsestream",6]],["result",6,[["constraint",3]]]],[[["parsestream",6]],["result",6,[["parenthesizedgenericarguments",3]]]],[[["tokenstream",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["ident",3]]]],[[["attribute",3]],["result",6,[["parse",8]]]],[[["attribute",3],["parser",8]],["result",6]],[[["macro",3]],["result",6,[["parse",8]]]],[[["macro",3],["parser",8]],["result",6]],[[["str",0]],["result",6,[["file",3]]]],[[["parsestream",6]],["result",6,[["vec",3,[["attribute",3]]]]]],null,[[["attribute",3]],["result",6,[["meta",4]]]],[[["parsestream",6]],["result",6,[["path",3]]]],[[["parsestream",6]],["result",6,[["field",3]]]],[[["parsestream",6]],["result",6,[["vec",3,[["attribute",3]]]]]],null,null,[[["str",0]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["field",3]]]],[[["litstr",3],["parser",8]],["result",6]],[[["parsestream",6]],["result",6,[["vec",3,[["stmt",4]]]]]],[[["parsestream",6]],["result",6,[["expr",4]]]],[[["ident",3],["ident",3]],["option",4,[["ordering",4]]]],[[["lifetime",3],["lifetime",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,[[["meta",4]],["path",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signature",3]],["option",4,[["fnarg",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["span",3]]],[[["lifetime",3],["span",3]]],[[["lit",4],["span",3]]],[[["litstr",3],["span",3]]],[[["litbytestr",3],["span",3]]],[[["litbyte",3],["span",3]]],[[["litchar",3],["span",3]]],[[["litint",3],["span",3]]],[[["litfloat",3],["span",3]]],[[["litbool",3],["span",3]]],null,null,null,null,null,[[["",0]],["span",3]],[[["ident",3]],["option",4,[["span",3]]]],[[["ident",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["lifetime",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["member",4]],["option",4,[["span",3]]]],[[["index",3]],["option",4,[["span",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["lit",4]],["span",3]],[[["litstr",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["litbytestr",3]],["span",3]],[[["",0]],["span",3]],[[["litbyte",3]],["span",3]],[[["",0]],["span",3]],[[["litchar",3]],["span",3]],[[["litint",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["litfloat",3]],["span",3]],[[["",0]],["span",3]],[[["litbool",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],null,null,null,[[["generics",3]]],null,null,null,null,null,null,null,null,null,[[["lit",4]],["str",0]],[[["litstr",3]],["str",0]],[[["litbytestr",3]],["str",0]],[[["litbyte",3]],["str",0]],[[["litchar",3]],["str",0]],[[["litint",3]],["str",0]],[[["litfloat",3]],["str",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["ident",3],["tokenstream",3]]],[[["implgenerics",3],["tokenstream",3]]],[[["typegenerics",3],["tokenstream",3]]],[[["turbofish",3],["tokenstream",3]]],[[["lifetime",3],["tokenstream",3]]],[[["attribute",3],["tokenstream",3]]],[[["meta",4],["tokenstream",3]]],[[["metalist",3],["tokenstream",3]]],[[["metanamevalue",3],["tokenstream",3]]],[[["nestedmeta",4],["tokenstream",3]]],[[["variant",3],["tokenstream",3]]],[[["fields",4],["tokenstream",3]]],[[["fieldsnamed",3],["tokenstream",3]]],[[["fieldsunnamed",3],["tokenstream",3]]],[[["field",3],["tokenstream",3]]],[[["visibility",4],["tokenstream",3]]],[[["vispublic",3],["tokenstream",3]]],[[["viscrate",3],["tokenstream",3]]],[[["visrestricted",3],["tokenstream",3]]],[[["expr",4],["tokenstream",3]]],[[["exprarray",3],["tokenstream",3]]],[[["exprassign",3],["tokenstream",3]]],[[["exprassignop",3],["tokenstream",3]]],[[["exprasync",3],["tokenstream",3]]],[[["exprawait",3],["tokenstream",3]]],[[["exprbinary",3],["tokenstream",3]]],[[["exprblock",3],["tokenstream",3]]],[[["exprbox",3],["tokenstream",3]]],[[["exprbreak",3],["tokenstream",3]]],[[["exprcall",3],["tokenstream",3]]],[[["exprcast",3],["tokenstream",3]]],[[["exprclosure",3],["tokenstream",3]]],[[["exprcontinue",3],["tokenstream",3]]],[[["exprfield",3],["tokenstream",3]]],[[["exprforloop",3],["tokenstream",3]]],[[["exprgroup",3],["tokenstream",3]]],[[["exprif",3],["tokenstream",3]]],[[["exprindex",3],["tokenstream",3]]],[[["exprlet",3],["tokenstream",3]]],[[["exprlit",3],["tokenstream",3]]],[[["exprloop",3],["tokenstream",3]]],[[["exprmacro",3],["tokenstream",3]]],[[["exprmatch",3],["tokenstream",3]]],[[["exprmethodcall",3],["tokenstream",3]]],[[["exprparen",3],["tokenstream",3]]],[[["exprpath",3],["tokenstream",3]]],[[["exprrange",3],["tokenstream",3]]],[[["exprreference",3],["tokenstream",3]]],[[["exprrepeat",3],["tokenstream",3]]],[[["exprreturn",3],["tokenstream",3]]],[[["exprstruct",3],["tokenstream",3]]],[[["exprtry",3],["tokenstream",3]]],[[["exprtryblock",3],["tokenstream",3]]],[[["exprtuple",3],["tokenstream",3]]],[[["exprtype",3],["tokenstream",3]]],[[["exprunary",3],["tokenstream",3]]],[[["exprunsafe",3],["tokenstream",3]]],[[["exprwhile",3],["tokenstream",3]]],[[["expryield",3],["tokenstream",3]]],[[["member",4],["tokenstream",3]]],[[["index",3],["tokenstream",3]]],[[["methodturbofish",3],["tokenstream",3]]],[[["genericmethodargument",4],["tokenstream",3]]],[[["fieldvalue",3],["tokenstream",3]]],[[["label",3],["tokenstream",3]]],[[["arm",3],["tokenstream",3]]],[[["rangelimits",4],["tokenstream",3]]],[[["generics",3],["tokenstream",3]]],[[["genericparam",4],["tokenstream",3]]],[[["typeparam",3],["tokenstream",3]]],[[["lifetimedef",3],["tokenstream",3]]],[[["constparam",3],["tokenstream",3]]],[[["boundlifetimes",3],["tokenstream",3]]],[[["typeparambound",4],["tokenstream",3]]],[[["traitbound",3],["tokenstream",3]]],[[["traitboundmodifier",4],["tokenstream",3]]],[[["whereclause",3],["tokenstream",3]]],[[["wherepredicate",4],["tokenstream",3]]],[[["predicatetype",3],["tokenstream",3]]],[[["predicatelifetime",3],["tokenstream",3]]],[[["predicateeq",3],["tokenstream",3]]],[[["item",4],["tokenstream",3]]],[[["itemconst",3],["tokenstream",3]]],[[["itemenum",3],["tokenstream",3]]],[[["itemexterncrate",3],["tokenstream",3]]],[[["itemfn",3],["tokenstream",3]]],[[["itemforeignmod",3],["tokenstream",3]]],[[["itemimpl",3],["tokenstream",3]]],[[["itemmacro",3],["tokenstream",3]]],[[["itemmacro2",3],["tokenstream",3]]],[[["itemmod",3],["tokenstream",3]]],[[["itemstatic",3],["tokenstream",3]]],[[["itemstruct",3],["tokenstream",3]]],[[["itemtrait",3],["tokenstream",3]]],[[["itemtraitalias",3],["tokenstream",3]]],[[["itemtype",3],["tokenstream",3]]],[[["itemunion",3],["tokenstream",3]]],[[["itemuse",3],["tokenstream",3]]],[[["usetree",4],["tokenstream",3]]],[[["usepath",3],["tokenstream",3]]],[[["usename",3],["tokenstream",3]]],[[["userename",3],["tokenstream",3]]],[[["useglob",3],["tokenstream",3]]],[[["usegroup",3],["tokenstream",3]]],[[["foreignitem",4],["tokenstream",3]]],[[["foreignitemfn",3],["tokenstream",3]]],[[["foreignitemstatic",3],["tokenstream",3]]],[[["foreignitemtype",3],["tokenstream",3]]],[[["foreignitemmacro",3],["tokenstream",3]]],[[["traititem",4],["tokenstream",3]]],[[["traititemconst",3],["tokenstream",3]]],[[["traititemmethod",3],["tokenstream",3]]],[[["traititemtype",3],["tokenstream",3]]],[[["traititemmacro",3],["tokenstream",3]]],[[["implitem",4],["tokenstream",3]]],[[["implitemconst",3],["tokenstream",3]]],[[["implitemmethod",3],["tokenstream",3]]],[[["implitemtype",3],["tokenstream",3]]],[[["implitemmacro",3],["tokenstream",3]]],[[["signature",3],["tokenstream",3]]],[[["fnarg",4],["tokenstream",3]]],[[["receiver",3],["tokenstream",3]]],[[["file",3],["tokenstream",3]]],[[["lit",4],["tokenstream",3]]],[[["litstr",3],["tokenstream",3]]],[[["litbytestr",3],["tokenstream",3]]],[[["litbyte",3],["tokenstream",3]]],[[["litchar",3],["tokenstream",3]]],[[["litint",3],["tokenstream",3]]],[[["litfloat",3],["tokenstream",3]]],[[["litbool",3],["tokenstream",3]]],[[["macro",3],["tokenstream",3]]],[[["deriveinput",3],["tokenstream",3]]],[[["binop",4],["tokenstream",3]]],[[["unop",4],["tokenstream",3]]],[[["block",3],["tokenstream",3]]],[[["stmt",4],["tokenstream",3]]],[[["local",3],["tokenstream",3]]],[[["type",4],["tokenstream",3]]],[[["typearray",3],["tokenstream",3]]],[[["typebarefn",3],["tokenstream",3]]],[[["typegroup",3],["tokenstream",3]]],[[["typeimpltrait",3],["tokenstream",3]]],[[["typeinfer",3],["tokenstream",3]]],[[["typemacro",3],["tokenstream",3]]],[[["typenever",3],["tokenstream",3]]],[[["typeparen",3],["tokenstream",3]]],[[["typepath",3],["tokenstream",3]]],[[["typeptr",3],["tokenstream",3]]],[[["typereference",3],["tokenstream",3]]],[[["typeslice",3],["tokenstream",3]]],[[["typetraitobject",3],["tokenstream",3]]],[[["typetuple",3],["tokenstream",3]]],[[["abi",3],["tokenstream",3]]],[[["barefnarg",3],["tokenstream",3]]],[[["variadic",3],["tokenstream",3]]],[[["returntype",4],["tokenstream",3]]],[[["pat",4],["tokenstream",3]]],[[["patbox",3],["tokenstream",3]]],[[["patident",3],["tokenstream",3]]],[[["patlit",3],["tokenstream",3]]],[[["patmacro",3],["tokenstream",3]]],[[["pator",3],["tokenstream",3]]],[[["patpath",3],["tokenstream",3]]],[[["patrange",3],["tokenstream",3]]],[[["patreference",3],["tokenstream",3]]],[[["patrest",3],["tokenstream",3]]],[[["patslice",3],["tokenstream",3]]],[[["patstruct",3],["tokenstream",3]]],[[["pattuple",3],["tokenstream",3]]],[[["pattuplestruct",3],["tokenstream",3]]],[[["pattype",3],["tokenstream",3]]],[[["patwild",3],["tokenstream",3]]],[[["fieldpat",3],["tokenstream",3]]],[[["path",3],["tokenstream",3]]],[[["pathsegment",3],["tokenstream",3]]],[[["patharguments",4],["tokenstream",3]]],[[["genericargument",4],["tokenstream",3]]],[[["anglebracketedgenericarguments",3],["tokenstream",3]]],[[["binding",3],["tokenstream",3]]],[[["constraint",3],["tokenstream",3]]],[[["parenthesizedgenericarguments",3],["tokenstream",3]]],null,[[["litstr",3]],["literal",3]],[[["litbytestr",3]],["literal",3]],[[["litbyte",3]],["literal",3]],[[["litchar",3]],["literal",3]],[[["litint",3]],["literal",3]],[[["litfloat",3]],["literal",3]],[[["litbool",3]],["ident",3]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["generics",3]],["typeparams",3]],[[["generics",3]],["typeparamsmut",3]],null,null,null,null,null,null,null,null,null,[[["ident",3]],["ident",3]],null,null,null,null,null,null,[[["litstr",3]],["string",3]],[[["litbytestr",3]],["vec",3,[["u8",0]]]],[[["litbyte",3]],["u8",0]],[[["litchar",3]],["char",0]],[[["litbool",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["parsestream",6]],["result",6,[["type",4]]]],[[["parsestream",6]],["result",6,[["typeimpltrait",3]]]],[[["parsestream",6]],["result",6,[["typetraitobject",3]]]],[[["parsestream",6]],["result",6,[["returntype",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenbuffer",3]],["cursor",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cursor",3]],["cursor",3]],[[["",0],["",0]]],[[["tokenbuffer",3]]],[[],["cursor",3]],[[["cursor",3]],["bool",0]],[[["cursor",3],["cursor",3]],["bool",0]],[[]],[[]],[[["cursor",3],["delimiter",4]],["option",4]],[[["cursor",3]],["option",4]],[[]],[[]],[[["cursor",3]],["option",4]],[[["cursor",3]],["option",4]],[[["tokenstream",3]],["tokenbuffer",3]],[[["tokenstream",3]],["tokenbuffer",3]],[[["cursor",3]],["option",4]],[[["cursor",3]],["span",3]],[[["",0]]],[[["cursor",3]],["tokenstream",3]],[[["cursor",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["parsestream",6]],["result",6]],null,[[["",0]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,[[["parsebuffer",3],["parsebuffer",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parsebuffer",3]],["result",6]],[[["stepcursor",3]],["stepcursor",3]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["error",3],["error",3]]],[[["parsebuffer",3]],["cursor",3]],[[["stepcursor",3]]],null,[[["parsebuffer",3]]],[[["lookahead1",3]],["error",3]],[[["parsebuffer",3],["display",8]],["error",3]],[[["stepcursor",3],["display",8]],["error",3]],[[["error",3],["intoiterator",8]]],[[["parsebuffer",3],["formatter",3]],["result",6]],[[["parsebuffer",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["parsebuffer",3]],["parsebuffer",3]],[[]],[[]],[[]],[[]],[[]],[[["lexerror",3]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["tokenstream",3]],[[["error",3]]],[[["error",3]]],[[["parsebuffer",3]],["bool",0]],[[["parsebuffer",3]],["lookahead1",3]],[[["span",3],["display",8]],["error",3]],[[["totokens",8],["display",8]],["error",3]],[[["parsestream",6]],["result",6]],[[["parsebuffer",3]],["result",6,[["parse",8]]]],[[["tokenstream",3]],["result",6]],[[["parsestream",6]],["result",6,[["nothing",3]]]],[[["tokenstream",3]],["result",6]],[[["str",0]],["result",6]],[[["parsebuffer",3]],["result",6,[["punctuated",3,[["parse",8]]]]]],[[["lookahead1",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3]],["span",3]],[[["error",3]],["span",3]],[[["parsebuffer",3]],["result",6]],[[["error",3]],["tokenstream",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["punctuated",3]]],[[["punctuated",3]],["punctuated",3]],[[["pairs",3]],["pairs",3]],[[["intopairs",3]],["intopairs",3]],[[["intoiter",3]],["intoiter",3]],[[["iter",3]],["iter",3]],[[["pair",4]],["pair",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["punctuated",3]],[[["punctuated",3]],["bool",0]],[[["punctuated",3],["intoiterator",8]]],[[["punctuated",3],["intoiterator",8]]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["punctuated",3]],[[["intoiterator",8]],["punctuated",3]],[[["punctuated",3],["usize",0]]],[[["punctuated",3],["usize",0]]],[[["punctuated",3],["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["punctuated",3]]],[[["punctuated",3]]],[[["punctuated",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["punctuated",3]],["intopairs",3]],[[["pair",4]]],[[["pair",4]]],[[["punctuated",3]],["bool",0]],[[["punctuated",3]],["iter",3]],[[["punctuated",3]],["itermut",3]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["usize",0]],[[["pairs",3]],["usize",0]],[[["pairsmut",3]],["usize",0]],[[["intopairs",3]],["usize",0]],[[["intoiter",3]],["usize",0]],[[["iter",3]],["usize",0]],[[["itermut",3]],["usize",0]],[[],["punctuated",3]],[[["option",4]],["pair",4]],[[["pairs",3]],["option",4]],[[["pairsmut",3]],["option",4]],[[["intopairs",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["iter",3]],["option",4]],[[["itermut",3]],["option",4]],[[["pairs",3]],["option",4]],[[["pairsmut",3]],["option",4]],[[["intopairs",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["iter",3]],["option",4]],[[["itermut",3]],["option",4]],[[["punctuated",3]],["pairs",3]],[[["punctuated",3]],["pairsmut",3]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["punctuated",3]],["option",4,[["pair",4]]]],[[["pair",4]],["option",4]],[[["pair",4]],["option",4]],[[["punctuated",3]]],[[["punctuated",3]]],[[["punctuated",3]]],[[["pairs",3]]],[[["pairsmut",3]]],[[["intopairs",3]]],[[["intoiter",3]]],[[["iter",3]]],[[["itermut",3]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["punctuated",3],["tokenstream",3]]],[[["pair",4],["tokenstream",3]]],[[["punctuated",3]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["pair",4]],["",0]],[[["pair",4]],["",0]],null,null,null,null,[[["",0]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullunderscore",3]],["underscore",3]],[[["abstract",3]],["abstract",3]],[[["as",3]],["as",3]],[[["async",3]],["async",3]],[[["auto",3]],["auto",3]],[[["await",3]],["await",3]],[[["become",3]],["become",3]],[[["box",3]],["box",3]],[[["break",3]],["break",3]],[[["const",3]],["const",3]],[[["continue",3]],["continue",3]],[[["crate",3]],["crate",3]],[[["default",3]],["default",3]],[[["do",3]],["do",3]],[[["dyn",3]],["dyn",3]],[[["else",3]],["else",3]],[[["enum",3]],["enum",3]],[[["extern",3]],["extern",3]],[[["final",3]],["final",3]],[[["fn",3]],["fn",3]],[[["for",3]],["for",3]],[[["if",3]],["if",3]],[[["impl",3]],["impl",3]],[[["in",3]],["in",3]],[[["let",3]],["let",3]],[[["loop",3]],["loop",3]],[[["macro",3]],["macro",3]],[[["match",3]],["match",3]],[[["mod",3]],["mod",3]],[[["move",3]],["move",3]],[[["mut",3]],["mut",3]],[[["override",3]],["override",3]],[[["priv",3]],["priv",3]],[[["pub",3]],["pub",3]],[[["ref",3]],["ref",3]],[[["return",3]],["return",3]],[[["selftype",3]],["selftype",3]],[[["selfvalue",3]],["selfvalue",3]],[[["static",3]],["static",3]],[[["struct",3]],["struct",3]],[[["super",3]],["super",3]],[[["trait",3]],["trait",3]],[[["try",3]],["try",3]],[[["type",3]],["type",3]],[[["typeof",3]],["typeof",3]],[[["union",3]],["union",3]],[[["unsafe",3]],["unsafe",3]],[[["unsized",3]],["unsized",3]],[[["use",3]],["use",3]],[[["virtual",3]],["virtual",3]],[[["where",3]],["where",3]],[[["while",3]],["while",3]],[[["yield",3]],["yield",3]],[[["add",3]],["add",3]],[[["addeq",3]],["addeq",3]],[[["and",3]],["and",3]],[[["andand",3]],["andand",3]],[[["andeq",3]],["andeq",3]],[[["at",3]],["at",3]],[[["bang",3]],["bang",3]],[[["caret",3]],["caret",3]],[[["careteq",3]],["careteq",3]],[[["colon",3]],["colon",3]],[[["colon2",3]],["colon2",3]],[[["comma",3]],["comma",3]],[[["div",3]],["div",3]],[[["diveq",3]],["diveq",3]],[[["dollar",3]],["dollar",3]],[[["dot",3]],["dot",3]],[[["dot2",3]],["dot2",3]],[[["dot3",3]],["dot3",3]],[[["dotdoteq",3]],["dotdoteq",3]],[[["eq",3]],["eq",3]],[[["eqeq",3]],["eqeq",3]],[[["ge",3]],["ge",3]],[[["gt",3]],["gt",3]],[[["le",3]],["le",3]],[[["lt",3]],["lt",3]],[[["muleq",3]],["muleq",3]],[[["ne",3]],["ne",3]],[[["or",3]],["or",3]],[[["oreq",3]],["oreq",3]],[[["oror",3]],["oror",3]],[[["pound",3]],["pound",3]],[[["question",3]],["question",3]],[[["rarrow",3]],["rarrow",3]],[[["larrow",3]],["larrow",3]],[[["rem",3]],["rem",3]],[[["remeq",3]],["remeq",3]],[[["fatarrow",3]],["fatarrow",3]],[[["semi",3]],["semi",3]],[[["shl",3]],["shl",3]],[[["shleq",3]],["shleq",3]],[[["shr",3]],["shr",3]],[[["shreq",3]],["shreq",3]],[[["star",3]],["star",3]],[[["sub",3]],["sub",3]],[[["subeq",3]],["subeq",3]],[[["tilde",3]],["tilde",3]],[[["brace",3]],["brace",3]],[[["bracket",3]],["bracket",3]],[[["paren",3]],["paren",3]],[[["group",3]],["groupunderscore",3]],[[],["abstract",3]],[[],["as",3]],[[],["async",3]],[[],["auto",3]],[[],["await",3]],[[],["become",3]],[[],["box",3]],[[],["break",3]],[[],["const",3]],[[],["continue",3]],[[],["crate",3]],[[],["default",3]],[[],["do",3]],[[],["dyn",3]],[[],["else",3]],[[],["enum",3]],[[],["extern",3]],[[],["final",3]],[[],["fn",3]],[[],["for",3]],[[],["if",3]],[[],["impl",3]],[[],["in",3]],[[],["let",3]],[[],["loop",3]],[[],["macro",3]],[[],["match",3]],[[],["mod",3]],[[],["move",3]],[[],["mut",3]],[[],["override",3]],[[],["priv",3]],[[],["pub",3]],[[],["ref",3]],[[],["return",3]],[[],["selftype",3]],[[],["selfvalue",3]],[[],["static",3]],[[],["struct",3]],[[],["super",3]],[[],["trait",3]],[[],["try",3]],[[],["type",3]],[[],["typeof",3]],[[],["union",3]],[[],["unsafe",3]],[[],["unsized",3]],[[],["use",3]],[[],["virtual",3]],[[],["where",3]],[[],["while",3]],[[],["yield",3]],[[],["add",3]],[[],["addeq",3]],[[],["and",3]],[[],["andand",3]],[[],["andeq",3]],[[],["at",3]],[[],["bang",3]],[[],["caret",3]],[[],["careteq",3]],[[],["colon",3]],[[],["colon2",3]],[[],["comma",3]],[[],["div",3]],[[],["diveq",3]],[[],["dollar",3]],[[],["dot",3]],[[],["dot2",3]],[[],["dot3",3]],[[],["dotdoteq",3]],[[],["eq",3]],[[],["eqeq",3]],[[],["ge",3]],[[],["gt",3]],[[],["le",3]],[[],["lt",3]],[[],["muleq",3]],[[],["ne",3]],[[],["or",3]],[[],["oreq",3]],[[],["oror",3]],[[],["pound",3]],[[],["question",3]],[[],["rarrow",3]],[[],["larrow",3]],[[],["rem",3]],[[],["remeq",3]],[[],["fatarrow",3]],[[],["semi",3]],[[],["shl",3]],[[],["shleq",3]],[[],["shr",3]],[[],["shreq",3]],[[],["star",3]],[[],["sub",3]],[[],["subeq",3]],[[],["tilde",3]],[[],["brace",3]],[[],["bracket",3]],[[],["paren",3]],[[],["group",3]],[[["underscore",3]]],[[["add",3]]],[[["and",3]]],[[["at",3]]],[[["bang",3]]],[[["caret",3]]],[[["colon",3]]],[[["comma",3]]],[[["div",3]]],[[["dollar",3]]],[[["dot",3]]],[[["eq",3]]],[[["gt",3]]],[[["lt",3]]],[[["or",3]]],[[["pound",3]]],[[["question",3]]],[[["rem",3]]],[[["semi",3]]],[[["star",3]]],[[["sub",3]]],[[["tilde",3]]],[[["underscore",3]]],[[["add",3]]],[[["and",3]]],[[["at",3]]],[[["bang",3]]],[[["caret",3]]],[[["colon",3]]],[[["comma",3]]],[[["div",3]]],[[["dollar",3]]],[[["dot",3]]],[[["eq",3]]],[[["gt",3]]],[[["lt",3]]],[[["or",3]]],[[["pound",3]]],[[["question",3]]],[[["rem",3]]],[[["semi",3]]],[[["star",3]]],[[["sub",3]]],[[["tilde",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["parsestream",6]],["result",6,[["underscore",3]]]],[[["parsestream",6]],["result",6,[["abstract",3]]]],[[["parsestream",6]],["result",6,[["as",3]]]],[[["parsestream",6]],["result",6,[["async",3]]]],[[["parsestream",6]],["result",6,[["auto",3]]]],[[["parsestream",6]],["result",6,[["await",3]]]],[[["parsestream",6]],["result",6,[["become",3]]]],[[["parsestream",6]],["result",6,[["box",3]]]],[[["parsestream",6]],["result",6,[["break",3]]]],[[["parsestream",6]],["result",6,[["const",3]]]],[[["parsestream",6]],["result",6,[["continue",3]]]],[[["parsestream",6]],["result",6,[["crate",3]]]],[[["parsestream",6]],["result",6,[["default",3]]]],[[["parsestream",6]],["result",6,[["do",3]]]],[[["parsestream",6]],["result",6,[["dyn",3]]]],[[["parsestream",6]],["result",6,[["else",3]]]],[[["parsestream",6]],["result",6,[["enum",3]]]],[[["parsestream",6]],["result",6,[["extern",3]]]],[[["parsestream",6]],["result",6,[["final",3]]]],[[["parsestream",6]],["result",6,[["fn",3]]]],[[["parsestream",6]],["result",6,[["for",3]]]],[[["parsestream",6]],["result",6,[["if",3]]]],[[["parsestream",6]],["result",6,[["impl",3]]]],[[["parsestream",6]],["result",6,[["in",3]]]],[[["parsestream",6]],["result",6,[["let",3]]]],[[["parsestream",6]],["result",6,[["loop",3]]]],[[["parsestream",6]],["result",6,[["macro",3]]]],[[["parsestream",6]],["result",6,[["match",3]]]],[[["parsestream",6]],["result",6,[["mod",3]]]],[[["parsestream",6]],["result",6,[["move",3]]]],[[["parsestream",6]],["result",6,[["mut",3]]]],[[["parsestream",6]],["result",6,[["override",3]]]],[[["parsestream",6]],["result",6,[["priv",3]]]],[[["parsestream",6]],["result",6,[["pub",3]]]],[[["parsestream",6]],["result",6,[["ref",3]]]],[[["parsestream",6]],["result",6,[["return",3]]]],[[["parsestream",6]],["result",6,[["selftype",3]]]],[[["parsestream",6]],["result",6,[["selfvalue",3]]]],[[["parsestream",6]],["result",6,[["static",3]]]],[[["parsestream",6]],["result",6,[["struct",3]]]],[[["parsestream",6]],["result",6,[["super",3]]]],[[["parsestream",6]],["result",6,[["trait",3]]]],[[["parsestream",6]],["result",6,[["try",3]]]],[[["parsestream",6]],["result",6,[["type",3]]]],[[["parsestream",6]],["result",6,[["typeof",3]]]],[[["parsestream",6]],["result",6,[["union",3]]]],[[["parsestream",6]],["result",6,[["unsafe",3]]]],[[["parsestream",6]],["result",6,[["unsized",3]]]],[[["parsestream",6]],["result",6,[["use",3]]]],[[["parsestream",6]],["result",6,[["virtual",3]]]],[[["parsestream",6]],["result",6,[["where",3]]]],[[["parsestream",6]],["result",6,[["while",3]]]],[[["parsestream",6]],["result",6,[["yield",3]]]],[[["parsestream",6]],["result",6,[["add",3]]]],[[["parsestream",6]],["result",6,[["addeq",3]]]],[[["parsestream",6]],["result",6,[["and",3]]]],[[["parsestream",6]],["result",6,[["andand",3]]]],[[["parsestream",6]],["result",6,[["andeq",3]]]],[[["parsestream",6]],["result",6,[["at",3]]]],[[["parsestream",6]],["result",6,[["bang",3]]]],[[["parsestream",6]],["result",6,[["caret",3]]]],[[["parsestream",6]],["result",6,[["careteq",3]]]],[[["parsestream",6]],["result",6,[["colon",3]]]],[[["parsestream",6]],["result",6,[["colon2",3]]]],[[["parsestream",6]],["result",6,[["comma",3]]]],[[["parsestream",6]],["result",6,[["div",3]]]],[[["parsestream",6]],["result",6,[["diveq",3]]]],[[["parsestream",6]],["result",6,[["dollar",3]]]],[[["parsestream",6]],["result",6,[["dot",3]]]],[[["parsestream",6]],["result",6,[["dot2",3]]]],[[["parsestream",6]],["result",6,[["dot3",3]]]],[[["parsestream",6]],["result",6,[["dotdoteq",3]]]],[[["parsestream",6]],["result",6,[["eq",3]]]],[[["parsestream",6]],["result",6,[["eqeq",3]]]],[[["parsestream",6]],["result",6,[["ge",3]]]],[[["parsestream",6]],["result",6,[["gt",3]]]],[[["parsestream",6]],["result",6,[["le",3]]]],[[["parsestream",6]],["result",6,[["lt",3]]]],[[["parsestream",6]],["result",6,[["muleq",3]]]],[[["parsestream",6]],["result",6,[["ne",3]]]],[[["parsestream",6]],["result",6,[["or",3]]]],[[["parsestream",6]],["result",6,[["oreq",3]]]],[[["parsestream",6]],["result",6,[["oror",3]]]],[[["parsestream",6]],["result",6,[["pound",3]]]],[[["parsestream",6]],["result",6,[["question",3]]]],[[["parsestream",6]],["result",6,[["rarrow",3]]]],[[["parsestream",6]],["result",6,[["larrow",3]]]],[[["parsestream",6]],["result",6,[["rem",3]]]],[[["parsestream",6]],["result",6,[["remeq",3]]]],[[["parsestream",6]],["result",6,[["fatarrow",3]]]],[[["parsestream",6]],["result",6,[["semi",3]]]],[[["parsestream",6]],["result",6,[["shl",3]]]],[[["parsestream",6]],["result",6,[["shleq",3]]]],[[["parsestream",6]],["result",6,[["shr",3]]]],[[["parsestream",6]],["result",6,[["shreq",3]]]],[[["parsestream",6]],["result",6,[["star",3]]]],[[["parsestream",6]],["result",6,[["sub",3]]]],[[["parsestream",6]],["result",6,[["subeq",3]]]],[[["parsestream",6]],["result",6,[["tilde",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["brace",3],["tokenstream",3]]],[[["bracket",3],["tokenstream",3]]],[[["paren",3],["tokenstream",3]]],[[["group",3],["tokenstreamunderscore",3],["tokenstream",3]]],[[["abstract",3],["tokenstream",3]]],[[["as",3],["tokenstream",3]]],[[["async",3],["tokenstream",3]]],[[["auto",3],["tokenstream",3]]],[[["await",3],["tokenstream",3]]],[[["become",3],["tokenstream",3]]],[[["box",3],["tokenstream",3]]],[[["break",3],["tokenstream",3]]],[[["const",3],["tokenstream",3]]],[[["continue",3],["tokenstream",3]]],[[["crate",3],["tokenstream",3]]],[[["default",3],["tokenstream",3]]],[[["do",3],["tokenstream",3]]],[[["dyn",3],["tokenstream",3]]],[[["else",3],["tokenstream",3]]],[[["enum",3],["tokenstream",3]]],[[["extern",3],["tokenstream",3]]],[[["final",3],["tokenstream",3]]],[[["fn",3],["tokenstream",3]]],[[["for",3],["tokenstream",3]]],[[["if",3],["tokenstream",3]]],[[["impl",3],["tokenstream",3]]],[[["in",3],["tokenstream",3]]],[[["let",3],["tokenstream",3]]],[[["loop",3],["tokenstream",3]]],[[["macro",3],["tokenstream",3]]],[[["match",3],["tokenstream",3]]],[[["mod",3],["tokenstream",3]]],[[["move",3],["tokenstream",3]]],[[["mut",3],["tokenstream",3]]],[[["override",3],["tokenstream",3]]],[[["priv",3],["tokenstream",3]]],[[["pub",3],["tokenstream",3]]],[[["ref",3],["tokenstream",3]]],[[["return",3],["tokenstream",3]]],[[["selftype",3],["tokenstream",3]]],[[["selfvalue",3],["tokenstream",3]]],[[["static",3],["tokenstream",3]]],[[["struct",3],["tokenstream",3]]],[[["super",3],["tokenstream",3]]],[[["trait",3],["tokenstream",3]]],[[["try",3],["tokenstream",3]]],[[["type",3],["tokenstream",3]]],[[["typeof",3],["tokenstream",3]]],[[["union",3],["tokenstream",3]]],[[["unsafe",3],["tokenstream",3]]],[[["unsized",3],["tokenstream",3]]],[[["use",3],["tokenstream",3]]],[[["virtual",3],["tokenstream",3]]],[[["where",3],["tokenstream",3]]],[[["while",3],["tokenstream",3]]],[[["yield",3],["tokenstream",3]]],[[["add",3],["tokenstream",3]]],[[["addeq",3],["tokenstream",3]]],[[["and",3],["tokenstream",3]]],[[["andand",3],["tokenstream",3]]],[[["andeq",3],["tokenstream",3]]],[[["at",3],["tokenstream",3]]],[[["bang",3],["tokenstream",3]]],[[["caret",3],["tokenstream",3]]],[[["careteq",3],["tokenstream",3]]],[[["colon",3],["tokenstream",3]]],[[["colon2",3],["tokenstream",3]]],[[["comma",3],["tokenstream",3]]],[[["div",3],["tokenstream",3]]],[[["diveq",3],["tokenstream",3]]],[[["dollar",3],["tokenstream",3]]],[[["dot",3],["tokenstream",3]]],[[["dot2",3],["tokenstream",3]]],[[["dot3",3],["tokenstream",3]]],[[["dotdoteq",3],["tokenstream",3]]],[[["eq",3],["tokenstream",3]]],[[["eqeq",3],["tokenstream",3]]],[[["ge",3],["tokenstream",3]]],[[["gt",3],["tokenstream",3]]],[[["le",3],["tokenstream",3]]],[[["lt",3],["tokenstream",3]]],[[["muleq",3],["tokenstream",3]]],[[["ne",3],["tokenstream",3]]],[[["or",3],["tokenstream",3]]],[[["oreq",3],["tokenstream",3]]],[[["oror",3],["tokenstream",3]]],[[["pound",3],["tokenstream",3]]],[[["question",3],["tokenstream",3]]],[[["rarrow",3],["tokenstream",3]]],[[["larrow",3],["tokenstream",3]]],[[["rem",3],["tokenstream",3]]],[[["remeq",3],["tokenstream",3]]],[[["fatarrow",3],["tokenstream",3]]],[[["semi",3],["tokenstream",3]]],[[["shl",3],["tokenstream",3]]],[[["shleq",3],["tokenstream",3]]],[[["shr",3],["tokenstream",3]]],[[["shreq",3],["tokenstream",3]]],[[["star",3],["tokenstream",3]]],[[["sub",3],["tokenstream",3]]],[[["subeq",3],["tokenstream",3]]],[[["tilde",3],["tokenstream",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["abi",3]]],[[["",0],["abi",3]]],[[["",0],["abi",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["arm",3]]],[[["",0],["arm",3]]],[[["",0],["arm",3]]],[[["",0],["attrstyle",4]]],[[["",0],["attrstyle",4]]],[[["",0],["attrstyle",4]]],[[["",0],["attribute",3]]],[[["",0],["attribute",3]]],[[["",0],["attribute",3]]],[[["",0],["barefnarg",3]]],[[["",0],["barefnarg",3]]],[[["",0],["barefnarg",3]]],[[["",0],["binop",4]]],[[["",0],["binop",4]]],[[["",0],["binop",4]]],[[["",0],["binding",3]]],[[["",0],["binding",3]]],[[["",0],["binding",3]]],[[["",0],["block",3]]],[[["",0],["block",3]]],[[["",0],["block",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["constparam",3]]],[[["",0],["constparam",3]]],[[["",0],["constparam",3]]],[[["",0],["constraint",3]]],[[["",0],["constraint",3]]],[[["",0],["constraint",3]]],[[["",0],["data",4]]],[[["",0],["data",4]]],[[["",0],["data",4]]],[[["",0],["dataenum",3]]],[[["",0],["dataenum",3]]],[[["",0],["dataenum",3]]],[[["",0],["datastruct",3]]],[[["",0],["datastruct",3]]],[[["",0],["datastruct",3]]],[[["",0],["dataunion",3]]],[[["",0],["dataunion",3]]],[[["",0],["dataunion",3]]],[[["",0],["deriveinput",3]]],[[["",0],["deriveinput",3]]],[[["",0],["deriveinput",3]]],[[["",0],["expr",4]]],[[["",0],["expr",4]]],[[["",0],["expr",4]]],[[["",0],["exprarray",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprif",3]]],[[["",0],["exprif",3]]],[[["",0],["exprif",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprwhile",3]]],[[["",0],["exprwhile",3]]],[[["",0],["exprwhile",3]]],[[["",0],["expryield",3]]],[[["",0],["expryield",3]]],[[["",0],["expryield",3]]],[[["",0],["field",3]]],[[["",0],["field",3]]],[[["",0],["field",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fields",4]]],[[["",0],["fields",4]]],[[["",0],["fields",4]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["file",3]]],[[["",0],["file",3]]],[[["",0],["file",3]]],[[["",0],["fnarg",4]]],[[["",0],["fnarg",4]]],[[["",0],["fnarg",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["genericargument",4]]],[[["",0],["genericargument",4]]],[[["",0],["genericargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericparam",4]]],[[["",0],["genericparam",4]]],[[["",0],["genericparam",4]]],[[["",0],["generics",3]]],[[["",0],["generics",3]]],[[["",0],["generics",3]]],[[["",0],["ident",3]]],[[["",0],["ident",3]]],[[["",0],["ident",3]]],[[["",0],["implitem",4]]],[[["",0],["implitem",4]]],[[["",0],["implitem",4]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemtype",3]]],[[["",0],["implitemtype",3]]],[[["",0],["implitemtype",3]]],[[["",0],["index",3]]],[[["",0],["index",3]]],[[["",0],["index",3]]],[[["",0],["item",4]]],[[["",0],["item",4]]],[[["",0],["item",4]]],[[["",0],["itemconst",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemuse",3]]],[[["",0],["itemuse",3]]],[[["",0],["itemuse",3]]],[[["",0],["label",3]]],[[["",0],["label",3]]],[[["",0],["label",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lit",4]]],[[["",0],["lit",4]]],[[["",0],["lit",4]]],[[["",0],["litbool",3]]],[[["",0],["litbool",3]]],[[["",0],["litbool",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litchar",3]]],[[["",0],["litchar",3]]],[[["",0],["litchar",3]]],[[["",0],["litfloat",3]]],[[["",0],["litfloat",3]]],[[["",0],["litfloat",3]]],[[["",0],["litint",3]]],[[["",0],["litint",3]]],[[["",0],["litint",3]]],[[["",0],["litstr",3]]],[[["",0],["litstr",3]]],[[["",0],["litstr",3]]],[[["",0],["local",3]]],[[["",0],["local",3]]],[[["",0],["local",3]]],[[["",0],["macro",3]]],[[["",0],["macro",3]]],[[["",0],["macro",3]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macrodelimiter",4]]],[[["",0],["member",4]]],[[["",0],["member",4]]],[[["",0],["member",4]]],[[["",0],["meta",4]]],[[["",0],["meta",4]]],[[["",0],["meta",4]]],[[["",0],["metalist",3]]],[[["",0],["metalist",3]]],[[["",0],["metalist",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["nestedmeta",4]]],[[["",0],["nestedmeta",4]]],[[["",0],["nestedmeta",4]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["pat",4]]],[[["",0],["pat",4]]],[[["",0],["pat",4]]],[[["",0],["patbox",3]]],[[["",0],["patbox",3]]],[[["",0],["patbox",3]]],[[["",0],["patident",3]]],[[["",0],["patident",3]]],[[["",0],["patident",3]]],[[["",0],["patlit",3]]],[[["",0],["patlit",3]]],[[["",0],["patlit",3]]],[[["",0],["patmacro",3]]],[[["",0],["patmacro",3]]],[[["",0],["patmacro",3]]],[[["",0],["pator",3]]],[[["",0],["pator",3]]],[[["",0],["pator",3]]],[[["",0],["patpath",3]]],[[["",0],["patpath",3]]],[[["",0],["patpath",3]]],[[["",0],["patrange",3]]],[[["",0],["patrange",3]]],[[["",0],["patrange",3]]],[[["",0],["patreference",3]]],[[["",0],["patreference",3]]],[[["",0],["patreference",3]]],[[["",0],["patrest",3]]],[[["",0],["patrest",3]]],[[["",0],["patrest",3]]],[[["",0],["patslice",3]]],[[["",0],["patslice",3]]],[[["",0],["patslice",3]]],[[["",0],["patstruct",3]]],[[["",0],["patstruct",3]]],[[["",0],["patstruct",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattype",3]]],[[["",0],["pattype",3]]],[[["",0],["pattype",3]]],[[["",0],["patwild",3]]],[[["",0],["patwild",3]]],[[["",0],["patwild",3]]],[[["",0],["path",3]]],[[["",0],["path",3]]],[[["",0],["path",3]]],[[["",0],["patharguments",4]]],[[["",0],["patharguments",4]]],[[["",0],["patharguments",4]]],[[["",0],["pathsegment",3]]],[[["",0],["pathsegment",3]]],[[["",0],["pathsegment",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatetype",3]]],[[["",0],["predicatetype",3]]],[[["",0],["predicatetype",3]]],[[["",0],["qself",3]]],[[["",0],["qself",3]]],[[["",0],["qself",3]]],[[["",0],["rangelimits",4]]],[[["",0],["rangelimits",4]]],[[["",0],["rangelimits",4]]],[[["",0],["receiver",3]]],[[["",0],["receiver",3]]],[[["",0],["receiver",3]]],[[["",0],["returntype",4]]],[[["",0],["returntype",4]]],[[["",0],["returntype",4]]],[[["",0],["signature",3]]],[[["",0],["signature",3]]],[[["",0],["signature",3]]],[[["",0],["span",3]]],[[["",0],["span",3]]],[[["",0],["span",3]]],[[["",0],["stmt",4]]],[[["",0],["stmt",4]]],[[["",0],["stmt",4]]],[[["",0],["traitbound",3]]],[[["",0],["traitbound",3]]],[[["",0],["traitbound",3]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traititem",4]]],[[["",0],["traititem",4]]],[[["",0],["traititem",4]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemtype",3]]],[[["",0],["traititemtype",3]]],[[["",0],["traititemtype",3]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["typearray",3]]],[[["",0],["typearray",3]]],[[["",0],["typearray",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typegroup",3]]],[[["",0],["typegroup",3]]],[[["",0],["typegroup",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typemacro",3]]],[[["",0],["typemacro",3]]],[[["",0],["typemacro",3]]],[[["",0],["typenever",3]]],[[["",0],["typenever",3]]],[[["",0],["typenever",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparen",3]]],[[["",0],["typeparen",3]]],[[["",0],["typeparen",3]]],[[["",0],["typepath",3]]],[[["",0],["typepath",3]]],[[["",0],["typepath",3]]],[[["",0],["typeptr",3]]],[[["",0],["typeptr",3]]],[[["",0],["typeptr",3]]],[[["",0],["typereference",3]]],[[["",0],["typereference",3]]],[[["",0],["typereference",3]]],[[["",0],["typeslice",3]]],[[["",0],["typeslice",3]]],[[["",0],["typeslice",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetuple",3]]],[[["",0],["typetuple",3]]],[[["",0],["typetuple",3]]],[[["",0],["unop",4]]],[[["",0],["unop",4]]],[[["",0],["unop",4]]],[[["",0],["useglob",3]]],[[["",0],["useglob",3]]],[[["",0],["useglob",3]]],[[["",0],["usegroup",3]]],[[["",0],["usegroup",3]]],[[["",0],["usegroup",3]]],[[["",0],["usename",3]]],[[["",0],["usename",3]]],[[["",0],["usename",3]]],[[["",0],["usepath",3]]],[[["",0],["usepath",3]]],[[["",0],["usepath",3]]],[[["",0],["userename",3]]],[[["",0],["userename",3]]],[[["",0],["userename",3]]],[[["",0],["usetree",4]]],[[["",0],["usetree",4]]],[[["",0],["usetree",4]]],[[["",0],["variadic",3]]],[[["",0],["variadic",3]]],[[["",0],["variadic",3]]],[[["",0],["variant",3]]],[[["",0],["variant",3]]],[[["",0],["variant",3]]],[[["",0],["viscrate",3]]],[[["",0],["viscrate",3]]],[[["",0],["viscrate",3]]],[[["",0],["vispublic",3]]],[[["",0],["vispublic",3]]],[[["",0],["vispublic",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visibility",4]]],[[["",0],["visibility",4]]],[[["",0],["visibility",4]]],[[["",0],["whereclause",3]]],[[["",0],["whereclause",3]]],[[["",0],["whereclause",3]]],[[["",0],["wherepredicate",4]]],[[["",0],["wherepredicate",4]]],[[["",0],["wherepredicate",4]]],null,[[["",0],["abi",3]]],[[["",0],["abi",3]]],[[["",0],["abi",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["arm",3]]],[[["",0],["arm",3]]],[[["",0],["arm",3]]],[[["",0],["attrstyle",4]]],[[["",0],["attrstyle",4]]],[[["",0],["attrstyle",4]]],[[["",0],["attribute",3]]],[[["",0],["attribute",3]]],[[["",0],["attribute",3]]],[[["",0],["barefnarg",3]]],[[["",0],["barefnarg",3]]],[[["",0],["barefnarg",3]]],[[["",0],["binop",4]]],[[["",0],["binop",4]]],[[["",0],["binop",4]]],[[["",0],["binding",3]]],[[["",0],["binding",3]]],[[["",0],["binding",3]]],[[["",0],["block",3]]],[[["",0],["block",3]]],[[["",0],["block",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["constparam",3]]],[[["",0],["constparam",3]]],[[["",0],["constparam",3]]],[[["",0],["constraint",3]]],[[["",0],["constraint",3]]],[[["",0],["constraint",3]]],[[["",0],["dataenum",3]]],[[["",0],["dataenum",3]]],[[["",0],["dataenum",3]]],[[["",0],["data",4]]],[[["",0],["data",4]]],[[["",0],["data",4]]],[[["",0],["datastruct",3]]],[[["",0],["datastruct",3]]],[[["",0],["datastruct",3]]],[[["",0],["dataunion",3]]],[[["",0],["dataunion",3]]],[[["",0],["dataunion",3]]],[[["",0],["deriveinput",3]]],[[["",0],["deriveinput",3]]],[[["",0],["deriveinput",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprif",3]]],[[["",0],["exprif",3]]],[[["",0],["exprif",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["expr",4]]],[[["",0],["expr",4]]],[[["",0],["expr",4]]],[[["",0],["exprparen",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprwhile",3]]],[[["",0],["exprwhile",3]]],[[["",0],["exprwhile",3]]],[[["",0],["expryield",3]]],[[["",0],["expryield",3]]],[[["",0],["expryield",3]]],[[["",0],["field",3]]],[[["",0],["field",3]]],[[["",0],["field",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fields",4]]],[[["",0],["fields",4]]],[[["",0],["fields",4]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["file",3]]],[[["",0],["file",3]]],[[["",0],["file",3]]],[[["",0],["fnarg",4]]],[[["",0],["fnarg",4]]],[[["",0],["fnarg",4]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["genericargument",4]]],[[["",0],["genericargument",4]]],[[["",0],["genericargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericparam",4]]],[[["",0],["genericparam",4]]],[[["",0],["genericparam",4]]],[[["",0],["generics",3]]],[[["",0],["generics",3]]],[[["",0],["generics",3]]],[[["",0],["ident",3]]],[[["",0],["ident",3]]],[[["",0],["ident",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitem",4]]],[[["",0],["implitem",4]]],[[["",0],["implitem",4]]],[[["",0],["implitemtype",3]]],[[["",0],["implitemtype",3]]],[[["",0],["implitemtype",3]]],[[["",0],["index",3]]],[[["",0],["index",3]]],[[["",0],["index",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemmod",3]]],[[["",0],["item",4]]],[[["",0],["item",4]]],[[["",0],["item",4]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemuse",3]]],[[["",0],["itemuse",3]]],[[["",0],["itemuse",3]]],[[["",0],["label",3]]],[[["",0],["label",3]]],[[["",0],["label",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetime",3]]],[[["",0],["litbool",3]]],[[["",0],["litbool",3]]],[[["",0],["litbool",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litchar",3]]],[[["",0],["litchar",3]]],[[["",0],["litchar",3]]],[[["",0],["litfloat",3]]],[[["",0],["litfloat",3]]],[[["",0],["litfloat",3]]],[[["",0],["litint",3]]],[[["",0],["litint",3]]],[[["",0],["litint",3]]],[[["",0],["lit",4]]],[[["",0],["lit",4]]],[[["",0],["lit",4]]],[[["",0],["litstr",3]]],[[["",0],["litstr",3]]],[[["",0],["litstr",3]]],[[["",0],["local",3]]],[[["",0],["local",3]]],[[["",0],["local",3]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macro",3]]],[[["",0],["macro",3]]],[[["",0],["macro",3]]],[[["",0],["member",4]]],[[["",0],["member",4]]],[[["",0],["member",4]]],[[["",0],["metalist",3]]],[[["",0],["metalist",3]]],[[["",0],["metalist",3]]],[[["",0],["meta",4]]],[[["",0],["meta",4]]],[[["",0],["meta",4]]],[[["",0],["metanamevalue",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["nestedmeta",4]]],[[["",0],["nestedmeta",4]]],[[["",0],["nestedmeta",4]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["patbox",3]]],[[["",0],["patbox",3]]],[[["",0],["patbox",3]]],[[["",0],["patident",3]]],[[["",0],["patident",3]]],[[["",0],["patident",3]]],[[["",0],["patlit",3]]],[[["",0],["patlit",3]]],[[["",0],["patlit",3]]],[[["",0],["patmacro",3]]],[[["",0],["patmacro",3]]],[[["",0],["patmacro",3]]],[[["",0],["pat",4]]],[[["",0],["pat",4]]],[[["",0],["pat",4]]],[[["",0],["pator",3]]],[[["",0],["pator",3]]],[[["",0],["pator",3]]],[[["",0],["patpath",3]]],[[["",0],["patpath",3]]],[[["",0],["patpath",3]]],[[["",0],["patrange",3]]],[[["",0],["patrange",3]]],[[["",0],["patrange",3]]],[[["",0],["patreference",3]]],[[["",0],["patreference",3]]],[[["",0],["patreference",3]]],[[["",0],["patrest",3]]],[[["",0],["patrest",3]]],[[["",0],["patrest",3]]],[[["",0],["patslice",3]]],[[["",0],["patslice",3]]],[[["",0],["patslice",3]]],[[["",0],["patstruct",3]]],[[["",0],["patstruct",3]]],[[["",0],["patstruct",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattype",3]]],[[["",0],["pattype",3]]],[[["",0],["pattype",3]]],[[["",0],["patwild",3]]],[[["",0],["patwild",3]]],[[["",0],["patwild",3]]],[[["",0],["patharguments",4]]],[[["",0],["patharguments",4]]],[[["",0],["patharguments",4]]],[[["",0],["path",3]]],[[["",0],["path",3]]],[[["",0],["path",3]]],[[["",0],["pathsegment",3]]],[[["",0],["pathsegment",3]]],[[["",0],["pathsegment",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatetype",3]]],[[["",0],["predicatetype",3]]],[[["",0],["predicatetype",3]]],[[["",0],["qself",3]]],[[["",0],["qself",3]]],[[["",0],["qself",3]]],[[["",0],["rangelimits",4]]],[[["",0],["rangelimits",4]]],[[["",0],["rangelimits",4]]],[[["",0],["receiver",3]]],[[["",0],["receiver",3]]],[[["",0],["receiver",3]]],[[["",0],["returntype",4]]],[[["",0],["returntype",4]]],[[["",0],["returntype",4]]],[[["",0],["signature",3]]],[[["",0],["signature",3]]],[[["",0],["signature",3]]],[[["",0],["span",3]]],[[["",0],["span",3]]],[[["",0],["span",3]]],[[["",0],["stmt",4]]],[[["",0],["stmt",4]]],[[["",0],["stmt",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitbound",3]]],[[["",0],["traitbound",3]]],[[["",0],["traitbound",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititem",4]]],[[["",0],["traititem",4]]],[[["",0],["traititem",4]]],[[["",0],["traititemtype",3]]],[[["",0],["traititemtype",3]]],[[["",0],["traititemtype",3]]],[[["",0],["typearray",3]]],[[["",0],["typearray",3]]],[[["",0],["typearray",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typegroup",3]]],[[["",0],["typegroup",3]]],[[["",0],["typegroup",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typemacro",3]]],[[["",0],["typemacro",3]]],[[["",0],["typemacro",3]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["typenever",3]]],[[["",0],["typenever",3]]],[[["",0],["typenever",3]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparam",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparen",3]]],[[["",0],["typeparen",3]]],[[["",0],["typeparen",3]]],[[["",0],["typepath",3]]],[[["",0],["typepath",3]]],[[["",0],["typepath",3]]],[[["",0],["typeptr",3]]],[[["",0],["typeptr",3]]],[[["",0],["typeptr",3]]],[[["",0],["typereference",3]]],[[["",0],["typereference",3]]],[[["",0],["typereference",3]]],[[["",0],["typeslice",3]]],[[["",0],["typeslice",3]]],[[["",0],["typeslice",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetuple",3]]],[[["",0],["typetuple",3]]],[[["",0],["typetuple",3]]],[[["",0],["unop",4]]],[[["",0],["unop",4]]],[[["",0],["unop",4]]],[[["",0],["useglob",3]]],[[["",0],["useglob",3]]],[[["",0],["useglob",3]]],[[["",0],["usegroup",3]]],[[["",0],["usegroup",3]]],[[["",0],["usegroup",3]]],[[["",0],["usename",3]]],[[["",0],["usename",3]]],[[["",0],["usename",3]]],[[["",0],["usepath",3]]],[[["",0],["usepath",3]]],[[["",0],["usepath",3]]],[[["",0],["userename",3]]],[[["",0],["userename",3]]],[[["",0],["userename",3]]],[[["",0],["usetree",4]]],[[["",0],["usetree",4]]],[[["",0],["usetree",4]]],[[["",0],["variadic",3]]],[[["",0],["variadic",3]]],[[["",0],["variadic",3]]],[[["",0],["variant",3]]],[[["",0],["variant",3]]],[[["",0],["variant",3]]],[[["",0],["viscrate",3]]],[[["",0],["viscrate",3]]],[[["",0],["viscrate",3]]],[[["",0],["vispublic",3]]],[[["",0],["vispublic",3]]],[[["",0],["vispublic",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visibility",4]]],[[["",0],["visibility",4]]],[[["",0],["visibility",4]]],[[["",0],["whereclause",3]]],[[["",0],["whereclause",3]]],[[["",0],["whereclause",3]]],[[["",0],["wherepredicate",4]]],[[["",0],["wherepredicate",4]]],[[["",0],["wherepredicate",4]]]],"p":[[4,"BinOp"],[4,"PathArguments"],[4,"Expr"],[4,"Type"],[4,"GenericArgument"],[4,"Lit"],[4,"Pat"],[4,"MacroDelimiter"],[4,"RangeLimits"],[4,"GenericMethodArgument"],[4,"GenericParam"],[4,"Item"],[4,"TraitItem"],[4,"ImplItem"],[4,"StrStyle"],[4,"Visibility"],[4,"ReturnType"],[4,"UnOp"],[4,"Data"],[4,"WherePredicate"],[4,"Stmt"],[4,"ForeignItem"],[4,"UseTree"],[4,"AttrStyle"],[4,"TypeParamBound"],[4,"Meta"],[4,"NestedMeta"],[4,"TraitBoundModifier"],[4,"Fields"],[4,"Member"],[4,"FnArg"],[3,"ItemForeignMod"],[3,"Signature"],[3,"TypeBareFn"],[3,"ExprReference"],[3,"TypeReference"],[3,"PatReference"],[3,"Lifetime"],[3,"ExprCall"],[3,"ExprMethodCall"],[3,"MethodTurbofish"],[3,"AngleBracketedGenericArguments"],[3,"PathSegment"],[3,"ExprMatch"],[3,"ExprCast"],[3,"UseRename"],[3,"QSelf"],[3,"TypeGenerics"],[3,"ExprAsync"],[3,"ExprClosure"],[3,"Variant"],[3,"Field"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"FieldValue"],[3,"Arm"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemMacro"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Receiver"],[3,"File"],[3,"DeriveInput"],[3,"Local"],[3,"BareFnArg"],[3,"Variadic"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Macro"],[3,"TypeNever"],[3,"LitInt"],[3,"LitFloat"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[3,"Index"],[3,"Label"],[3,"Generics"],[3,"BoundLifetimes"],[3,"TraitBound"],[3,"WhereClause"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[3,"UsePath"],[3,"UseName"],[3,"UseGlob"],[3,"UseGroup"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[3,"Block"],[3,"TypeArray"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"Path"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[13,"Inner"],[13,"Add"],[13,"Sub"],[13,"Mul"],[13,"Div"],[13,"Rem"],[13,"And"],[13,"Or"],[13,"BitXor"],[13,"BitAnd"],[13,"BitOr"],[13,"Shl"],[13,"Shr"],[13,"Eq"],[13,"Lt"],[13,"Le"],[13,"Ne"],[13,"Ge"],[13,"Gt"],[13,"AddEq"],[13,"SubEq"],[13,"MulEq"],[13,"DivEq"],[13,"RemEq"],[13,"BitXorEq"],[13,"BitAndEq"],[13,"BitOrEq"],[13,"ShlEq"],[13,"ShrEq"],[13,"Struct"],[13,"Enum"],[13,"Union"],[13,"Array"],[13,"Assign"],[13,"AssignOp"],[13,"Async"],[13,"Await"],[13,"Binary"],[13,"Block"],[13,"Box"],[13,"Break"],[13,"Call"],[13,"Cast"],[13,"Closure"],[13,"Continue"],[13,"Field"],[13,"ForLoop"],[13,"Group"],[13,"If"],[13,"Index"],[13,"Let"],[13,"Lit"],[13,"Loop"],[13,"Macro"],[13,"Match"],[13,"MethodCall"],[13,"Paren"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Repeat"],[13,"Return"],[13,"Struct"],[13,"Try"],[13,"TryBlock"],[13,"Tuple"],[13,"Type"],[13,"Unary"],[13,"Unsafe"],[13,"Verbatim"],[13,"While"],[13,"Yield"],[13,"Named"],[13,"Unnamed"],[13,"Receiver"],[13,"Typed"],[13,"Fn"],[13,"Static"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Lifetime"],[13,"Type"],[13,"Binding"],[13,"Constraint"],[13,"Const"],[13,"Type"],[13,"Const"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Const"],[13,"Enum"],[13,"ExternCrate"],[13,"Fn"],[13,"ForeignMod"],[13,"Impl"],[13,"Macro"],[13,"Macro2"],[13,"Mod"],[13,"Static"],[13,"Struct"],[13,"Trait"],[13,"TraitAlias"],[13,"Type"],[13,"Union"],[13,"Use"],[13,"Verbatim"],[13,"Str"],[13,"ByteStr"],[13,"Byte"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Bool"],[13,"Verbatim"],[13,"Paren"],[13,"Brace"],[13,"Bracket"],[13,"Named"],[13,"Unnamed"],[13,"Path"],[13,"List"],[13,"NameValue"],[13,"Meta"],[13,"Lit"],[13,"Box"],[13,"Ident"],[13,"Lit"],[13,"Macro"],[13,"Or"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Rest"],[13,"Slice"],[13,"Struct"],[13,"Tuple"],[13,"TupleStruct"],[13,"Type"],[13,"Verbatim"],[13,"Wild"],[13,"AngleBracketed"],[13,"Parenthesized"],[13,"HalfOpen"],[13,"Closed"],[13,"Type"],[13,"Local"],[13,"Item"],[13,"Expr"],[13,"Semi"],[13,"Raw"],[13,"Maybe"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Array"],[13,"BareFn"],[13,"Group"],[13,"ImplTrait"],[13,"Infer"],[13,"Macro"],[13,"Never"],[13,"Paren"],[13,"Path"],[13,"Ptr"],[13,"Reference"],[13,"Slice"],[13,"TraitObject"],[13,"Tuple"],[13,"Verbatim"],[13,"Trait"],[13,"Lifetime"],[13,"Deref"],[13,"Not"],[13,"Neg"],[13,"Path"],[13,"Name"],[13,"Rename"],[13,"Glob"],[13,"Group"],[13,"Public"],[13,"Crate"],[13,"Restricted"],[13,"Type"],[13,"Lifetime"],[13,"Eq"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[8,"Parser"],[3,"ParseBuffer"],[3,"Lookahead1"],[3,"StepCursor"],[3,"Nothing"],[3,"Error"],[8,"Parse"],[8,"Speculative"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[13,"Punctuated"],[13,"End"],[8,"Spanned"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[8,"Visit"],[8,"VisitMut"]]},\
"tesseract_plumbing":{"doc":"","t":[13,13,13,3,3,3,3,3,3,3,3,3,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DimensionsExceedImageSize","DimensionsExceedMemory","ImageWidthExceedsBytesPerLine","TessBaseApi","TessBaseApiGetAltoTextError","TessBaseApiGetHocrTextError","TessBaseApiGetLstmBoxTextError","TessBaseApiGetTsvTextError","TessBaseApiGetUtf8TextError","TessBaseApiGetWordStrBoxTextError","TessBaseApiInitError","TessBaseApiRecogniseError","TessBaseApiSetImageSafetyError","TessBaseApiSetVariableError","Text","all_word_confidences","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","default","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_alto_text","get_component_images_1","get_hocr_text","get_input_image","get_lstm_box_text","get_source_y_resolution","get_tsv_text","get_utf8_text","get_word_str_box_text","init_2","init_4","into","into","into","into","into","into","into","into","into","into","into","into","leptonica_plumbing","leptonica_sys","mean_text_conf","new","recognize","set_image","set_image_2","set_rectangle","set_source_resolution","set_variable","tesseract_sys","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["tesseract_plumbing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Wrapper around <code>tesseract::TessBaseAPI</code>","","","","","","","","","","","Wrapper around Tesseractâ€™s returned strings","Wrapper for <code>TessBaseAPIAllWordConfidences</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wrapper for <code>TessBaseAPIGetAltoText</code>","Wrapper for <code>GetComponentImages 1/2</code>","Wrapper for <code>GetUTF8Text</code>","Wrapper for <code>TessBaseAPIGetInputImage</code>","Wrapper for <code>TessBaseAPIGetLSTMBoxText</code>","Wrapper for <code>TessBaseAPIGetSourceYResolution</code>","Wrapper for <code>TessBaseAPIGetTsvText</code>","Wrapper for <code>GetUTF8Text</code>","Wrapper for <code>TessBaseAPIGetWordStrBoxText</code>","Wrapper for <code>Init-2</code>","Wrapper for <code>Init-4</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Wrapper for <code>TessBaseAPIMeanTextConf</code>","Safety","Wrapper for <code>Recognize</code>","Wrapper for <code>SetImage-1</code>","Wrapper for <code>SetImage-2</code>","Wrapper for <code>TessBaseAPISetRectangle</code>","Wrapper for <code>SetSourceResolution</code>","Wrapper for <code>SetVariable</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,4,5,6,7,8,1,9,10,11,12,3,2,4,5,6,7,8,1,9,10,11,12,2,2,3,2,1,2,4,4,5,5,6,6,7,7,8,8,1,1,9,9,10,10,11,11,12,12,3,2,4,5,6,7,8,1,9,10,11,12,2,2,2,2,2,2,2,2,2,2,2,3,2,4,5,6,7,8,1,9,10,11,12,0,0,2,3,2,2,2,2,2,2,0,4,5,6,7,8,1,9,10,11,12,3,2,4,5,6,7,8,1,9,10,11,12,3,2,4,5,6,7,8,1,9,10,11,12,3,2,4,5,6,7,8,1,9,10,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tessbaseapi",3]],["result",4,[["allwordconfidences",3],["tessbaseapiallwordconfidenceserror",3]]]],[[["text",3]],["cstr",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["tessbaseapi",3]],[[],["tessbaseapi",3]],[[["text",3]]],[[["tessbaseapi",3]]],[[["tessbaseapisetimagesafetyerror",4],["tessbaseapisetimagesafetyerror",4]],["bool",0]],[[["tessbaseapi",3],["formatter",3]],["result",6]],[[["tessbaseapiiniterror",3],["formatter",3]],["result",6]],[[["tessbaseapiiniterror",3],["formatter",3]],["result",6]],[[["tessbaseapisetvariableerror",3],["formatter",3]],["result",6]],[[["tessbaseapisetvariableerror",3],["formatter",3]],["result",6]],[[["tessbaseapirecogniseerror",3],["formatter",3]],["result",6]],[[["tessbaseapirecogniseerror",3],["formatter",3]],["result",6]],[[["tessbaseapigethocrtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigethocrtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetutf8texterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetutf8texterror",3],["formatter",3]],["result",6]],[[["tessbaseapisetimagesafetyerror",4],["formatter",3]],["result",6]],[[["tessbaseapisetimagesafetyerror",4],["formatter",3]],["result",6]],[[["tessbaseapigetaltotexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetaltotexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigettsvtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigettsvtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetlstmboxtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetlstmboxtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetwordstrboxtexterror",3],["formatter",3]],["result",6]],[[["tessbaseapigetwordstrboxtexterror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tessbaseapi",3],["c_int",6]],["result",4,[["text",3],["tessbaseapigetaltotexterror",3]]]],[[["tessbaseapi",3],["tesspageiteratorlevel",6],["c_int",6]],["result",4,[["boxa",3],["tessbaseapigetcomponentimageserror",3]]]],[[["tessbaseapi",3],["c_int",6]],["result",4,[["text",3],["tessbaseapigethocrtexterror",3]]]],[[["tessbaseapi",3]],["option",4,[["borrowedpix",3]]]],[[["tessbaseapi",3],["c_int",6]],["result",4,[["text",3],["tessbaseapigetlstmboxtexterror",3]]]],[[["tessbaseapi",3]],["c_int",6]],[[["tessbaseapi",3],["c_int",6]],["result",4,[["text",3],["tessbaseapigettsvtexterror",3]]]],[[["tessbaseapi",3]],["result",4,[["text",3],["tessbaseapigetutf8texterror",3]]]],[[["tessbaseapi",3],["c_int",6]],["result",4,[["text",3],["tessbaseapigetwordstrboxtexterror",3]]]],[[["tessbaseapi",3],["option",4,[["cstr",6]]],["option",4,[["cstr",6]]]],["result",4,[["tessbaseapiiniterror",3]]]],[[["tessbaseapi",3],["option",4,[["cstr",6]]],["option",4,[["cstr",6]]],["tessocrenginemode",6]],["result",4,[["tessbaseapiiniterror",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["tessbaseapi",3]],["c_int",6]],[[["c_char",0]],["text",3]],[[["tessbaseapi",3]],["result",4,[["tessbaseapirecogniseerror",3]]]],[[["tessbaseapi",3],["c_int",6],["c_int",6],["c_int",6],["c_int",6]],["result",4,[["tessbaseapisetimagesafetyerror",4]]]],[[["tessbaseapi",3],["pix",3]]],[[["tessbaseapi",3],["c_int",6],["c_int",6],["c_int",6],["c_int",6]]],[[["tessbaseapi",3],["c_int",6]]],[[["tessbaseapi",3],["cstr",6],["cstr",6]],["result",4,[["tessbaseapisetvariableerror",3]]]],null,[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"TessBaseApiSetImageSafetyError"],[3,"TessBaseApi"],[3,"Text"],[3,"TessBaseApiInitError"],[3,"TessBaseApiSetVariableError"],[3,"TessBaseApiRecogniseError"],[3,"TessBaseApiGetHocrTextError"],[3,"TessBaseApiGetUtf8TextError"],[3,"TessBaseApiGetAltoTextError"],[3,"TessBaseApiGetTsvTextError"],[3,"TessBaseApiGetLstmBoxTextError"],[3,"TessBaseApiGetWordStrBoxTextError"]]},\
"tesseract_sys":{"doc":"","t":[3,6,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,6,17,17,17,17,6,17,17,17,17,5,3,5,5,5,5,5,5,5,5,5,5,6,17,17,17,17,17,5,5,5,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,6,17,17,17,5,5,5,5,6,17,17,17,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ETEXT_DESC","FILE","TessAltoRendererCreate","TessBaseAPI","TessBaseAPIAdaptToWordStr","TessBaseAPIAllWordConfidences","TessBaseAPIAnalyseLayout","TessBaseAPIClear","TessBaseAPIClearAdaptiveClassifier","TessBaseAPICreate","TessBaseAPIDelete","TessBaseAPIEnd","TessBaseAPIGetAltoText","TessBaseAPIGetAvailableLanguagesAsVector","TessBaseAPIGetBoolVariable","TessBaseAPIGetBoxText","TessBaseAPIGetComponentImages","TessBaseAPIGetComponentImages1","TessBaseAPIGetConnectedComponents","TessBaseAPIGetDatapath","TessBaseAPIGetDoubleVariable","TessBaseAPIGetHOCRText","TessBaseAPIGetInitLanguagesAsString","TessBaseAPIGetInputImage","TessBaseAPIGetInputName","TessBaseAPIGetIntVariable","TessBaseAPIGetIterator","TessBaseAPIGetLSTMBoxText","TessBaseAPIGetLoadedLanguagesAsVector","TessBaseAPIGetMutableIterator","TessBaseAPIGetOpenCLDevice","TessBaseAPIGetPageSegMode","TessBaseAPIGetRegions","TessBaseAPIGetSourceYResolution","TessBaseAPIGetStringVariable","TessBaseAPIGetStrips","TessBaseAPIGetTextDirection","TessBaseAPIGetTextlines","TessBaseAPIGetTextlines1","TessBaseAPIGetThresholdedImage","TessBaseAPIGetThresholdedImageScaleFactor","TessBaseAPIGetTsvText","TessBaseAPIGetUNLVText","TessBaseAPIGetUTF8Text","TessBaseAPIGetUnichar","TessBaseAPIGetWordStrBoxText","TessBaseAPIGetWords","TessBaseAPIInit1","TessBaseAPIInit2","TessBaseAPIInit3","TessBaseAPIInit4","TessBaseAPIInitForAnalysePage","TessBaseAPIInitLangMod","TessBaseAPIIsValidWord","TessBaseAPIMeanTextConf","TessBaseAPIPrintVariables","TessBaseAPIPrintVariablesToFile","TessBaseAPIProcessPage","TessBaseAPIProcessPages","TessBaseAPIReadConfigFile","TessBaseAPIReadDebugConfigFile","TessBaseAPIRecognize","TessBaseAPIRecognizeForChopTest","TessBaseAPIRect","TessBaseAPISetDebugVariable","TessBaseAPISetImage","TessBaseAPISetImage2","TessBaseAPISetInputImage","TessBaseAPISetInputName","TessBaseAPISetMinOrientationMargin","TessBaseAPISetOutputName","TessBaseAPISetPageSegMode","TessBaseAPISetRectangle","TessBaseAPISetSourceResolution","TessBaseAPISetVariable","TessBoxTextRendererCreate","TessCancelFunc","TessChoiceIterator","TessChoiceIteratorConfidence","TessChoiceIteratorDelete","TessChoiceIteratorGetUTF8Text","TessChoiceIteratorNext","TessDeleteIntArray","TessDeleteResultRenderer","TessDeleteText","TessDeleteTextArray","TessHOcrRendererCreate","TessHOcrRendererCreate2","TessLSTMBoxRendererCreate","TessMonitorCreate","TessMonitorDelete","TessMonitorGetCancelThis","TessMonitorGetProgress","TessMonitorSetCancelFunc","TessMonitorSetCancelThis","TessMonitorSetDeadlineMSecs","TessMonitorSetProgressFunc","TessMutableIterator","TessOcrEngineMode","TessOcrEngineMode_OEM_DEFAULT","TessOcrEngineMode_OEM_LSTM_ONLY","TessOcrEngineMode_OEM_TESSERACT_LSTM_COMBINED","TessOcrEngineMode_OEM_TESSERACT_ONLY","TessOrientation","TessOrientation_ORIENTATION_PAGE_DOWN","TessOrientation_ORIENTATION_PAGE_LEFT","TessOrientation_ORIENTATION_PAGE_RIGHT","TessOrientation_ORIENTATION_PAGE_UP","TessPDFRendererCreate","TessPageIterator","TessPageIteratorBaseline","TessPageIteratorBegin","TessPageIteratorBlockType","TessPageIteratorBoundingBox","TessPageIteratorCopy","TessPageIteratorDelete","TessPageIteratorGetBinaryImage","TessPageIteratorGetImage","TessPageIteratorIsAtBeginningOf","TessPageIteratorIsAtFinalElement","TessPageIteratorLevel","TessPageIteratorLevel_RIL_BLOCK","TessPageIteratorLevel_RIL_PARA","TessPageIteratorLevel_RIL_SYMBOL","TessPageIteratorLevel_RIL_TEXTLINE","TessPageIteratorLevel_RIL_WORD","TessPageIteratorNext","TessPageIteratorOrientation","TessPageIteratorParagraphInfo","TessPageSegMode","TessPageSegMode_PSM_AUTO","TessPageSegMode_PSM_AUTO_ONLY","TessPageSegMode_PSM_AUTO_OSD","TessPageSegMode_PSM_CIRCLE_WORD","TessPageSegMode_PSM_COUNT","TessPageSegMode_PSM_OSD_ONLY","TessPageSegMode_PSM_RAW_LINE","TessPageSegMode_PSM_SINGLE_BLOCK","TessPageSegMode_PSM_SINGLE_BLOCK_VERT_TEXT","TessPageSegMode_PSM_SINGLE_CHAR","TessPageSegMode_PSM_SINGLE_COLUMN","TessPageSegMode_PSM_SINGLE_LINE","TessPageSegMode_PSM_SINGLE_WORD","TessPageSegMode_PSM_SPARSE_TEXT","TessPageSegMode_PSM_SPARSE_TEXT_OSD","TessParagraphJustification","TessParagraphJustification_JUSTIFICATION_CENTER","TessParagraphJustification_JUSTIFICATION_LEFT","TessParagraphJustification_JUSTIFICATION_RIGHT","TessParagraphJustification_JUSTIFICATION_UNKNOWN","TessPolyBlockType","TessPolyBlockType_PT_CAPTION_TEXT","TessPolyBlockType_PT_COUNT","TessPolyBlockType_PT_EQUATION","TessPolyBlockType_PT_FLOWING_IMAGE","TessPolyBlockType_PT_FLOWING_TEXT","TessPolyBlockType_PT_HEADING_IMAGE","TessPolyBlockType_PT_HEADING_TEXT","TessPolyBlockType_PT_HORZ_LINE","TessPolyBlockType_PT_INLINE_EQUATION","TessPolyBlockType_PT_NOISE","TessPolyBlockType_PT_PULLOUT_IMAGE","TessPolyBlockType_PT_PULLOUT_TEXT","TessPolyBlockType_PT_TABLE","TessPolyBlockType_PT_UNKNOWN","TessPolyBlockType_PT_VERTICAL_TEXT","TessPolyBlockType_PT_VERT_LINE","TessProgressFunc","TessResultIterator","TessResultIteratorConfidence","TessResultIteratorCopy","TessResultIteratorDelete","TessResultIteratorGetChoiceIterator","TessResultIteratorGetPageIterator","TessResultIteratorGetPageIteratorConst","TessResultIteratorGetUTF8Text","TessResultIteratorNext","TessResultIteratorSymbolIsDropcap","TessResultIteratorSymbolIsSubscript","TessResultIteratorSymbolIsSuperscript","TessResultIteratorWordFontAttributes","TessResultIteratorWordIsFromDictionary","TessResultIteratorWordIsNumeric","TessResultIteratorWordRecognitionLanguage","TessResultRenderer","TessResultRendererAddImage","TessResultRendererBeginDocument","TessResultRendererEndDocument","TessResultRendererExtention","TessResultRendererImageNum","TessResultRendererInsert","TessResultRendererNext","TessResultRendererTitle","TessTextRendererCreate","TessTextlineOrder","TessTextlineOrder_TEXTLINE_ORDER_LEFT_TO_RIGHT","TessTextlineOrder_TEXTLINE_ORDER_RIGHT_TO_LEFT","TessTextlineOrder_TEXTLINE_ORDER_TOP_TO_BOTTOM","TessTsvRendererCreate","TessUnlvRendererCreate","TessVersion","TessWordStrBoxRendererCreate","TessWritingDirection","TessWritingDirection_WRITING_DIRECTION_LEFT_TO_RIGHT","TessWritingDirection_WRITING_DIRECTION_RIGHT_TO_LEFT","TessWritingDirection_WRITING_DIRECTION_TOP_TO_BOTTOM","_IO_lock_t","__off64_t","__off_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","kMaxCredibleResolution","kMinCredibleResolution","kPointsPerInch","kResolutionEstimationFactor","size_t","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["tesseract_sysd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tessresultrenderer",3]],["tessresultrenderer",3]],[[["tessbaseapi",3]],["tessbaseapi",3]],[[["tesspageiterator",3]],["tesspageiterator",3]],[[["tessresultiterator",3]],["tessresultiterator",3]],[[["tessmutableiterator",3]],["tessmutableiterator",3]],[[["tesschoiceiterator",3]],["tesschoiceiterator",3]],[[["etext_desc",3]],["etext_desc",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["tessresultrenderer",3],["formatter",3]],["result",6]],[[["tessbaseapi",3],["formatter",3]],["result",6]],[[["tesspageiterator",3],["formatter",3]],["result",6]],[[["tessresultiterator",3],["formatter",3]],["result",6]],[[["tessmutableiterator",3],["formatter",3]],["result",6]],[[["tesschoiceiterator",3],["formatter",3]],["result",6]],[[["etext_desc",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"TessResultRenderer"],[3,"TessBaseAPI"],[3,"TessPageIterator"],[3,"TessResultIterator"],[3,"TessMutableIterator"],[3,"TessChoiceIterator"],[3,"ETEXT_DESC"]]},\
"thiserror":{"doc":"githubâ€‚crates-ioâ€‚docs-rs","t":[24],"n":["Error"],"q":["thiserror"],"d":[""],"i":[0],"f":[null],"p":[]},\
"thiserror_impl":{"doc":"","t":[24],"n":["Error"],"q":["thiserror_impl"],"d":[""],"i":[0],"f":[null],"p":[]},\
"unicode_ident":{"doc":"githubâ€‚crates-ioâ€‚docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[[["char",0]],["bool",0]],[[["char",0]],["bool",0]]],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
