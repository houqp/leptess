var searchIndex = JSON.parse('{\
"leptess":{"doc":"Productive and safe Rust bindings/wrappers for Leptonica …","tn":["AllowBlobDivision","AmbigsDebugLevel","ApplyboxDebug","ApplyboxExposurePattern","ApplyboxLearnCharsAndCharFragsMode","ApplyboxLearnNgramsMode","ApplyboxPage","AssumeFixedPitchCharSegment","BidiDebug","BlandUnrej","CertaintyScale","ChopCenterKnob","ChopCenteredMaxwidth","ChopDebug","ChopEnable","ChopGoodSplit","ChopInsideAngle","ChopMinOutlineArea","ChopMinOutlinePoints","ChopNewSeamPile","ChopOkSplit","ChopOverlapKnob","ChopSameDistance","ChopSeamPileSize","ChopSharpnessKnob","ChopSplitDistKnob","ChopSplitLength","ChopVerticalCreep","ChopWidthChangeKnob","ChopXyWeight","ChsLeadingPunct","ChsTrailingPunct1","ChsTrailingPunct2","ClassifyAdaptFeatureThreshold","ClassifyAdaptProtoThreshold","ClassifyAdaptedPruningFactor","ClassifyAdaptedPruningThreshold","ClassifyBlnNumericMode","ClassifyCharNormRange","ClassifyCharacterFragmentsGarbageCertaintyThreshold","ClassifyClassPrunerMultiplier","ClassifyClassPrunerThreshold","ClassifyCpAnglePadLoose","ClassifyCpAnglePadMedium","ClassifyCpAnglePadTight","ClassifyCpCutoffStrength","ClassifyCpEndPadLoose","ClassifyCpEndPadMedium","ClassifyCpEndPadTight","ClassifyCpSidePadLoose","ClassifyCpSidePadMedium","ClassifyCpSidePadTight","ClassifyDebugCharacterFragments","ClassifyDebugLevel","ClassifyEnableAdaptiveDebugger","ClassifyEnableAdaptiveMatcher","ClassifyEnableLearning","ClassifyFontName","ClassifyIntegerMatcherMultiplier","ClassifyLearnDebugStr","ClassifyLearningDebugLevel","ClassifyMaxCertaintyMargin","ClassifyMaxRatingRatio","ClassifyMaxSlope","ClassifyMinSlope","ClassifyMisfitJunkPenalty","ClassifyNonlinearNorm","ClassifyNormAdjCurl","ClassifyNormAdjMidpoint","ClassifyNormMethod","ClassifyNumCpLevels","ClassifyPicoFeatureLength","ClassifyPpAnglePad","ClassifyPpEndPad","ClassifyPpSidePad","ClassifySaveAdaptedTemplates","ClassifyUsePreAdaptedTemplates","ConflictSetIl1","CrunchAcceptOk","CrunchDebug","CrunchDelCert","CrunchDelHighWord","CrunchDelLowWord","CrunchDelMaxHt","CrunchDelMinHt","CrunchDelMinWidth","CrunchDelRating","CrunchEarlyConvertBadUnlvChs","CrunchEarlyMergeTessFails","CrunchIncludeNumerals","CrunchLeaveAcceptStrings","CrunchLeaveLcStrings","CrunchLeaveOkStrings","CrunchLeaveUcStrings","CrunchLongRepetitions","CrunchPoorGarbageCert","CrunchPoorGarbageRate","CrunchPotIndicators","CrunchPotPoorCert","CrunchPotPoorRate","CrunchRatingMax","CrunchSmallOutlinesSize","CrunchTerribleGarbage","CrunchTerribleRating","DawgDebugLevel","DebugFile","DebugFixSpaceLevel","DebugNoiseRemoval","DebugXHtLevel","DevanagariSplitDebugimage","DevanagariSplitDebuglevel","DisableCharacterFragments","DocDictCertaintyThreshold","DocDictPendingThreshold","DocumentTitle","Dotproduct","EdgesBoxarea","EdgesChildarea","EdgesChildrenCountLimit","EdgesChildrenFix","EdgesChildrenPerGrandchild","EdgesDebug","EdgesMaxChildrenLayers","EdgesMaxChildrenPerOutline","EdgesMinNonhole","EdgesPathareaRatio","EdgesUseNewOutlineComplexity","EditorDbwinHeight","EditorDbwinName","EditorDbwinWidth","EditorDbwinXpos","EditorDbwinYpos","EditorImageBlobBbColor","EditorImageMenuheight","EditorImageTextColor","EditorImageWinName","EditorImageWordBbColor","EditorImageXpos","EditorImageYpos","EditorWordHeight","EditorWordName","EditorWordWidth","EditorWordXpos","EditorWordYpos","EnableNoiseRemoval","EquationdetectSaveBiImage","EquationdetectSaveMergedImage","EquationdetectSaveSeedImage","EquationdetectSaveSptImage","FileType","FixspDoneMode","FixspNonNoiseLimit","FixspSmallOutlinesSize","ForceWordAssoc","FxDebugfile","GapmapBigGaps","GapmapDebug","GapmapNoIsolatedQuanta","GapmapUseEnds","HocrCharBoxes","HocrFontInfo","HyphenDebugLevel","InteractiveDisplayMode","JpgQuality","LanguageModelDebugLevel","LanguageModelMinCompoundLength","LanguageModelNgramNonmatchScore","LanguageModelNgramOn","LanguageModelNgramOrder","LanguageModelNgramRatingFactor","LanguageModelNgramScaleFactor","LanguageModelNgramSmallProb","LanguageModelNgramSpaceDelimitedLanguage","LanguageModelNgramUseOnlyFirstUft8Step","LanguageModelPenaltyCase","LanguageModelPenaltyChartype","LanguageModelPenaltyFont","LanguageModelPenaltyIncrement","LanguageModelPenaltyNonDictWord","LanguageModelPenaltyNonFreqDictWord","LanguageModelPenaltyPunc","LanguageModelPenaltyScript","LanguageModelPenaltySpacing","LanguageModelUseSigmoidalCertainty","LanguageModelViterbiListMaxNumPrunable","LanguageModelViterbiListMaxSize","LepTess","LoadBigramDawg","LoadFreqDawg","LoadNumberDawg","LoadPuncDawg","LoadSystemDawg","LoadUnambigDawg","LstmChoiceMode","LstmUseMatrix","MatcherAvgNoiseSize","MatcherBadMatchPad","MatcherClusteringMaxAngleDelta","MatcherDebugFlags","MatcherDebugLevel","MatcherDebugSeparateWindows","MatcherGoodThreshold","MatcherMinExamplesForPrototyping","MatcherPerfectThreshold","MatcherPermanentClassesMin","MatcherRatingMargin","MatcherReliableAdaptiveResult","MatcherSufficientExamplesForPrototyping","MaxPermuterAttempts","MergeFragmentsInMatrix","MinCharactersToTry","MinOrientationMargin","MinSaneXHtPixels","MultilangDebugLevel","NoiseCertBasechar","NoiseCertDisjoint","NoiseCertFactor","NoiseCertPunc","NoiseMaxperblob","NoiseMaxperword","NumericPunctuation","OcrDevanagariSplitStrategy","OkRepeatedChNonAlphanumWds","OldblCorrfix","OldblDotErrorSize","OldblHoledLosscount","OldblXhfix","OldblXhfract","Outlines2","OutlinesOdd","OutputAmbigWordsFile","PageSeparator","PagesegApplyMusicMask","PagesegDevanagariSplitStrategy","ParagraphDebugLevel","ParagraphTextBased","PitsyncFakeDepth","PitsyncJoinedEdge","PitsyncLinearVersion","PitsyncOffsetFreecutFraction","PolyAllowDetailedFx","PolyDebug","PolyWideObjectsBetter","PreserveInterwordSpaces","PrioritizeDivision","QualityBlobPc","QualityCharPc","QualityMinInitialAlphasReqd","QualityOutlinePc","QualityRejPc","QualityRowrejPc","RatingScale","Rej1IlTrustPermuterType","Rej1IlUseDictWord","RejAlphasInNumberPerm","RejTrustDocDawg","RejUseGoodPerm","RejUseSensibleWd","RejUseTessAccepted","RejUseTessBlanks","RejWholeOfMostlyRejectWordFract","RepairUnchoppedBlobs","SaveAltChoices","SaveDocWords","SegmentNonalphabeticScript","SegmentPenaltyDictCaseBad","SegmentPenaltyDictCaseOk","SegmentPenaltyDictFrequentWord","SegmentPenaltyDictNonword","SegmentPenaltyGarbage","SegsearchDebugLevel","SegsearchMaxCharWhRatio","SegsearchMaxFutileClassifications","SegsearchMaxPainPoints","SpeckleLargeMaxSize","SpeckleRatingPenalty","StopperAllowableCharacterBadness","StopperCertaintyPerChar","StopperDebugLevel","StopperNoAcceptableChoices","StopperNondictCertaintyBase","StopperPhase2CertaintyRejectionOffset","StopperSmallwordSize","StreamFilelist","SubscriptMaxYTop","SuperscriptBetteredCertainty","SuperscriptDebug","SuperscriptMinYBottom","SuperscriptScaledownRatio","SuperscriptWorseCertainty","SuspectAcceptRating","SuspectConstrain1Il","SuspectLevel","SuspectRatingPerCh","SuspectShortWords","TessBnMatching","TessCnMatching","TesseditAdaptionDebug","TesseditAmbigsTraining","TesseditBigramDebug","TesseditCertaintyThreshold","TesseditCharBlacklist","TesseditCharUnblacklist","TesseditCharWhitelist","TesseditClassMissScale","TesseditCreateAlto","TesseditCreateBoxfile","TesseditCreateHocr","TesseditCreateLstmbox","TesseditCreatePdf","TesseditCreateTsv","TesseditCreateTxt","TesseditCreateWordstrbox","TesseditDebugBlockRejection","TesseditDebugDocRejection","TesseditDebugFonts","TesseditDebugQualityMetrics","TesseditDisplayOutwords","TesseditDoInvert","TesseditDontBlkrejGoodWds","TesseditDontRowrejGoodWds","TesseditDumpChoices","TesseditDumpPagesegImages","TesseditEnableBigramCorrection","TesseditEnableDictCorrection","TesseditEnableDocDict","TesseditFixFuzzySpaces","TesseditFixHyphens","TesseditFlip0O","TesseditGoodDocStillRowrejWd","TesseditGoodQualityUnrej","TesseditImageBorder","TesseditInitConfigOnly","TesseditLoadSublangs","TesseditLowerFlipHyphen","TesseditMakeBoxesFromBoxes","TesseditMinimalRejPass1","TesseditMinimalRejection","TesseditOcrEngineMode","TesseditOverridePermuter","TesseditPageNumber","TesseditPagesegMode","TesseditParallelize","TesseditPreferJoinedPunct","TesseditPreserveBlkRejPerfectWds","TesseditPreserveMinWdLen","TesseditPreserveRowRejPerfectWds","TesseditRejectBadQualWds","TesseditRejectBlockPercent","TesseditRejectDocPercent","TesseditRejectMode","TesseditRejectRowPercent","TesseditRejectionDebug","TesseditResegmentFromBoxes","TesseditResegmentFromLineBoxes","TesseditRowRejGoodDocs","TesseditTessAdaptionMode","TesseditTestAdaption","TesseditTimingDebug","TesseditTrainFromBoxes","TesseditTrainLineRecognizer","TesseditTruncateWordchoiceLog","TesseditUnrejAnyWd","TesseditUpperFlipHyphen","TesseditUsePrimaryParamsModel","TesseditUseRejectSpaces","TesseditWholeWdRejRowPercent","TesseditWordForWord","TesseditWriteBlockSeparators","TesseditWriteImages","TesseditWriteParamsToFile","TesseditWriteRepCodes","TesseditWriteUnlv","TesseditZeroKelvinRejection","TesseditZeroRejection","TestPt","TestPtX","TestPtY","TextonlyPdf","TextordAllProp","TextordAscheightModeFraction","TextordAscxRatioMax","TextordAscxRatioMin","TextordBalanceFactor","TextordBaselineDebug","TextordBiasedSkewcalc","TextordBlockndocFixed","TextordBlocksallFixed","TextordBlocksallProp","TextordBlocksallTesting","TextordBlshiftMaxshift","TextordBlshiftXfraction","TextordChopWidth","TextordChopperTest","TextordDebugBaselines","TextordDebugBlob","TextordDebugBlock","TextordDebugBugs","TextordDebugPitchMetric","TextordDebugPitchTest","TextordDebugPrintable","TextordDebugTabfind","TextordDebugXheights","TextordDescheightModeFraction","TextordDescxRatioMax","TextordDescxRatioMin","TextordDisablePitchTest","TextordDotmatrixGap","TextordEquationDetect","TextordExcessBlobsize","TextordExpansionFactor","TextordFastPitchTest","TextordFixMakerowBug","TextordFixXheightBug","TextordForceMakePropWords","TextordFpChopError","TextordFpChopSnap","TextordFpChopping","TextordFpMinWidth","TextordFpiqrRatio","TextordHeavyNr","TextordInitialascIle","TextordInitialxIle","TextordInterpolatingSkew","TextordLinespaceIqrlimit","TextordLmsLineTrials","TextordMaxBlobOverlaps","TextordMaxNoiseSize","TextordMaxPitchIqr","TextordMinBlobHeightFraction","TextordMinBlobsInRow","TextordMinLinesize","TextordMinXheight","TextordMinxh","TextordNewInitialXheight","TextordNoRejects","TextordNoiseAreaRatio","TextordNoiseDebug","TextordNoiseHfract","TextordNoiseNormratio","TextordNoiseRejrows","TextordNoiseRejwords","TextordNoiseRowratio","TextordNoiseSizefraction","TextordNoiseSizelimit","TextordNoiseSncount","TextordNoiseSxfract","TextordNoiseSyfract","TextordNoiseTranslimit","TextordOccupancyThreshold","TextordOcropusMode","TextordOldBaselines","TextordOldXheight","TextordOldblDebug","TextordOldblJumplimit","TextordOldblMergeParts","TextordOldblParadef","TextordOldblSplitSplines","TextordOverlapX","TextordParallelBaselines","TextordPitchCheat","TextordPitchRange","TextordPitchRowsimilarity","TextordPitchScalebigwords","TextordProjectionScale","TextordReallyOldXheight","TextordRestoreUnderlines","TextordShowBlobs","TextordShowBoxes","TextordShowExpandedRows","TextordShowFinalBlobs","TextordShowFinalRows","TextordShowFixedCuts","TextordShowFixedWords","TextordShowInitialRows","TextordShowInitialWords","TextordShowNewWords","TextordShowPageCuts","TextordShowParallelRows","TextordShowRowCuts","TextordShowTables","TextordSingleHeightMode","TextordSkewIle","TextordSkewLag","TextordSkewsmoothOffset","TextordSkewsmoothOffset2","TextordSpaceSizeIsVariable","TextordSpacesizeRatiofp","TextordSpacesizeRatioprop","TextordSplineMedianwin","TextordSplineMinblobs","TextordSplineOutlierFraction","TextordSplineShiftFraction","TextordStraightBaselines","TextordTabfindAlignedGapFraction","TextordTabfindFindTables","TextordTabfindForceVerticalText","TextordTabfindOnlyStrokewidths","TextordTabfindShowBlocks","TextordTabfindShowColumns","TextordTabfindShowFinaltabs","TextordTabfindShowImages","TextordTabfindShowInitialPartitions","TextordTabfindShowInitialtabs","TextordTabfindShowPartitions","TextordTabfindShowRejectBlobs","TextordTabfindShowStrokewidths","TextordTabfindShowVlines","TextordTabfindVerticalText","TextordTabfindVerticalTextRatio","TextordTablefindRecognizeTables","TextordTablefindShowMark","TextordTablefindShowStats","TextordTabvectorVerticalBoxRatio","TextordTabvectorVerticalGapFraction","TextordTestLandscape","TextordTestMode","TextordTestX","TextordTestY","TextordTestregionBottom","TextordTestregionLeft","TextordTestregionRight","TextordTestregionTop","TextordUnderlineOffset","TextordUnderlineThreshold","TextordUnderlineWidth","TextordUseCjkFpModel","TextordWidthLimit","TextordWidthSmoothFactor","TextordWordsDefFixed","TextordWordsDefProp","TextordWordsDefaultMaxspace","TextordWordsDefaultMinspace","TextordWordsDefaultNonspace","TextordWordsDefiniteSpread","TextordWordsInitialLower","TextordWordsInitialUpper","TextordWordsMaxspace","TextordWordsMinMinspace","TextordWordsMinlarge","TextordWordsPitchsdThreshold","TextordWordsVetoPower","TextordWordsWidthIle","TextordWordstatsSmoothFactor","TextordXheightErrorMargin","TextordXheightModeFraction","TospAllFlipsFuzzy","TospBlockUseCertSpaces","TospDebugLevel","TospDontFoolWithSmallKerns","TospEnoughSmallGaps","TospEnoughSpaceSamplesForMedian","TospFewSamples","TospFlipCaution","TospFlipFuzzKnToSp","TospFlipFuzzSpToKn","TospForceWordbreakOnPunct","TospFuzzyKnFraction","TospFuzzyLimitAll","TospFuzzySpFraction","TospFuzzySpaceFactor","TospFuzzySpaceFactor1","TospFuzzySpaceFactor2","TospGapFactor","TospIgnoreBigGaps","TospIgnoreVeryBigGaps","TospImproveThresh","TospInitGuessKnMult","TospInitGuessXhtMult","TospKernGapFactor1","TospKernGapFactor2","TospKernGapFactor3","TospLargeKerning","TospMaxSaneKnThresh","TospMinSaneKnSp","TospNarrowAspectRatio","TospNarrowBlobsNotCert","TospNarrowFraction","TospNearLhEdge","TospOldSpKnThFactor","TospOldToBugFix","TospOldToConstrainSpKn","TospOldToMethod","TospOnlySmallGapsForKern","TospOnlyUsePropRows","TospOnlyUseXhtGaps","TospPassWideFuzzSpToContext","TospRecoveryIsolatedRowStats","TospRedoKernLimit","TospRepSpace","TospRowUseCertSpaces","TospRowUseCertSpaces1","TospRule9TestPunct","TospSanityMethod","TospShortRow","TospSillyKnSpGap","TospStatsUseXhtGaps","TospTableFuzzyKnSpRatio","TospTableKnSpRatio","TospTableXhtSpRatio","TospThresholdBias1","TospThresholdBias2","TospUsePreChopping","TospUseXhtGaps","TospWideAspectRatio","TospWideFraction","UnlvTildeCrunching","UnrecognisedChar","UseAmbigsForAdaption","UseOnlyFirstUft8Step","UserDefinedDpi","UserPatternsFile","UserPatternsSuffix","UserWordsFile","UserWordsSuffix","Variable","WordToDebug","WordrecBlobPause","WordrecDebugBlamer","WordrecDebugLevel","WordrecDisplayAllBlobs","WordrecDisplaySegmentations","WordrecDisplaySplits","WordrecEnableAssoc","WordrecMaxJoinChunks","WordrecRunBlamer","WordrecSkipNoTruthWords","WordsDefaultFixedLimit","WordsDefaultFixedSpace","WordsDefaultPropNonspace","WordsInitialLower","WordsInitialUpper","XHtAcceptanceTolerance","XHtMinChange","XheightPenaltyInconsistent","XheightPenaltySubscripts","as_cstr","borrow","borrow","borrow_mut","borrow_mut","capi","clone","clone_into","eq","equivalent","fmt","from","from","get_alto_text","get_component_boxes","get_hocr_text","get_image_dimensions","get_lstm_box_text","get_regions","get_source_y_resolution","get_tsv_text","get_utf8_text","get_word_str_box_text","into","into","leptonica","mean_text_conf","new","recognize","set_fallback_source_resolution","set_image","set_image_from_mem","set_rectangle","set_rectangle_from_box","set_source_resolution","set_variable","tesseract","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ADDED_BORDER","ASYMMETRIC_MORPH_BC","BIG_ENDIAN","BMP_ID","BOX","BOXA","BOXAA","BOXAA_VERSION_NUMBER","BOXA_VERSION_NUMBER","BUFSIZ","BYTE_ORDER","Box","Boxa","Boxaa","CCBORD","CCBORDA","CCB_GLOBAL_COORDS","CCB_LOCAL_COORDS","CCB_SAVE_ALL_PTS","CCB_SAVE_TURNING_PTS","CCBord","CCBorda","COLOR_BLUE","COLOR_GREEN","COLOR_RED","DEFAULT_CLIP_LOWER_1","DEFAULT_CLIP_LOWER_2","DEFAULT_CLIP_UPPER_1","DEFAULT_CLIP_UPPER_2","DEWARP_VERSION_NUMBER","DLLIST","DNA_VERSION_NUMBER","DPIX","DPIX_VERSION_NUMBER","DPix","DoubleLinkedList","EOF","ETEXT_DESC","EXIT_FAILURE","EXIT_SUCCESS","FALSE","FD_SETSIZE","FILENAME_MAX","FOPEN_MAX","FPIX","FPIXA","FPIX_VERSION_NUMBER","FPix","FPixa","GPLOT","GPLOT_OUTPUT","GPLOT_OUTPUT_GPLOT_EPS","GPLOT_OUTPUT_GPLOT_LATEX","GPLOT_OUTPUT_GPLOT_NONE","GPLOT_OUTPUT_GPLOT_PNG","GPLOT_OUTPUT_GPLOT_PNM","GPLOT_OUTPUT_GPLOT_PS","GPLOT_SCALING","GPLOT_SCALING_GPLOT_LINEAR_SCALE","GPLOT_SCALING_GPLOT_LOG_SCALE_X","GPLOT_SCALING_GPLOT_LOG_SCALE_X_Y","GPLOT_SCALING_GPLOT_LOG_SCALE_Y","GPLOT_STYLE","GPLOT_STYLE_GPLOT_DOTS","GPLOT_STYLE_GPLOT_IMPULSES","GPLOT_STYLE_GPLOT_LINES","GPLOT_STYLE_GPLOT_LINESPOINTS","GPLOT_STYLE_GPLOT_POINTS","GPLOT_VERSION_NUMBER","GPlot","HAVE_FMEMOPEN","HAVE_FSTATAT","HAVE_LIBGIF","HAVE_LIBJP2K","HAVE_LIBJPEG","HAVE_LIBPNG","HAVE_LIBTIFF","HAVE_LIBUNGIF","HAVE_LIBWEBP","HAVE_LIBWEBP_ANIM","HAVE_LIBZ","IFF_BMP","IFF_DEFAULT","IFF_GIF","IFF_JFIF_JPEG","IFF_JP2","IFF_LPDF","IFF_PNG","IFF_PNM","IFF_PS","IFF_SPIX","IFF_TIFF","IFF_TIFF_G3","IFF_TIFF_G4","IFF_TIFF_JPEG","IFF_TIFF_LZW","IFF_TIFF_PACKBITS","IFF_TIFF_RLE","IFF_TIFF_ZIP","IFF_UNKNOWN","IFF_WEBP","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","JBCLASSER","JBDATA","JB_CHARACTERS","JB_CONN_COMPS","JB_CORRELATION","JB_DATA_EXT","JB_RANKHAUS","JB_TEMPLATE_EXT","JB_WORDS","JbClasser","JbData","KERNEL_VERSION_NUMBER","LIBLEPT_MAJOR_VERSION","LIBLEPT_MINOR_VERSION","LIBLEPT_PATCH_VERSION","LITTLE_ENDIAN","L_ADD_ABOVE","L_ADD_AT_BOT","L_ADD_AT_LEFT","L_ADD_AT_RIGHT","L_ADD_AT_TOP","L_ADD_BELOW","L_ADD_LEFT","L_ADD_RIGHT","L_ADD_TRAIL_SLASH","L_ADJUST_BOT","L_ADJUST_CHOOSE_MAX","L_ADJUST_CHOOSE_MIN","L_ADJUST_LEFT","L_ADJUST_LEFT_AND_RIGHT","L_ADJUST_RIGHT","L_ADJUST_SKIP","L_ADJUST_TOP","L_ADJUST_TOP_AND_BOT","L_ALL","L_ALL_EDGES","L_ALPHA_CHANNEL","L_ALPHA_SHIFT","L_AMAP","L_AMAP_NODE","L_ARABIC_NUMERALS","L_ARITH_ADD","L_ARITH_DIVIDE","L_ARITH_MULTIPLY","L_ARITH_SUBTRACT","L_ASET","L_ASET_NODE","L_AUTO_BYTE","L_AUTO_DOWNSHIFT","L_AVE_MAX_DIFF_2","L_BBUFFER","L_BIN_SORT","L_BLACK_IS_MAX","L_BLEND_GRAY","L_BLEND_GRAY_WITH_INVERSE","L_BLEND_TO_BLACK","L_BLEND_TO_WHITE","L_BLEND_WITH_INVERSE","L_BLUE_SHIFT","L_BLUE_WEIGHT","L_BMF","L_BOTH_DIRECTIONS","L_BOUNDARY_BG","L_BOUNDARY_FG","L_BOX_CENTER","L_BRING_IN_BLACK","L_BRING_IN_WHITE","L_BYTEA","L_Bmf","L_ByteBuffer","L_Bytea","L_CHECK_BOTH","L_CHECK_HEIGHT","L_CHECK_WIDTH","L_CHOOSE_CONSECUTIVE","L_CHOOSE_MAX","L_CHOOSE_MAXDIFF","L_CHOOSE_MAX_BOOST","L_CHOOSE_MIN","L_CHOOSE_MIN_BOOST","L_CHOOSE_SKIP_BY","L_CLEAR_PIXELS","L_CLIP_TO_FF","L_CLIP_TO_FFFF","L_CLIP_TO_ZERO","L_CLONE","L_COLORFILL","L_COMBINE","L_COMPACTION","L_COMPARE_ABS_DIFF","L_COMPARE_SUBTRACT","L_COMPARE_XOR","L_COMP_DATA","L_CONTINUED_BORDER","L_COPY","L_COPY_CLONE","L_Colorfill","L_Compressed_Data","L_DEFAULT_ENCODE","L_DEWARP","L_DEWARPA","L_DISPLAY_WITH_IV","L_DISPLAY_WITH_OPEN","L_DISPLAY_WITH_XLI","L_DISPLAY_WITH_XV","L_DISPLAY_WITH_XZGV","L_DNA","L_DNAA","L_DNAHASH","L_DRAW_BLUE","L_DRAW_GREEN","L_DRAW_RANDOM","L_DRAW_RED","L_DRAW_RGB","L_DRAW_SPECIFIED","L_Dewarp","L_Dewarpa","L_Dna","L_DnaHash","L_Dnaa","L_EQUAL_TO_ZERO","L_EUCLIDEAN_DISTANCE","L_EXCLUDE_REGION","L_EXCLUSIVE_OR","L_FILL_BLACK","L_FILL_WHITE","L_FIRST_IMAGE","L_FLATE_ENCODE","L_FLIP_PIXELS","L_FLOAT_TYPE","L_FLOAT_VALUE","L_FOUND","L_FROM_BOT","L_FROM_LEFT","L_FROM_RIGHT","L_FROM_TOP","L_FULL_DOWNSHIFT","L_G4_ENCODE","L_GEOMETRIC_INTERSECTION","L_GEOMETRIC_UNION","L_GET_BLACK_VAL","L_GET_BOT","L_GET_LEFT","L_GET_RIGHT","L_GET_TOP","L_GET_WHITE_VAL","L_GREATER_THAN_ZERO","L_GREEN_SHIFT","L_GREEN_WEIGHT","L_HANDLE_ONLY","L_HASHITEM","L_HASHMAP","L_HEAP","L_HMAP_CHECK","L_HMAP_CREATE","L_HORIZ","L_HORIZONTAL_EDGES","L_HORIZONTAL_LINE","L_HORIZONTAL_RUNS","L_HS_HISTO","L_HV_HISTO","L_Hashitem","L_Hashmap","L_Heap","L_INCLUDE_REGION","L_INSERT","L_INTEGER_VALUE","L_INTERMED_DIFF","L_INTERPOLATED","L_INTERSECTION","L_INT_TYPE","L_J2K_CODEC","L_JP2K_ENCODE","L_JP2_CODEC","L_JPEG_CONTINUE_WITH_BAD_DATA","L_JPEG_ENCODE","L_JPEG_READ_LUMINANCE","L_KERNEL","L_Kernel","L_LANDSCAPE_MODE","L_LARGEST_AREA","L_LAST_IMAGE","L_LC_ALPHA","L_LC_ROMAN_NUMERALS","L_LESS_THAN_ZERO","L_LINEAR_INTERP","L_LINEAR_SCALE","L_LINEAR_WARP","L_LOG_SCALE","L_LOWER_LEFT","L_LOWER_RIGHT","L_LS_BYTE","L_LS_TWO_BYTES","L_MANHATTAN_DISTANCE","L_MAX_DIFF","L_MEAN_ABSVAL","L_MEDIAN_VAL","L_MIN_DOWNSHIFT","L_MIRRORED_BORDER","L_MODE_COUNT","L_MODE_VAL","L_MORPH_CLOSE","L_MORPH_DILATE","L_MORPH_ERODE","L_MORPH_HMT","L_MORPH_OPEN","L_MS_BYTE","L_MS_TWO_BYTES","L_NEGATIVE","L_NEG_SLOPE_LINE","L_NEXT_IMAGE","L_NOCOPY","L_NON_NEGATIVE","L_NON_POSITIVE","L_NOT_FOUND","L_NO_CHROMA_SAMPLING_JPEG","L_NO_COMPACTION","L_OBLIQUE_LINE","L_PAINT_DARK","L_PAINT_LIGHT","L_PDF_DATA","L_PLOT_AT_BOT","L_PLOT_AT_LEFT","L_PLOT_AT_MID_HORIZ","L_PLOT_AT_MID_VERT","L_PLOT_AT_RIGHT","L_PLOT_AT_TOP","L_PORTRAIT_MODE","L_POSITIVE","L_POS_SLOPE_LINE","L_PTRA","L_PTRAA","L_Pdf_Data","L_Ptra","L_Ptraa","L_QUADRATIC_INTERP","L_QUADRATIC_WARP","L_QUEUE","L_Queue","L_RBTREE","L_RBTREE_NODE","L_RCH","L_RCHA","L_RDID","L_RECOG","L_RED_SHIFT","L_RED_WEIGHT","L_REGPARAMS","L_REG_COMPARE","L_REG_DISPLAY","L_REG_GENERATE","L_REMOVE","L_REMOVE_SMALL","L_REMOVE_TRAIL_SLASH","L_ROOT_MEAN_SQUARE","L_ROTATE_AREA_MAP","L_ROTATE_SAMPLING","L_ROTATE_SHEAR","L_RO_SC_TR","L_RO_TR_SC","L_RUN_OFF","L_RUN_ON","L_Rbtree","L_Rbtree_Node","L_Rch","L_Rcha","L_Rdid","L_Recog","L_RegParams","L_SAMPLED","L_SCAN_BOTH","L_SCAN_HORIZONTAL","L_SCAN_NEGATIVE","L_SCAN_POSITIVE","L_SCAN_VERTICAL","L_SC_RO_TR","L_SC_TR_RO","L_SELECT_AVERAGE","L_SELECT_BLUE","L_SELECT_BY_AREA","L_SELECT_BY_HEIGHT","L_SELECT_BY_MAX_DIMENSION","L_SELECT_BY_PERIMETER","L_SELECT_BY_WIDTH","L_SELECT_GREEN","L_SELECT_HEIGHT","L_SELECT_HUE","L_SELECT_IF_BOTH","L_SELECT_IF_EITHER","L_SELECT_IF_GT","L_SELECT_IF_GTE","L_SELECT_IF_LT","L_SELECT_IF_LTE","L_SELECT_MAX","L_SELECT_MIN","L_SELECT_RED","L_SELECT_SATURATION","L_SELECT_WEIGHTED","L_SELECT_WIDTH","L_SELECT_XVAL","L_SELECT_YVAL","L_SET_BLACK","L_SET_BOT","L_SET_LEFT","L_SET_PIXELS","L_SET_RIGHT","L_SET_TOP","L_SET_WHITE","L_SEVERITY_ALL","L_SEVERITY_DEBUG","L_SEVERITY_ERROR","L_SEVERITY_EXTERNAL","L_SEVERITY_INFO","L_SEVERITY_NONE","L_SEVERITY_WARNING","L_SHEAR_ABOUT_CENTER","L_SHEAR_ABOUT_CORNER","L_SHELL_SORT","L_SLOPE_BORDER","L_SMALLEST_AREA","L_SOBEL_EDGE","L_SORT_BY_AREA","L_SORT_BY_ASPECT_RATIO","L_SORT_BY_BOT","L_SORT_BY_HEIGHT","L_SORT_BY_MAX_DIMENSION","L_SORT_BY_MIN_DIMENSION","L_SORT_BY_PERIMETER","L_SORT_BY_RIGHT","L_SORT_BY_WIDTH","L_SORT_BY_X","L_SORT_BY_Y","L_SORT_DECREASING","L_SORT_INCREASING","L_STACK","L_STANDARD_DEVIATION","L_STRCODE","L_STR_MEMREADER","L_STR_NAME","L_STR_READER","L_STR_TYPE","L_SUBPIXEL_ORDER_BGR","L_SUBPIXEL_ORDER_RGB","L_SUBPIXEL_ORDER_VBGR","L_SUBPIXEL_ORDER_VRGB","L_SUBTRACTION","L_SUB_ON_LOC_DIFF","L_SUB_ON_SIZE_DIFF","L_SUDOKU","L_SUDOKU_INIT","L_SUDOKU_STATE","L_SV_HISTO","L_Stack","L_StrCode","L_Sudoku","L_TAKE_ABSVAL","L_TEXT_ORIENT_DOWN","L_TEXT_ORIENT_LEFT","L_TEXT_ORIENT_RIGHT","L_TEXT_ORIENT_UNKNOWN","L_TEXT_ORIENT_UP","L_THIN_BG","L_THIN_FG","L_TIMER","L_TOPHAT_BLACK","L_TOPHAT_WHITE","L_TR_RO_SC","L_TR_SC_RO","L_TWO_SIDED_EDGE","L_UC_ALPHA","L_UC_ROMAN_NUMERALS","L_UINT_TYPE","L_UNDEFINED","L_UNION","L_UNKNOWN","L_UPPER_LEFT","L_UPPER_RIGHT","L_USE_ALL_BOXES","L_USE_ALL_TEMPLATES","L_USE_AVERAGE_TEMPLATES","L_USE_CAPPED_MAX","L_USE_CAPPED_MIN","L_USE_INNER","L_USE_MAXSIZE","L_USE_MINSIZE","L_USE_OUTER","L_USE_SAME_PARITY_BOXES","L_VARIANCE","L_VERT","L_VERTICAL_EDGES","L_VERTICAL_LINE","L_VERTICAL_RUNS","L_WALLTIMER","L_WARP_TO_LEFT","L_WARP_TO_RIGHT","L_WHITE_IS_MAX","L_WSHED","L_WShed","L_WallTimer","L_ZERO","L_ctermid","L_tmpnam","LeptDebugOK","LeptMsgSeverity","MaxInitPtraSize","NUMA","NUMAA","NUMA_VERSION_NUMBER","NUM_GPLOT_OUTPUTS","NUM_GPLOT_STYLES","Numa","Numaa","PDP_ENDIAN","PIX","PIXA","PIXAA","PIXAA_VERSION_NUMBER","PIXAC","PIXACC","PIXACOMP_VERSION_NUMBER","PIXA_VERSION_NUMBER","PIXC","PIXCMAP","PIXTILING","PIX_CLR","PIX_DST","PIX_MASK","PIX_PAINT","PIX_SET","PIX_SRC","PIX_XOR","PTA","PTAA","PTA_VERSION_NUMBER","PTRDIFF_MAX","PTRDIFF_MIN","P_tmpdir","Pix","PixColormap","PixComp","PixTiling","Pixa","PixaComp","Pixaa","Pixacc","Pta","Ptaa","RAND_MAX","RB_TYPE","RECOG_VERSION_NUMBER","REMOVE_CMAP_BASED_ON_SRC","REMOVE_CMAP_TO_BINARY","REMOVE_CMAP_TO_FULL_COLOR","REMOVE_CMAP_TO_GRAYSCALE","REMOVE_CMAP_WITH_ALPHA","RGBA_QUAD","RGBA_Quad","Rb_Type","SARRAY","SARRAY_VERSION_NUMBER","SEEK_CUR","SEEK_END","SEEK_SET","SEL","SELA","SEL_DONT_CARE","SEL_HIT","SEL_MISS","SEL_VERSION_NUMBER","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","SPLIT_ON_BLANK_LINE","SPLIT_ON_BOTH","SPLIT_ON_LEADING_WHITE","SYMMETRIC_MORPH_BC","Sarray","Sel","Sela","TIFF_BIGEND_ID","TIFF_LITTLEEND_ID","TMP_MAX","TRUE","TessAltoRendererCreate","TessBaseAPI","TessBaseAPIAdaptToWordStr","TessBaseAPIAllWordConfidences","TessBaseAPIAnalyseLayout","TessBaseAPIClear","TessBaseAPIClearAdaptiveClassifier","TessBaseAPICreate","TessBaseAPIDelete","TessBaseAPIEnd","TessBaseAPIGetAltoText","TessBaseAPIGetAvailableLanguagesAsVector","TessBaseAPIGetBoolVariable","TessBaseAPIGetBoxText","TessBaseAPIGetComponentImages","TessBaseAPIGetComponentImages1","TessBaseAPIGetConnectedComponents","TessBaseAPIGetDatapath","TessBaseAPIGetDoubleVariable","TessBaseAPIGetHOCRText","TessBaseAPIGetInitLanguagesAsString","TessBaseAPIGetInputImage","TessBaseAPIGetInputName","TessBaseAPIGetIntVariable","TessBaseAPIGetIterator","TessBaseAPIGetLSTMBoxText","TessBaseAPIGetLoadedLanguagesAsVector","TessBaseAPIGetMutableIterator","TessBaseAPIGetOpenCLDevice","TessBaseAPIGetPageSegMode","TessBaseAPIGetRegions","TessBaseAPIGetSourceYResolution","TessBaseAPIGetStringVariable","TessBaseAPIGetStrips","TessBaseAPIGetTextDirection","TessBaseAPIGetTextlines","TessBaseAPIGetTextlines1","TessBaseAPIGetThresholdedImage","TessBaseAPIGetThresholdedImageScaleFactor","TessBaseAPIGetTsvText","TessBaseAPIGetUNLVText","TessBaseAPIGetUTF8Text","TessBaseAPIGetUnichar","TessBaseAPIGetWordStrBoxText","TessBaseAPIGetWords","TessBaseAPIInit1","TessBaseAPIInit2","TessBaseAPIInit3","TessBaseAPIInit4","TessBaseAPIInitForAnalysePage","TessBaseAPIInitLangMod","TessBaseAPIIsValidWord","TessBaseAPIMeanTextConf","TessBaseAPIPrintVariables","TessBaseAPIPrintVariablesToFile","TessBaseAPIProcessPage","TessBaseAPIProcessPages","TessBaseAPIReadConfigFile","TessBaseAPIReadDebugConfigFile","TessBaseAPIRecognize","TessBaseAPIRecognizeForChopTest","TessBaseAPIRect","TessBaseAPISetDebugVariable","TessBaseAPISetImage","TessBaseAPISetImage2","TessBaseAPISetInputImage","TessBaseAPISetInputName","TessBaseAPISetMinOrientationMargin","TessBaseAPISetOutputName","TessBaseAPISetPageSegMode","TessBaseAPISetRectangle","TessBaseAPISetSourceResolution","TessBaseAPISetVariable","TessBoxTextRendererCreate","TessCancelFunc","TessChoiceIterator","TessChoiceIteratorConfidence","TessChoiceIteratorDelete","TessChoiceIteratorGetUTF8Text","TessChoiceIteratorNext","TessDeleteIntArray","TessDeleteResultRenderer","TessDeleteText","TessDeleteTextArray","TessHOcrRendererCreate","TessHOcrRendererCreate2","TessLSTMBoxRendererCreate","TessMonitorCreate","TessMonitorDelete","TessMonitorGetCancelThis","TessMonitorGetProgress","TessMonitorSetCancelFunc","TessMonitorSetCancelThis","TessMonitorSetDeadlineMSecs","TessMonitorSetProgressFunc","TessMutableIterator","TessOcrEngineMode","TessOcrEngineMode_OEM_DEFAULT","TessOcrEngineMode_OEM_LSTM_ONLY","TessOcrEngineMode_OEM_TESSERACT_LSTM_COMBINED","TessOcrEngineMode_OEM_TESSERACT_ONLY","TessOrientation","TessOrientation_ORIENTATION_PAGE_DOWN","TessOrientation_ORIENTATION_PAGE_LEFT","TessOrientation_ORIENTATION_PAGE_RIGHT","TessOrientation_ORIENTATION_PAGE_UP","TessPDFRendererCreate","TessPageIterator","TessPageIteratorBaseline","TessPageIteratorBegin","TessPageIteratorBlockType","TessPageIteratorBoundingBox","TessPageIteratorCopy","TessPageIteratorDelete","TessPageIteratorGetBinaryImage","TessPageIteratorGetImage","TessPageIteratorIsAtBeginningOf","TessPageIteratorIsAtFinalElement","TessPageIteratorLevel","TessPageIteratorLevel_RIL_BLOCK","TessPageIteratorLevel_RIL_PARA","TessPageIteratorLevel_RIL_SYMBOL","TessPageIteratorLevel_RIL_TEXTLINE","TessPageIteratorLevel_RIL_WORD","TessPageIteratorNext","TessPageIteratorOrientation","TessPageIteratorParagraphInfo","TessPageSegMode","TessPageSegMode_PSM_AUTO","TessPageSegMode_PSM_AUTO_ONLY","TessPageSegMode_PSM_AUTO_OSD","TessPageSegMode_PSM_CIRCLE_WORD","TessPageSegMode_PSM_COUNT","TessPageSegMode_PSM_OSD_ONLY","TessPageSegMode_PSM_RAW_LINE","TessPageSegMode_PSM_SINGLE_BLOCK","TessPageSegMode_PSM_SINGLE_BLOCK_VERT_TEXT","TessPageSegMode_PSM_SINGLE_CHAR","TessPageSegMode_PSM_SINGLE_COLUMN","TessPageSegMode_PSM_SINGLE_LINE","TessPageSegMode_PSM_SINGLE_WORD","TessPageSegMode_PSM_SPARSE_TEXT","TessPageSegMode_PSM_SPARSE_TEXT_OSD","TessParagraphJustification","TessParagraphJustification_JUSTIFICATION_CENTER","TessParagraphJustification_JUSTIFICATION_LEFT","TessParagraphJustification_JUSTIFICATION_RIGHT","TessParagraphJustification_JUSTIFICATION_UNKNOWN","TessPolyBlockType","TessPolyBlockType_PT_CAPTION_TEXT","TessPolyBlockType_PT_COUNT","TessPolyBlockType_PT_EQUATION","TessPolyBlockType_PT_FLOWING_IMAGE","TessPolyBlockType_PT_FLOWING_TEXT","TessPolyBlockType_PT_HEADING_IMAGE","TessPolyBlockType_PT_HEADING_TEXT","TessPolyBlockType_PT_HORZ_LINE","TessPolyBlockType_PT_INLINE_EQUATION","TessPolyBlockType_PT_NOISE","TessPolyBlockType_PT_PULLOUT_IMAGE","TessPolyBlockType_PT_PULLOUT_TEXT","TessPolyBlockType_PT_TABLE","TessPolyBlockType_PT_UNKNOWN","TessPolyBlockType_PT_VERTICAL_TEXT","TessPolyBlockType_PT_VERT_LINE","TessProgressFunc","TessResultIterator","TessResultIteratorConfidence","TessResultIteratorCopy","TessResultIteratorDelete","TessResultIteratorGetChoiceIterator","TessResultIteratorGetPageIterator","TessResultIteratorGetPageIteratorConst","TessResultIteratorGetUTF8Text","TessResultIteratorNext","TessResultIteratorSymbolIsDropcap","TessResultIteratorSymbolIsSubscript","TessResultIteratorSymbolIsSuperscript","TessResultIteratorWordFontAttributes","TessResultIteratorWordIsFromDictionary","TessResultIteratorWordIsNumeric","TessResultIteratorWordRecognitionLanguage","TessResultRenderer","TessResultRendererAddImage","TessResultRendererBeginDocument","TessResultRendererEndDocument","TessResultRendererExtention","TessResultRendererImageNum","TessResultRendererInsert","TessResultRendererNext","TessResultRendererTitle","TessTextRendererCreate","TessTextlineOrder","TessTextlineOrder_TEXTLINE_ORDER_LEFT_TO_RIGHT","TessTextlineOrder_TEXTLINE_ORDER_RIGHT_TO_LEFT","TessTextlineOrder_TEXTLINE_ORDER_TOP_TO_BOTTOM","TessTsvRendererCreate","TessUnlvRendererCreate","TessVersion","TessWordStrBoxRendererCreate","TessWritingDirection","TessWritingDirection_WRITING_DIRECTION_LEFT_TO_RIGHT","TessWritingDirection_WRITING_DIRECTION_RIGHT_TO_LEFT","TessWritingDirection_WRITING_DIRECTION_TOP_TO_BOTTOM","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","UNDEF","UNIX_PATH_SEPCHAR","USE_BMPIO","USE_INLINE_ACCESSORS","USE_JP2KHEADER","USE_PDFIO","USE_PNMIO","USE_PSIO","WCONTINUED","WEXITED","WINT_MAX","WINT_MIN","WIN_PATH_SEPCHAR","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_STDIO_LIM_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_G_fpos64_t","_G_fpos_t","_IOFBF","_IOLBF","_IONBF","_IO_EOF_SEEN","_IO_ERR_SEEN","_IO_FILE","_IO_USER_LOCK","_IO_backup_base","_IO_buf_base","_IO_buf_end","_IO_codecvt","_IO_marker","_IO_read_base","_IO_read_end","_IO_read_ptr","_IO_save_base","_IO_save_end","_IO_wide_data","_IO_write_base","_IO_write_end","_IO_write_ptr","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_STDIO_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__FD_SETSIZE","__FILE","__FILE_defined","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__LITTLE_ENDIAN","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_IEC_60559_BFP__","__STDC_IEC_60559_COMPLEX__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","____FILE_defined","_____fpos64_t_defined","_____fpos_t_defined","____mbstate_t_defined","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__atomic_wide_counter","__atomic_wide_counter__bindgen_ty_1","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__count","__ctype_get_mb_cur_max","__cur_writer","__daddr_t","__data","__data","__data","__data","__dev_t","__elision","__fd_mask","__fds_bits","__flags","__fpos64_t","__fpos_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g_refs","__g_signals","__g_size","__getdelim","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__have_pthread_attr_t","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__lock","__loff_t","__low","__mbstate_t","__mbstate_t__bindgen_ty_1","__mode_t","__next","__next","__nlink_t","__nusers","__old_x","__once_flag","__overflow","__owner","__pad1","__pad2","__pad3","__pad4","__pad5","__pid_t","__pos","__pos","__prev","__pthread_cond_s","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__state","__state","__struct_FILE_defined","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__thrd_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__tss_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uflow","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__value","__value32","__value64","__wch","__wchb","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__x","_bindgen_ty_1","_bindgen_ty_10","_bindgen_ty_11","_bindgen_ty_12","_bindgen_ty_13","_bindgen_ty_14","_bindgen_ty_15","_bindgen_ty_16","_bindgen_ty_17","_bindgen_ty_18","_bindgen_ty_19","_bindgen_ty_2","_bindgen_ty_20","_bindgen_ty_21","_bindgen_ty_22","_bindgen_ty_23","_bindgen_ty_24","_bindgen_ty_25","_bindgen_ty_26","_bindgen_ty_27","_bindgen_ty_28","_bindgen_ty_29","_bindgen_ty_3","_bindgen_ty_30","_bindgen_ty_31","_bindgen_ty_32","_bindgen_ty_33","_bindgen_ty_34","_bindgen_ty_35","_bindgen_ty_36","_bindgen_ty_37","_bindgen_ty_38","_bindgen_ty_39","_bindgen_ty_4","_bindgen_ty_40","_bindgen_ty_41","_bindgen_ty_42","_bindgen_ty_43","_bindgen_ty_44","_bindgen_ty_45","_bindgen_ty_46","_bindgen_ty_47","_bindgen_ty_48","_bindgen_ty_49","_bindgen_ty_5","_bindgen_ty_50","_bindgen_ty_51","_bindgen_ty_52","_bindgen_ty_53","_bindgen_ty_54","_bindgen_ty_55","_bindgen_ty_56","_bindgen_ty_57","_bindgen_ty_58","_bindgen_ty_59","_bindgen_ty_6","_bindgen_ty_60","_bindgen_ty_61","_bindgen_ty_62","_bindgen_ty_63","_bindgen_ty_64","_bindgen_ty_65","_bindgen_ty_66","_bindgen_ty_67","_bindgen_ty_68","_bindgen_ty_69","_bindgen_ty_7","_bindgen_ty_70","_bindgen_ty_71","_bindgen_ty_72","_bindgen_ty_73","_bindgen_ty_74","_bindgen_ty_75","_bindgen_ty_76","_bindgen_ty_77","_bindgen_ty_78","_bindgen_ty_79","_bindgen_ty_8","_bindgen_ty_80","_bindgen_ty_81","_bindgen_ty_82","_bindgen_ty_83","_bindgen_ty_84","_bindgen_ty_85","_bindgen_ty_86","_bindgen_ty_87","_bindgen_ty_88","_bindgen_ty_89","_bindgen_ty_9","_bindgen_ty_90","_bindgen_ty_91","_bindgen_ty_92","_bindgen_ty_93","_bindgen_ty_94","_bindgen_ty_95","_bindgen_ty_96","_chain","_codecvt","_cur_column","_fileno","_flags","_flags2","_freeres_buf","_freeres_list","_lock","_markers","_mode","_offset","_old_offset","_shortbuf","_unused2","_vtable_offset","_wide_data","a64l","abort","abs","addColorizedGrayToCmap","adjacentOnPixelInRaster","affineInvertXform","affineXformPt","affineXformSampledPt","aligned_alloc","alloc_fn","alloca","alpha","amapGetCountForColor","appendSubdirs","applyCubicFit","applyLinearFit","applyQuadraticFit","applyQuarticFit","array","array","array","array","array","array","array","array","array","arrayFindEachSequence","arrayFindSequence","arrayReplaceEachSequence","arraysize","at_quick_exit","atexit","atof","atoi","atol","atoll","auxstack","ave_done","barcodeDispatchDecoder","barcodeFormatIsSupported","baseindex","baseline1","baseline2","baseline3","baselinetab","bbufferCreate","bbufferDestroy","bbufferDestroyAndSaveData","bbufferExtendArray","bbufferRead","bbufferReadStream","bbufferWrite","bbufferWriteStream","beta","bilinearXformPt","bilinearXformSampledPt","blkcnt_t","blksize_t","blue","bmf","bmfCreate","bmfDestroy","bmfGetBaseline","bmfGetLineStrings","bmfGetPix","bmfGetStringWidth","bmfGetWidth","bmfGetWordWidths","bmf_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxAdjustSides","boxBoundingRegion","boxChangeRefcount","boxClipToRectangle","boxClipToRectangleParams","boxClone","boxCompareSize","boxContains","boxContainsPt","boxConvertToPta","boxCopy","boxCreate","boxCreateValid","boxDestroy","boxEqual","boxGetCenter","boxGetGeometry","boxGetRefcount","boxGetSideLocations","boxIntersectByLine","boxIntersects","boxIsValid","boxOverlapArea","boxOverlapDistance","boxOverlapFraction","boxOverlapRegion","boxPrintStreamInfo","boxRelocateOneSide","boxRotateOrth","boxSeparationDistance","boxSetGeometry","boxSetSide","boxSetSideLocations","boxSimilar","boxTransform","boxTransformOrdered","box_","boxa","boxa","boxa","boxa","boxa","boxa","boxaAddBox","boxaAdjustBoxSides","boxaAdjustHeightToTarget","boxaAdjustSides","boxaAdjustWidthToTarget","boxaAffineTransform","boxaBinSort","boxaClear","boxaClipToBox","boxaCombineOverlaps","boxaCombineOverlapsInPair","boxaCompareRegions","boxaContainedInBox","boxaContainedInBoxCount","boxaContainedInBoxa","boxaConvertToPta","boxaCopy","boxaCreate","boxaDestroy","boxaDisplayTiled","boxaEncapsulateAligned","boxaEqual","boxaExtendArray","boxaExtendArrayToSize","boxaExtractAsNuma","boxaExtractAsPta","boxaExtractCorners","boxaExtractSortedPattern","boxaFillSequence","boxaFindInvalidBoxes","boxaFindNearestBoxes","boxaGetArea","boxaGetAverageSize","boxaGetBox","boxaGetBoxGeometry","boxaGetCount","boxaGetCoverage","boxaGetExtent","boxaGetMedianVals","boxaGetNearestByDirection","boxaGetNearestToLine","boxaGetNearestToPt","boxaGetRankVals","boxaGetSizes","boxaGetValidBox","boxaGetValidCount","boxaGetWhiteblocks","boxaHandleOverlaps","boxaInitFull","boxaInsertBox","boxaIntersectsBox","boxaIntersectsBoxCount","boxaIsFull","boxaJoin","boxaLocationRange","boxaMakeAreaIndicator","boxaMakeSizeIndicator","boxaMakeWHRatioIndicator","boxaMedianDimensions","boxaMergeEvenOdd","boxaModifyWithBoxa","boxaPermutePseudorandom","boxaPermuteRandom","boxaPlotSides","boxaPlotSizes","boxaPruneSortedOnOverlap","boxaRead","boxaReadMem","boxaReadStream","boxaReconcileAllByMedian","boxaReconcilePairWidth","boxaReconcileSidesByMedian","boxaReconcileSizeByMedian","boxaRemoveBox","boxaRemoveBoxAndSave","boxaReplaceBox","boxaRotate","boxaRotateOrth","boxaSaveValid","boxaScale","boxaSelectByArea","boxaSelectBySize","boxaSelectByWHRatio","boxaSelectLargeULBox","boxaSelectRange","boxaSelectWithIndicator","boxaSetSide","boxaShiftWithPta","boxaSimilar","boxaSizeConsistency","boxaSizeRange","boxaSizeVariation","boxaSmoothSequenceMedian","boxaSort","boxaSort2d","boxaSort2dByIndex","boxaSortByIndex","boxaSplitEvenOdd","boxaSwapBoxes","boxaTransform","boxaTransformOrdered","boxaTranslate","boxaWindowedMedian","boxaWrite","boxaWriteDebug","boxaWriteMem","boxaWriteStderr","boxaWriteStream","boxaaAddBox","boxaaAddBoxa","boxaaAlignBox","boxaaCopy","boxaaCreate","boxaaDestroy","boxaaDisplay","boxaaExtendArray","boxaaExtendArrayToSize","boxaaExtendWithInit","boxaaFlattenAligned","boxaaFlattenToBoxa","boxaaGetBox","boxaaGetBoxCount","boxaaGetBoxa","boxaaGetCount","boxaaGetExtent","boxaaInitFull","boxaaInsertBoxa","boxaaJoin","boxaaQuadtreeRegions","boxaaRead","boxaaReadFromFiles","boxaaReadMem","boxaaReadStream","boxaaRemoveBoxa","boxaaReplaceBoxa","boxaaSelectRange","boxaaSizeRange","boxaaTranspose","boxaaWrite","boxaaWriteMem","boxaaWriteStream","boxas","bps","bsearch","caddr_t","callSystemDebug","calloc","ccb","ccbCreate","ccbDestroy","ccbaAddCcb","ccbaCreate","ccbaDestroy","ccbaDisplayBorder","ccbaDisplayImage1","ccbaDisplayImage2","ccbaDisplaySPBorder","ccbaGenerateGlobalLocs","ccbaGenerateSPGlobalLocs","ccbaGenerateSinglePath","ccbaGenerateStepChains","ccbaGetCcb","ccbaGetCount","ccbaRead","ccbaReadStream","ccbaStepChainsToPixCoords","ccbaWrite","ccbaWriteSVG","ccbaWriteSVGString","ccbaWriteStream","centtab","changeFormatForMissingLib","charset_size","charset_type","check_columns","cidConvertToPdfData","cida","clearenv","clearerr","clearerr_unlocked","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmapEqual","cmapdata85","cmapdatahex","cmapflag","cmddata","cmdname","color","colormap","compareTilesByHisto","components","composeRGBAPixel","composeRGBPixel","comptype","concatenatePdf","concatenatePdfToData","convertFilesFittedToPS","convertFilesTo1bpp","convertFilesToPS","convertFilesToPdf","convertFlateToPS","convertFlateToPSEmbed","convertG4ToPS","convertG4ToPSEmbed","convertGrayCodeToInt","convertHSVToRGB","convertImageDataToPdf","convertImageDataToPdfData","convertIntToGrayCode","convertJpegToPS","convertJpegToPSEmbed","convertLABToRGB","convertLABToXYZ","convertNumberedMasksToBoxaa","convertOnBigEnd16","convertOnBigEnd32","convertOnLittleEnd16","convertOnLittleEnd32","convertPtaLineTo4cc","convertRGBToHSV","convertRGBToLAB","convertRGBToXYZ","convertRGBToYUV","convertSegmentedFilesToPdf","convertSegmentedPagesToPS","convertSepCharsInPath","convertSortedToNumberedPathnames","convertTiffMultipageToPS","convertTiffMultipageToPdf","convertToNUpFiles","convertToNUpPixa","convertToPSEmbed","convertToPdf","convertToPdfData","convertToPdfDataSegmented","convertToPdfSegmented","convertUnscaledFilesToPdf","convertUnscaledToPdfData","convertXYZToLAB","convertXYZToRGB","convertYUVToRGB","count","counta","create2dFloatArray","create2dIntArray","createMatrix2dRotate","createMatrix2dScale","createMatrix2dTranslate","ctermid","current","cx","cx","cy","cy","d","d","daddr_t","dahash","data","data","data","data","data","data","data","data","data","data85","datacomp","datanames","dealloc_fn","debug","debug","decodeAscii85","decodeAscii85WithComp","decodeBase64","delx","delx","delya","depth","descr","dev_t","dewa","dewarp","dewarpBuildLineModel","dewarpBuildPageModel","dewarpCreate","dewarpCreateRef","dewarpDebug","dewarpDestroy","dewarpFindHorizDisparity","dewarpFindHorizSlopeDisparity","dewarpFindVertDisparity","dewarpGetTextlineCenters","dewarpMinimize","dewarpPopulateFullRes","dewarpRead","dewarpReadMem","dewarpReadStream","dewarpRemoveShortLines","dewarpShowResults","dewarpSinglePage","dewarpSinglePageInit","dewarpSinglePageRun","dewarpWrite","dewarpWriteMem","dewarpWriteStream","dewarpaApplyDisparity","dewarpaApplyDisparityBoxa","dewarpaCreate","dewarpaCreateFromPixacomp","dewarpaDestroy","dewarpaDestroyDewarp","dewarpaGetDewarp","dewarpaInfo","dewarpaInsertDewarp","dewarpaInsertRefModels","dewarpaListPages","dewarpaModelStats","dewarpaModelStatus","dewarpaRead","dewarpaReadMem","dewarpaReadStream","dewarpaRestoreModels","dewarpaSetCheckColumns","dewarpaSetCurvatures","dewarpaSetMaxDistance","dewarpaSetValidModels","dewarpaShowArrays","dewarpaStripRefModels","dewarpaUseBothArrays","dewarpaWrite","dewarpaWriteMem","dewarpaWriteStream","dewarpcache","did","direction","directory","display","displayHSVColorRange","ditherToBinaryLineLow","div","div_t","dna","dna","dna_tochar","dnaa","dpixAddMultConstant","dpixChangeRefcount","dpixClone","dpixConvertToFPix","dpixConvertToPix","dpixCopy","dpixCopyResolution","dpixCreate","dpixCreateTemplate","dpixDestroy","dpixEndianByteSwap","dpixGetData","dpixGetDimensions","dpixGetMax","dpixGetMin","dpixGetPixel","dpixGetRefcount","dpixGetResolution","dpixGetWpl","dpixLinearCombination","dpixRead","dpixReadMem","dpixReadStream","dpixScaleByInteger","dpixSetAllArbitrary","dpixSetData","dpixSetDimensions","dpixSetPixel","dpixSetResolution","dpixSetWpl","dpixWrite","dpixWriteMem","dpixWriteStream","dprintf","drand48","drand48_data","drand48_r","ecvt","ecvt_r","encodeAscii85","encodeAscii85WithComp","encodeBase64","end_ptr","erand48","erand48_r","exit","extractG4DataFromFile","extractMinMaxComponent","extractNumberFromFilename","extractRGBAValues","extractRGBValues","failure","fclose","fcvt","fcvt_r","fd_mask","fd_set","fdopen","feof","feof_unlocked","ferror","ferror_unlocked","fflush","fflush_unlocked","fgetJp2kResolution","fgetJpegComment","fgetJpegResolution","fgetPngColormapInfo","fgetPngResolution","fgetc","fgetc_unlocked","fgetpos","fgets","fhmtautogen","fhmtautogen1","fhmtautogen2","fhmtgen_low_1","fileAppendString","fileConcatenate","fileCopy","fileCorruptByDeletion","fileCorruptByMutation","fileFormatIsTiff","fileReplaceBytes","fileSplitLinesUniform","fileno","fileno","fileno_unlocked","filesAreIdentical","findFileFormat","findFileFormatBuffer","findFileFormatStream","findNextLargerPrime","findTiffCompression","finished","flockfile","fmemopen","fmorphautogen","fmorphautogen1","fmorphautogen2","fmorphopgen_low_1","fmorphopgen_low_2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fnbytesInFile","fonttab","fopen","fopenReadFromMemory","fopenReadStream","fopenWriteStream","fopenWriteWinTempfile","fp","fp_offset","fpix","fpixAddBorder","fpixAddContinuedBorder","fpixAddMirroredBorder","fpixAddMultConstant","fpixAddSlopeBorder","fpixAffine","fpixAffinePta","fpixAutoRenderContours","fpixChangeRefcount","fpixClone","fpixConvertToDPix","fpixConvertToPix","fpixConvolve","fpixConvolveSep","fpixCopy","fpixCopyResolution","fpixCreate","fpixCreateTemplate","fpixDestroy","fpixDisplayMaxDynamicRange","fpixEndianByteSwap","fpixFlipLR","fpixFlipTB","fpixGetData","fpixGetDimensions","fpixGetMax","fpixGetMin","fpixGetPixel","fpixGetRefcount","fpixGetResolution","fpixGetWpl","fpixLinearCombination","fpixPrintStream","fpixProjective","fpixProjectivePta","fpixRasterop","fpixRead","fpixReadMem","fpixReadStream","fpixRemoveBorder","fpixRenderContours","fpixRotate180","fpixRotate90","fpixRotateOrth","fpixScaleByInteger","fpixSetAllArbitrary","fpixSetData","fpixSetDimensions","fpixSetPixel","fpixSetResolution","fpixSetWpl","fpixThresholdToPix","fpixWrite","fpixWriteMem","fpixWriteStream","fpixaAddFPix","fpixaChangeRefcount","fpixaConvertLABToRGB","fpixaConvertLABToXYZ","fpixaConvertXYZToLAB","fpixaConvertXYZToRGB","fpixaCopy","fpixaCreate","fpixaDestroy","fpixaDisplayQuadtree","fpixaGetCount","fpixaGetData","fpixaGetFPix","fpixaGetFPixDimensions","fpixaGetPixel","fpixaSetPixel","fpos_t","fprintTiffInfo","fprintf","fptr","fputc","fputc_unlocked","fputs","fread","freadHeaderJp2k","freadHeaderJpeg","freadHeaderPng","freadHeaderPnm","freadHeaderSpix","freadHeaderTiff","fread_unlocked","free","freopen","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fscanf1","fseek","fseeko","fsetpos","fsfilcnt_t","fsid_t","ftell","ftello","ftrylockfile","ftype","fullarrays","fullhdispar","fullvdispar","fullydispar","function","funlockfile","fwrite","fwrite_unlocked","gamma","gaussDistribSampling","gaussjordan","gcvt","genConstrainedNumaInRange","genPathname","genRandomIntOnInterval","generateBinaryMaze","generatePtaBox","generatePtaBoxa","generatePtaFilledCircle","generatePtaFilledSquare","generatePtaGrid","generatePtaHashBox","generatePtaHashBoxa","generatePtaLine","generatePtaLineFromPt","generatePtaPolyline","generatePtaWideLine","generatePtaaBoxa","generatePtaaHashBoxa","generateUncompressedPS","getAffineXformCoeffs","getBilinearXformCoeffs","getCompositeParameters","getCutPathForHole","getExtendedCompositeParameters","getFilenamesInDirectory","getFormatExtension","getImagelibVersions","getImpliedFileFormat","getLeptonicaVersion","getLogBase2","getMorphBorderPixelColor","getNumberedPathnamesInDirectory","getOctcubeIndexFromRGB","getProjectiveXformCoeffs","getRGBFromIndex","getResA4Page","getResLetterPage","getSortedPathnamesInDirectory","getTiffResolution","getc","getc_unlocked","getchar","getchar_unlocked","getdelim","getenv","getline","getloadavg","getsubopt","getw","gid_t","global","gp_offset","gplotAddPlot","gplotCreate","gplotDestroy","gplotGenCommandFile","gplotGenDataFiles","gplotGeneralPix1","gplotGeneralPix2","gplotGeneralPixN","gplotMakeOutput","gplotMakeOutputPix","gplotRead","gplotSetScaling","gplotSimple1","gplotSimple2","gplotSimpleN","gplotSimplePix1","gplotSimplePix2","gplotSimplePixN","gplotSimpleXY1","gplotSimpleXY2","gplotSimpleXYN","gplotWrite","gplotfileoutputs","gplotstylenames","grayHistogramsToEMD","grayInterHistogramStats","green","h","h","h","h","h","h","h","h","h","h","h","h","hashtab","hasref","hsuccess","hvalid","id","id_t","ifunc","imax","index","index","informat","init","initsize","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioFormatTest","isPngInterlaced","itype","jbAccumulateComposites","jbAddPage","jbAddPageComponents","jbAddPages","jbClasserCreate","jbClasserDestroy","jbClassifyCorrelation","jbClassifyRankHaus","jbCorrelation","jbCorrelationInit","jbCorrelationInitWithoutComponents","jbDataDestroy","jbDataRead","jbDataRender","jbDataSave","jbDataWrite","jbGetComponents","jbGetLLCorners","jbGetULCorners","jbRankHaus","jbRankHausInit","jbTemplatesFromComposites","jbWordsInTextlines","jrand48","jrand48_r","kMaxCredibleResolution","kMinCredibleResolution","kPointsPerInch","kResolutionEstimationFactor","keep_pixaa","kernelCopy","kernelCreate","kernelCreateFromFile","kernelCreateFromPix","kernelCreateFromString","kernelDestroy","kernelDisplayInPix","kernelGetElement","kernelGetMinMax","kernelGetParameters","kernelGetSum","kernelInvert","kernelNormalize","kernelRead","kernelReadStream","kernelSetElement","kernelSetOrigin","kernelWrite","kernelWriteStream","kernwidth","key","key","key_t","keytype","l64a","l_CIDataDestroy","l_amapCreate","l_amapDelete","l_amapDestroy","l_amapFind","l_amapGetFirst","l_amapGetLast","l_amapGetNext","l_amapGetPrev","l_amapInsert","l_amapSize","l_angleBetweenVectors","l_asetCreate","l_asetCreateFromDna","l_asetCreateFromPta","l_asetCreateFromSarray","l_asetDelete","l_asetDestroy","l_asetFind","l_asetGetFirst","l_asetGetLast","l_asetGetNext","l_asetGetPrev","l_asetInsert","l_asetSize","l_binaryCompare","l_binaryCopy","l_binaryRead","l_binaryReadSelect","l_binaryReadSelectStream","l_binaryReadStream","l_binaryWrite","l_bootnum_gen1","l_bootnum_gen2","l_bootnum_gen3","l_bootnum_gen4","l_byteaAppendData","l_byteaAppendString","l_byteaCopy","l_byteaCopyData","l_byteaCreate","l_byteaDestroy","l_byteaFindEachSequence","l_byteaGetData","l_byteaGetSize","l_byteaInitFromFile","l_byteaInitFromMem","l_byteaInitFromStream","l_byteaJoin","l_byteaSplit","l_byteaWrite","l_byteaWriteStream","l_chooseDisplayProg","l_clearDataBit","l_clearDataDibit","l_clearDataQbit","l_colorfillCreate","l_colorfillDestroy","l_compressGrayHistograms","l_convertCharstrToInt","l_dnaAddNumber","l_dnaChangeRefcount","l_dnaClone","l_dnaConvertToNuma","l_dnaCopy","l_dnaCopyParameters","l_dnaCreate","l_dnaCreateFromDArray","l_dnaCreateFromIArray","l_dnaDestroy","l_dnaDiffAdjValues","l_dnaEmpty","l_dnaGetCount","l_dnaGetDArray","l_dnaGetDValue","l_dnaGetIArray","l_dnaGetIValue","l_dnaGetParameters","l_dnaGetRefcount","l_dnaHashAdd","l_dnaHashCreate","l_dnaHashDestroy","l_dnaHashGetDna","l_dnaInsertNumber","l_dnaIntersectionByAset","l_dnaIntersectionByHmap","l_dnaJoin","l_dnaMakeHistoByHmap","l_dnaMakeSequence","l_dnaRead","l_dnaReadMem","l_dnaReadStream","l_dnaRemoveDupsByAset","l_dnaRemoveDupsByHmap","l_dnaRemoveNumber","l_dnaReplaceNumber","l_dnaSelectRange","l_dnaSetCount","l_dnaSetParameters","l_dnaSetValue","l_dnaShiftValue","l_dnaUnionByAset","l_dnaUnionByHmap","l_dnaWrite","l_dnaWriteMem","l_dnaWriteStderr","l_dnaWriteStream","l_dnaaAddDna","l_dnaaAddNumber","l_dnaaCreate","l_dnaaCreateFull","l_dnaaDestroy","l_dnaaFlattenToDna","l_dnaaGetCount","l_dnaaGetDna","l_dnaaGetDnaCount","l_dnaaGetNumberCount","l_dnaaGetValue","l_dnaaRead","l_dnaaReadMem","l_dnaaReadStream","l_dnaaReplaceDna","l_dnaaTruncate","l_dnaaWrite","l_dnaaWriteMem","l_dnaaWriteStream","l_fileDisplay","l_float32","l_float64","l_generateCIData","l_generateCIDataForPdf","l_generateFlateData","l_generateFlateDataPdf","l_generateG4Data","l_generateJpegData","l_generateJpegDataMem","l_getCurrentTime","l_getDataBit","l_getDataByte","l_getDataDibit","l_getDataFourBytes","l_getDataQbit","l_getDataTwoBytes","l_getFormattedDate","l_getStructStrFromFile","l_hashFloat64ToUint64","l_hashPtToUint64","l_hashStringToUint64","l_hashStringToUint64Fast","l_hmapCreate","l_hmapCreateFromDna","l_hmapCreateFromPta","l_hmapCreateFromSarray","l_hmapDestroy","l_hmapLookup","l_hmapRehash","l_int16","l_int32","l_int64","l_int8","l_intptr_t","l_jpegSetQuality","l_makeTempFilename","l_ok","l_pdfSetDateAndVersion","l_pdfSetG4ImageMask","l_pngSetReadStrip16To8","l_productMat2","l_productMat3","l_productMat4","l_productMatVec","l_psWriteBoundingBox","l_rbtreeCreate","l_rbtreeDelete","l_rbtreeDestroy","l_rbtreeGetCount","l_rbtreeGetFirst","l_rbtreeGetLast","l_rbtreeGetNext","l_rbtreeGetPrev","l_rbtreeInsert","l_rbtreeLookup","l_rbtreePrint","l_setAlphaMaskBorder","l_setConvolveSampling","l_setDataBit","l_setDataBitVal","l_setDataByte","l_setDataDibit","l_setDataFourBytes","l_setDataQbit","l_setDataTwoBytes","l_setNeutralBoostVal","l_uint16","l_uint32","l_uint64","l_uint8","l_uintptr_t","l_uncompressGrayHistograms","labs","latticeh","latticew","lcong48","lcong48_r","ldiv","ldiv_t","left","leftcurv","leftslope","leptSetStderrHandler","lept_calloc","lept_cp","lept_direxists","lept_fclose","lept_fopen","lept_free","lept_isPrime","lept_mkdir","lept_mv","lept_rm","lept_rm_match","lept_rmdir","lept_rmfile","lept_roundftoi","lept_stderr","lheapAdd","lheapCreate","lheapDestroy","lheapGetCount","lheapGetElement","lheapPrint","lheapRemove","lheapSort","lheapSortStrictOrder","lineEndianByteSwap","linearInterpolatePixelColor","linearInterpolatePixelFloat","linearInterpolatePixelGray","linearScaleRGBVal","lineheight","linelab32","linem1","lines8","linet1","linew","links","listAddToHead","listAddToTail","listDestroy","listFindElement","listFindTail","listGetCount","listInsertAfter","listInsertBefore","listJoin","listRemoveElement","listRemoveFromHead","listRemoveFromTail","listReverse","llabs","lldiv","lldiv_t","local","locatePtRadially","locs","loff_t","logScaleRGBVal","lqueueAdd","lqueueCreate","lqueueDestroy","lqueueGetCount","lqueuePrint","lqueueRemove","lrand48","lrand48_r","lstackAdd","lstackCreate","lstackDestroy","lstackGetCount","lstackPrint","lstackRemove","lut","makeColorfillTestData","makeDoGKernel","makeFlatKernel","makeGaussianKernel","makeGaussianKernelSep","makeGrayQuantIndexTable","makeGrayQuantTableArb","makeLogBase2Tab","makeMSBitLocTab","makeMosaicStrips","makeOrientDecision","makePixelCentroidTab8","makePixelSumTab8","makePlotPtaFromNuma","makePlotPtaFromNumaGen","makeRGBIndexTables","makeRGBToIndexTables","makeRangeKernel","makeSubsampleTab2x","makeTempDirname","malloc","max_diff_edgecurv","max_diff_linecurv","max_edgecurv","max_edgeslope","max_ht_ratio","max_linecurv","max_splith","max_wh_ratio","maxarraysize","maxcurv","maxdist","maxheight","maxheight_u","maxocc","maxpage","maxwidth","maxwidth","maxwidth_u","maxyshift","mblen","mbstowcs","mbtowc","mediabox","method","min_diff_linecurv","min_nopad","min_splitw","minarea","mincurv","mindepth","minheight_u","minisblack","minlines","minlines","minwidth","minwidth_u","mkdtemp","mkstemp","mkstemps","mktemp","mode","mode_t","modelsready","modifyTrailingSlash","morphSequenceVerify","mrand48","mrand48_r","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","naa","naarea","naasum","naasum_u","naclass","naclass","nacomps","nactual","nacurves","nadely","nadely_r","nafgt","naindex","nalevels","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","name","namh","namidys","namodels","namoment","napage","napage","napages","narray","nasample","nasample_r","nascore","nascore","nascore_r","nash","nasi","nasum","nasum","nasum_u","natempl","natempl_r","nawidth","nawidth","nawidth_r","naxloc","naxloc","naxloc_r","nayloc","nbuckets","nbytes","nbytes85","nbytesInFile","nbytescomp","nclass","nclass","ncmap","ncolors","nelem","next","next","nextOnPixelInRaster","nguess","nhead","nitems","nlines","nlink_t","nother","npages","npages","nplots","nrand48","nrand48_r","nseeds","ntogo","num","num_samples","numa","numaAddBorder","numaAddNumber","numaAddSorted","numaAddSpecifiedBorder","numaAddToNumber","numaArithOp","numaBinSort","numaChangeRefcount","numaChooseSortType","numaClipToInterval","numaClone","numaClose","numaContrastTRC","numaConvertToDna","numaConvertToInt","numaConvertToPta1","numaConvertToPta2","numaConvertToSarray","numaCopy","numaCopyParameters","numaCountNonzeroRuns","numaCountReversals","numaCreate","numaCreateFromFArray","numaCreateFromIArray","numaCreateFromString","numaCrossingsByPeaks","numaCrossingsByThreshold","numaDestroy","numaDifferentiateInterval","numaDilate","numaDiscretizeHistoInBins","numaDiscretizeSortedInBins","numaEarthMoverDistance","numaEmpty","numaEqualizeTRC","numaErode","numaEvalBestHaarParameters","numaEvalHaarSum","numaFindExtrema","numaFindLocForThreshold","numaFindPeaks","numaFindSortedLoc","numaFitMax","numaGammaTRC","numaGetBinSortIndex","numaGetBinnedMedian","numaGetCount","numaGetCountRelativeToZero","numaGetEdgeValues","numaGetFArray","numaGetFValue","numaGetHistogramStats","numaGetHistogramStatsOnInterval","numaGetIArray","numaGetIValue","numaGetMax","numaGetMean","numaGetMeanAbsval","numaGetMeanDevFromMedian","numaGetMedian","numaGetMedianDevFromMedian","numaGetMin","numaGetMode","numaGetNonzeroRange","numaGetParameters","numaGetPartialSums","numaGetRankBinValues","numaGetRankValue","numaGetRefcount","numaGetSortIndex","numaGetSpanValues","numaGetStatsUsingHistogram","numaGetSum","numaGetSumOnInterval","numaGetUniformBinSizes","numaHasOnlyIntegers","numaHistogramGetRankFromVal","numaHistogramGetValFromRank","numaInsertNumber","numaIntegrateInterval","numaInterpolateArbxInterval","numaInterpolateArbxVal","numaInterpolateEqxInterval","numaInterpolateEqxVal","numaInvert","numaInvertMap","numaIsSorted","numaJoin","numaLogicalOp","numaLowPassIntervals","numaMakeAbsval","numaMakeConstant","numaMakeDelta","numaMakeHistogram","numaMakeHistogramAuto","numaMakeHistogramClipped","numaMakeRankFromHistogram","numaMakeSequence","numaMakeThresholdIndicator","numaNormalizeHistogram","numaOpen","numaPseudorandomSequence","numaQuantizeCrossingsByWidth","numaQuantizeCrossingsByWindow","numaRandomPermutation","numaRead","numaReadMem","numaReadStream","numaRebinHistogram","numaRemoveBorder","numaRemoveNumber","numaReplaceNumber","numaReverse","numaSelectCrossingThreshold","numaSetCount","numaSetParameters","numaSetValue","numaShiftValue","numaSimilar","numaSimpleStats","numaSort","numaSortAutoSelect","numaSortByIndex","numaSortGeneral","numaSortIndexAutoSelect","numaSortPair","numaSplitDistribution","numaSubsample","numaThresholdEdges","numaTransform","numaUniformSampling","numaWindowedMean","numaWindowedMeanSquare","numaWindowedMedian","numaWindowedStats","numaWindowedVariance","numaWrite","numaWriteDebug","numaWriteMem","numaWriteStderr","numaWriteStream","numaaAddNuma","numaaAddNumber","numaaCompareImagesByBoxes","numaaCreate","numaaCreateFull","numaaDestroy","numaaFlattenToNuma","numaaGetCount","numaaGetNuma","numaaGetNumaCount","numaaGetNumberCount","numaaGetPtrArray","numaaGetValue","numaaJoin","numaaRead","numaaReadMem","numaaReadStream","numaaReplaceNuma","numaaTruncate","numaaWrite","numaaWriteMem","numaaWriteStream","nwritten","nx","nx","nx","ny","ny","ny","obj1","obj2","obj3","obj4","obj5","objloc","objsize","off_t","offset","offset","on_exit","open_memstream","outformat","outname","overflow_arg_area","pageno","parent","parseForProtos","parseStringForNumbers","partifyFiles","partifyPixac","pathJoin","pclose","perror","pid_t","pix","pix","pix","pix","pix","pix","pixAbsDiffByColumn","pixAbsDiffByRow","pixAbsDiffInRect","pixAbsDiffOnLine","pixAbsDifference","pixAccumulate","pixAdaptThresholdToBinary","pixAdaptThresholdToBinaryGen","pixAddAlphaTo1bpp","pixAddAlphaToBlend","pixAddBlackOrWhiteBorder","pixAddBorder","pixAddBorderGeneral","pixAddConstantGray","pixAddContinuedBorder","pixAddGaussianNoise","pixAddGray","pixAddGrayColormap8","pixAddMinimalGrayColormap8","pixAddMirroredBorder","pixAddMixedBorder","pixAddRGB","pixAddRepeatedBorder","pixAddSingleTextblock","pixAddText","pixAddTextlines","pixAddWithIndicator","pixAffine","pixAffineColor","pixAffineGray","pixAffinePta","pixAffinePtaColor","pixAffinePtaGray","pixAffinePtaWithAlpha","pixAffineSampled","pixAffineSampledPta","pixAffineSequential","pixAlphaBlendUniform","pixAlphaIsOpaque","pixAnd","pixApplyInvBackgroundGrayMap","pixApplyInvBackgroundRGBMap","pixApplyVariableGrayMap","pixAssignToNearestColor","pixAutoPhotoinvert","pixAverageByColumn","pixAverageByRow","pixAverageInRect","pixAverageInRectRGB","pixAverageIntensityProfile","pixAverageOnLine","pixBackgroundNorm","pixBackgroundNormFlex","pixBackgroundNormGrayArray","pixBackgroundNormGrayArrayMorph","pixBackgroundNormMorph","pixBackgroundNormRGBArrays","pixBackgroundNormRGBArraysMorph","pixBackgroundNormSimple","pixBestCorrelation","pixBilateral","pixBilateralExact","pixBilateralGray","pixBilateralGrayExact","pixBilinear","pixBilinearColor","pixBilinearGray","pixBilinearPta","pixBilinearPtaColor","pixBilinearPtaGray","pixBilinearPtaWithAlpha","pixBilinearSampled","pixBilinearSampledPta","pixBlend","pixBlendBackgroundToColor","pixBlendBoxaRandom","pixBlendCmap","pixBlendColor","pixBlendColorByChannel","pixBlendGray","pixBlendGrayAdapt","pixBlendGrayInverse","pixBlendHardLight","pixBlendInRect","pixBlendMask","pixBlendWithGrayMask","pixBlockBilateralExact","pixBlockconv","pixBlockconvAccum","pixBlockconvGray","pixBlockconvGrayTile","pixBlockconvGrayUnnormalized","pixBlockconvTiled","pixBlockrank","pixBlocksum","pixCensusTransform","pixCentroid","pixCentroid8","pixChangeRefcount","pixChooseOutputFormat","pixCleanBackgroundToWhite","pixCleanupByteProcessing","pixClearAll","pixClearInRect","pixClearPixel","pixClipBoxToEdges","pixClipBoxToForeground","pixClipMasked","pixClipRectangle","pixClipRectangleWithBorder","pixClipRectangles","pixClipToForeground","pixClone","pixClose","pixCloseBrick","pixCloseBrickDwa","pixCloseCompBrick","pixCloseCompBrickDwa","pixCloseCompBrickExtendDwa","pixCloseGeneralized","pixCloseGray","pixCloseGray3","pixCloseSafe","pixCloseSafeBrick","pixCloseSafeCompBrick","pixColorContent","pixColorContentByLocation","pixColorFill","pixColorFraction","pixColorGray","pixColorGrayCmap","pixColorGrayMasked","pixColorGrayMaskedCmap","pixColorGrayRegions","pixColorGrayRegionsCmap","pixColorMagnitude","pixColorMorph","pixColorMorphSequence","pixColorSegment","pixColorSegmentClean","pixColorSegmentCluster","pixColorSegmentRemoveColors","pixColorShiftRGB","pixColorShiftWhitePoint","pixColorizeGray","pixColorsForQuantization","pixColumnStats","pixCombineMasked","pixCombineMaskedGeneral","pixCompareBinary","pixCompareGray","pixCompareGrayByHisto","pixCompareGrayOrRGB","pixComparePhotoRegionsByHisto","pixCompareRGB","pixCompareRankDifference","pixCompareTiled","pixCompareWithTranslation","pixComponentFunction","pixConformsToRectangle","pixConnComp","pixConnCompAreaTransform","pixConnCompBB","pixConnCompIncrAdd","pixConnCompIncrInit","pixConnCompPixa","pixConnCompTransform","pixContrastNorm","pixContrastTRC","pixContrastTRCMasked","pixConvert16To8","pixConvert1To16","pixConvert1To2","pixConvert1To2Cmap","pixConvert1To32","pixConvert1To4","pixConvert1To4Cmap","pixConvert1To8","pixConvert1To8Cmap","pixConvert24To32","pixConvert2To8","pixConvert32To16","pixConvert32To24","pixConvert32To8","pixConvert4To8","pixConvert8To16","pixConvert8To2","pixConvert8To32","pixConvert8To4","pixConvertCmapTo1","pixConvertColorToSubpixelRGB","pixConvertDataToDna","pixConvertForPSWrap","pixConvertGrayToColormap","pixConvertGrayToColormap8","pixConvertGrayToFalseColor","pixConvertGrayToSubpixelRGB","pixConvertHSVToRGB","pixConvertLossless","pixConvertRGBToBinaryArb","pixConvertRGBToCmapLossless","pixConvertRGBToColormap","pixConvertRGBToGray","pixConvertRGBToGrayArb","pixConvertRGBToGrayFast","pixConvertRGBToGrayGeneral","pixConvertRGBToGrayMinMax","pixConvertRGBToGraySatBoost","pixConvertRGBToHSV","pixConvertRGBToHue","pixConvertRGBToLAB","pixConvertRGBToLuminance","pixConvertRGBToSaturation","pixConvertRGBToValue","pixConvertRGBToXYZ","pixConvertRGBToYUV","pixConvertTo1","pixConvertTo16","pixConvertTo1Adaptive","pixConvertTo1BySampling","pixConvertTo2","pixConvertTo32","pixConvertTo32BySampling","pixConvertTo4","pixConvertTo8","pixConvertTo8BySampling","pixConvertTo8Colormap","pixConvertTo8Or32","pixConvertToDPix","pixConvertToFPix","pixConvertToPdf","pixConvertToPdfData","pixConvertToPdfDataSegmented","pixConvertToPdfSegmented","pixConvertToSubpixelRGB","pixConvertYUVToRGB","pixConvolve","pixConvolveRGB","pixConvolveRGBSep","pixConvolveSep","pixConvolveWithBias","pixCopy","pixCopyBorder","pixCopyColormap","pixCopyDimensions","pixCopyInputFormat","pixCopyRGBComponent","pixCopyResolution","pixCopySpp","pixCopyText","pixCopyWithBoxa","pixCorrelationBinary","pixCorrelationScore","pixCorrelationScoreShifted","pixCorrelationScoreSimple","pixCorrelationScoreThresholded","pixCountArbInRect","pixCountByColumn","pixCountByRow","pixCountConnComp","pixCountPixels","pixCountPixelsByColumn","pixCountPixelsByRow","pixCountPixelsInRect","pixCountPixelsInRow","pixCountRGBColors","pixCountRGBColorsByHash","pixCountTextColumns","pixCreate","pixCreateFromPixcomp","pixCreateHeader","pixCreateNoInit","pixCreateRGBImage","pixCreateTemplate","pixCreateTemplateNoInit","pixCreateWithCmap","pixCropAlignedToCentroid","pixCropToMatch","pixCropToSize","pixDarkenGray","pixDecideIfPhotoImage","pixDecideIfTable","pixDecideIfText","pixDeserializeFromMemory","pixDeskew","pixDeskewBarcode","pixDeskewBoth","pixDeskewGeneral","pixDeskewLocal","pixDestroy","pixDestroyColormap","pixDilate","pixDilateBrick","pixDilateBrickDwa","pixDilateCompBrick","pixDilateCompBrickDwa","pixDilateCompBrickExtendDwa","pixDilateGray","pixDilateGray3","pixDisplay","pixDisplayColorArray","pixDisplayDiffBinary","pixDisplayHitMissSel","pixDisplayLayersRGBA","pixDisplayMatchedPattern","pixDisplayPta","pixDisplayPtaPattern","pixDisplayPtaa","pixDisplayPtaaPattern","pixDisplaySelectedPixels","pixDisplayWithTitle","pixDisplayWrite","pixDistanceFunction","pixDitherTo2bpp","pixDitherTo2bppSpec","pixDitherToBinary","pixDitherToBinarySpec","pixDrawBoxa","pixDrawBoxaRandom","pixEmbedForRotation","pixEndianByteSwap","pixEndianByteSwapNew","pixEndianTwoByteSwap","pixEndianTwoByteSwapNew","pixEqual","pixEqualWithAlpha","pixEqualWithCmap","pixEqualizeTRC","pixErode","pixErodeBrick","pixErodeBrickDwa","pixErodeCompBrick","pixErodeCompBrickDwa","pixErodeCompBrickExtendDwa","pixErodeGray","pixErodeGray3","pixEstimateBackground","pixExpandBinaryPower2","pixExpandBinaryReplicate","pixExpandReplicate","pixExtendByReplication","pixExtractBarcodeCrossings","pixExtractBarcodeWidths1","pixExtractBarcodeWidths2","pixExtractBarcodes","pixExtractBorderConnComps","pixExtractBoundary","pixExtractData","pixExtractOnLine","pixExtractRawTextlines","pixExtractTextlines","pixFHMTGen_1","pixFMorphopGen_1","pixFMorphopGen_2","pixFadeWithGray","pixFastTophat","pixFewColorsMedianCutQuantMixed","pixFewColorsOctcubeQuant1","pixFewColorsOctcubeQuant2","pixFewColorsOctcubeQuantMixed","pixFillBgFromBorder","pixFillClosedBorders","pixFillHolesToBoundingRect","pixFillMapHoles","pixFillPolygon","pixFilterComponentBySize","pixFinalAccumulate","pixFinalAccumulateThreshold","pixFindAreaFraction","pixFindAreaFractionMasked","pixFindAreaPerimRatio","pixFindBaselines","pixFindCheckerboardCorners","pixFindColorRegions","pixFindCornerPixels","pixFindDifferentialSquareSum","pixFindEqualValues","pixFindHistoPeaksHSV","pixFindHorizontalRuns","pixFindLargeRectangles","pixFindLargestRectangle","pixFindMaxHorizontalRunOnLine","pixFindMaxRuns","pixFindMaxVerticalRunOnLine","pixFindNormalizedSquareSum","pixFindOverlapFraction","pixFindPageForeground","pixFindPerimSizeRatio","pixFindPerimToAreaRatio","pixFindRectangleComps","pixFindRectangleInCC","pixFindRepCloseTile","pixFindSkew","pixFindSkewAndDeskew","pixFindSkewOrthogonalRange","pixFindSkewSweep","pixFindSkewSweepAndSearch","pixFindSkewSweepAndSearchScore","pixFindSkewSweepAndSearchScorePivot","pixFindStrokeLength","pixFindStrokeWidth","pixFindThreshFgExtent","pixFindVerticalRuns","pixFindWordAndCharacterBoxes","pixFixedOctcubeQuant256","pixFixedOctcubeQuantGenRGB","pixFlipLR","pixFlipPixel","pixFlipTB","pixForegroundFraction","pixFractionFgInMask","pixFreeData","pixGammaTRC","pixGammaTRCMasked","pixGammaTRCWithAlpha","pixGenHalftoneMask","pixGenPhotoHistos","pixGenTextblockMask","pixGenTextlineMask","pixGenerateCIData","pixGenerateFromPta","pixGenerateHalftoneMask","pixGenerateMaskByBand","pixGenerateMaskByBand32","pixGenerateMaskByDiscr32","pixGenerateMaskByValue","pixGeneratePtaBoundary","pixGenerateSelBoundary","pixGenerateSelRandom","pixGenerateSelWithRuns","pixGetAllCCBorders","pixGetAutoFormat","pixGetAverageMasked","pixGetAverageMaskedRGB","pixGetAverageTiled","pixGetAverageTiledRGB","pixGetBackgroundGrayMap","pixGetBackgroundGrayMapMorph","pixGetBackgroundRGBMap","pixGetBackgroundRGBMapMorph","pixGetBinnedColor","pixGetBinnedComponentRange","pixGetBlackOrWhiteVal","pixGetCmapHistogram","pixGetCmapHistogramInRect","pixGetCmapHistogramMasked","pixGetColorAmapHistogram","pixGetColorHistogram","pixGetColorHistogramMasked","pixGetColorNearMaskBoundary","pixGetColormap","pixGetColumnStats","pixGetData","pixGetDepth","pixGetDifferenceHistogram","pixGetDifferenceStats","pixGetDimensions","pixGetEdgeProfile","pixGetExtremeValue","pixGetGrayHistogram","pixGetGrayHistogramInRect","pixGetGrayHistogramMasked","pixGetGrayHistogramTiled","pixGetHeight","pixGetInputFormat","pixGetInvBackgroundMap","pixGetLastOffPixelInRun","pixGetLastOnPixelInRun","pixGetLinePtrs","pixGetLocalSkewAngles","pixGetLocalSkewTransform","pixGetMaxColorIndex","pixGetMaxValueInRect","pixGetMomentByColumn","pixGetMostPopulatedColors","pixGetOuterBorder","pixGetOuterBordersPtaa","pixGetPSNR","pixGetPerceptualDiff","pixGetPixel","pixGetPixelAverage","pixGetPixelStats","pixGetRGBComponent","pixGetRGBComponentCmap","pixGetRGBHistogram","pixGetRGBLine","pixGetRGBPixel","pixGetRandomPixel","pixGetRangeValues","pixGetRankColorArray","pixGetRankValue","pixGetRankValueMasked","pixGetRankValueMaskedRGB","pixGetRasterData","pixGetRefcount","pixGetRegionsBinary","pixGetResolution","pixGetRowStats","pixGetRunCentersOnLine","pixGetRunsOnLine","pixGetSortedNeighborValues","pixGetSpp","pixGetText","pixGetTextCompNew","pixGetTileCount","pixGetWidth","pixGetWordBoxesInTextlines","pixGetWordsInTextlines","pixGetWpl","pixGetXRes","pixGetYRes","pixGlobalNormNoSatRGB","pixGlobalNormRGB","pixGrayMorphSequence","pixGrayQuantFromCmap","pixGrayQuantFromHisto","pixHDome","pixHMT","pixHMTDwa_1","pixHShear","pixHShearCenter","pixHShearCorner","pixHShearIP","pixHShearLI","pixHalfEdgeByBandpass","pixHasHighlightRed","pixHaustest","pixHolesByFilling","pixInferResolution","pixInitAccumulate","pixIntersectionOfMorphOps","pixInvert","pixItalicWords","pixLinearEdgeFade","pixLinearMapToTargetColor","pixLocToColorTransform","pixLocalExtrema","pixLocateBarcodes","pixMakeAlphaFromMask","pixMakeArbMaskFromRGB","pixMakeColorSquare","pixMakeCoveringOfRectangles","pixMakeFrameMask","pixMakeGamutRGB","pixMakeHistoHS","pixMakeHistoHV","pixMakeHistoSV","pixMakeMaskFromLUT","pixMakeMaskFromVal","pixMakeRangeMaskHS","pixMakeRangeMaskHV","pixMakeRangeMaskSV","pixMakeSymmetricMask","pixMapWithInvariantHue","pixMaskBoxa","pixMaskConnComp","pixMaskOverColorPixels","pixMaskOverColorRange","pixMaskOverGrayPixels","pixMaskedThreshOnBackgroundNorm","pixMaxAspectRatio","pixMaxDynamicRange","pixMaxDynamicRangeRGB","pixMeanInRectangle","pixMeanSquareAccum","pixMeasureEdgeSmoothness","pixMeasureSaturation","pixMedianCutHisto","pixMedianCutQuant","pixMedianCutQuantGeneral","pixMedianCutQuantMixed","pixMedianFilter","pixMinMaxNearLine","pixMinOrMax","pixMirrorDetect","pixMirroredTiling","pixModifyBrightness","pixModifyHue","pixModifySaturation","pixModifyStrokeWidth","pixMorphCompSequence","pixMorphCompSequenceDwa","pixMorphDwa_1","pixMorphDwa_2","pixMorphGradient","pixMorphSequence","pixMorphSequenceByComponent","pixMorphSequenceByRegion","pixMorphSequenceDwa","pixMorphSequenceMasked","pixMosaicColorShiftRGB","pixMultConstAccumulate","pixMultConstantColor","pixMultConstantGray","pixMultMatrixColor","pixMultiplyByColor","pixMultiplyGray","pixNumColors","pixNumSignificantGrayColors","pixNumberOccupiedOctcubes","pixOctcubeHistogram","pixOctcubeQuantFromCmap","pixOctcubeQuantMixedWithGray","pixOctreeColorQuant","pixOctreeColorQuantGeneral","pixOctreeQuantByPopulation","pixOctreeQuantNumColors","pixOpen","pixOpenBrick","pixOpenBrickDwa","pixOpenCompBrick","pixOpenCompBrickDwa","pixOpenCompBrickExtendDwa","pixOpenGeneralized","pixOpenGray","pixOpenGray3","pixOr","pixOrientCorrect","pixOrientDetect","pixOtsuAdaptiveThreshold","pixOtsuThreshOnBackgroundNorm","pixPadToCenterCentroid","pixPaintBoxa","pixPaintBoxaRandom","pixPaintSelfThroughMask","pixPaintThroughMask","pixPlotAlongPta","pixPrepare1bpp","pixPrintStreamInfo","pixProcessBarcodes","pixProjective","pixProjectiveColor","pixProjectiveGray","pixProjectivePta","pixProjectivePtaColor","pixProjectivePtaGray","pixProjectivePtaWithAlpha","pixProjectiveSampled","pixProjectiveSampledPta","pixQuadraticVShear","pixQuadraticVShearLI","pixQuadraticVShearSampled","pixQuadtreeMean","pixQuadtreeVariance","pixQuantFromCmap","pixQuantizeIfFewColors","pixRandomHarmonicWarp","pixRankBinByStrip","pixRankColumnTransform","pixRankFilter","pixRankFilterGray","pixRankFilterRGB","pixRankFilterWithScaling","pixRankHaustest","pixRankRowTransform","pixRasterop","pixRasteropFullImage","pixRasteropHip","pixRasteropIP","pixRasteropVip","pixRead","pixReadBarcodeWidths","pixReadBarcodes","pixReadFromMultipageTiff","pixReadHeader","pixReadHeaderMem","pixReadIndexed","pixReadJp2k","pixReadJpeg","pixReadMem","pixReadMemBmp","pixReadMemFromMultipageTiff","pixReadMemGif","pixReadMemJp2k","pixReadMemJpeg","pixReadMemPng","pixReadMemPnm","pixReadMemSpix","pixReadMemTiff","pixReadMemWebP","pixReadStream","pixReadStreamBmp","pixReadStreamGif","pixReadStreamJp2k","pixReadStreamJpeg","pixReadStreamPng","pixReadStreamPnm","pixReadStreamSpix","pixReadStreamTiff","pixReadStreamWebP","pixReadTiff","pixReadWithHint","pixReduceBinary2","pixReduceRankBinary2","pixReduceRankBinaryCascade","pixRemoveAlpha","pixRemoveBorder","pixRemoveBorderConnComps","pixRemoveBorderGeneral","pixRemoveBorderToSize","pixRemoveColormap","pixRemoveColormapGeneral","pixRemoveMatchedPattern","pixRemoveSeededComponents","pixRemoveUnusedColors","pixRemoveWithIndicator","pixRenderBox","pixRenderBoxArb","pixRenderBoxBlend","pixRenderBoxa","pixRenderBoxaArb","pixRenderBoxaBlend","pixRenderContours","pixRenderGridArb","pixRenderHashBox","pixRenderHashBoxArb","pixRenderHashBoxBlend","pixRenderHashBoxa","pixRenderHashBoxaArb","pixRenderHashBoxaBlend","pixRenderHashMaskArb","pixRenderLine","pixRenderLineArb","pixRenderLineBlend","pixRenderPlotFromNuma","pixRenderPlotFromNumaGen","pixRenderPolygon","pixRenderPolyline","pixRenderPolylineArb","pixRenderPolylineBlend","pixRenderPta","pixRenderPtaArb","pixRenderPtaBlend","pixRenderRandomCmapPtaa","pixResizeImageData","pixResizeToMatch","pixReversalProfile","pixRotate","pixRotate180","pixRotate2Shear","pixRotate3Shear","pixRotate90","pixRotateAM","pixRotateAMColor","pixRotateAMColorCorner","pixRotateAMColorFast","pixRotateAMCorner","pixRotateAMGray","pixRotateAMGrayCorner","pixRotateBinaryNice","pixRotateBySampling","pixRotateOrth","pixRotateShear","pixRotateShearCenter","pixRotateShearCenterIP","pixRotateShearIP","pixRotateWithAlpha","pixRowStats","pixRunHistogramMorph","pixRunlengthTransform","pixSauvolaBinarize","pixSauvolaBinarizeTiled","pixSauvolaOnContrastNorm","pixScale","pixScaleAndTransferAlpha","pixScaleAreaMap","pixScaleAreaMap2","pixScaleAreaMapToSize","pixScaleBinary","pixScaleByIntSampling","pixScaleBySampling","pixScaleBySamplingToSize","pixScaleColor2xLI","pixScaleColor4xLI","pixScaleColorLI","pixScaleGeneral","pixScaleGray2xLI","pixScaleGray2xLIDither","pixScaleGray2xLIThresh","pixScaleGray4xLI","pixScaleGray4xLIDither","pixScaleGray4xLIThresh","pixScaleGrayLI","pixScaleGrayMinMax","pixScaleGrayMinMax2","pixScaleGrayRank2","pixScaleGrayRankCascade","pixScaleGrayToBinaryFast","pixScaleLI","pixScaleMipmap","pixScaleRGBToBinaryFast","pixScaleRGBToGray2","pixScaleRGBToGrayFast","pixScaleResolution","pixScaleSmooth","pixScaleSmoothToSize","pixScaleToGray","pixScaleToGray16","pixScaleToGray2","pixScaleToGray3","pixScaleToGray4","pixScaleToGray6","pixScaleToGray8","pixScaleToGrayFast","pixScaleToGrayMipmap","pixScaleToResolution","pixScaleToSize","pixScaleToSizeRel","pixScaleWithAlpha","pixScanForEdge","pixScanForForeground","pixSearchBinaryMaze","pixSearchGrayMaze","pixSeedfill","pixSeedfill4","pixSeedfill4BB","pixSeedfill8","pixSeedfill8BB","pixSeedfillBB","pixSeedfillBinary","pixSeedfillBinaryRestricted","pixSeedfillGray","pixSeedfillGrayBasin","pixSeedfillGrayInv","pixSeedfillGrayInvSimple","pixSeedfillGraySimple","pixSeedfillMorph","pixSeedspread","pixSelectByArea","pixSelectByAreaFraction","pixSelectByPerimSizeRatio","pixSelectByPerimToAreaRatio","pixSelectBySize","pixSelectByWidthHeightRatio","pixSelectComponentBySize","pixSelectLargeULComp","pixSelectMinInConnComp","pixSelectedLocalExtrema","pixSelectiveConnCompFill","pixSerializeToMemory","pixSetAll","pixSetAllArbitrary","pixSetAllGray","pixSetAlphaOverWhite","pixSetBlackOrWhite","pixSetBlackOrWhiteBoxa","pixSetBorderRingVal","pixSetBorderVal","pixSetChromaSampling","pixSetCmapPixel","pixSetColormap","pixSetComponentArbitrary","pixSetData","pixSetDepth","pixSetDimensions","pixSetHeight","pixSetInRect","pixSetInRectArbitrary","pixSetInputFormat","pixSetMasked","pixSetMaskedCmap","pixSetMaskedGeneral","pixSetMirroredBorder","pixSetOrClearBorder","pixSetPadBits","pixSetPadBitsBand","pixSetPixel","pixSetPixelColumn","pixSetRGBComponent","pixSetRGBPixel","pixSetResolution","pixSetSelectCmap","pixSetSelectMaskedCmap","pixSetSpecial","pixSetSpp","pixSetStrokeWidth","pixSetText","pixSetTextCompNew","pixSetTextblock","pixSetTextline","pixSetUnderTransparency","pixSetWidth","pixSetWpl","pixSetXRes","pixSetYRes","pixSetZlibCompression","pixSetupByteProcessing","pixShiftAndTransferAlpha","pixShiftByComponent","pixSimpleCaptcha","pixSimpleColorQuantize","pixSizesEqual","pixSmoothConnectedRegions","pixSnapColor","pixSnapColorCmap","pixSobelEdgeFilter","pixSplitComponentIntoBoxa","pixSplitComponentWithProfile","pixSplitDistributionFgBg","pixSplitIntoBoxa","pixSplitIntoCharacters","pixStereoFromPair","pixStretchHorizontal","pixStretchHorizontalLI","pixStretchHorizontalSampled","pixStrokeWidthTransform","pixSubsampleBoundaryPixels","pixSubtract","pixSubtractGray","pixSwapAndDestroy","pixTRCMap","pixTRCMapGeneral","pixTestClipToForeground","pixTestForSimilarity","pixThinConnected","pixThinConnectedBySet","pixThreshOnDoubleNorm","pixThreshold8","pixThresholdByConnComp","pixThresholdByHisto","pixThresholdForFgBg","pixThresholdGrayArb","pixThresholdOn8bpp","pixThresholdPixelSum","pixThresholdSpreadNorm","pixThresholdTo2bpp","pixThresholdTo4bpp","pixThresholdToBinary","pixThresholdToValue","pixTilingCreate","pixTilingDestroy","pixTilingGetCount","pixTilingGetSize","pixTilingGetTile","pixTilingNoStripOnPaint","pixTilingPaintTile","pixTophat","pixTransferAllData","pixTranslate","pixTwoSidedEdgeFilter","pixUnionOfMorphOps","pixUnpackBinary","pixUnsharpMasking","pixUnsharpMaskingFast","pixUnsharpMaskingGray","pixUnsharpMaskingGray1D","pixUnsharpMaskingGray2D","pixUnsharpMaskingGrayFast","pixUpDownDetect","pixUsesCmapColor","pixVShear","pixVShearCenter","pixVShearCorner","pixVShearIP","pixVShearLI","pixVarThresholdToBinary","pixVarianceByColumn","pixVarianceByRow","pixVarianceInRect","pixVarianceInRectangle","pixWarpStereoscopic","pixWindowedMean","pixWindowedMeanSquare","pixWindowedStats","pixWindowedVariance","pixWindowedVarianceOnLine","pixWordBoxesByDilation","pixWordMaskByDilation","pixWrite","pixWriteAutoFormat","pixWriteCompressedToPS","pixWriteDebug","pixWriteImpliedFormat","pixWriteJp2k","pixWriteJpeg","pixWriteMem","pixWriteMemBmp","pixWriteMemGif","pixWriteMemJp2k","pixWriteMemJpeg","pixWriteMemPS","pixWriteMemPam","pixWriteMemPdf","pixWriteMemPng","pixWriteMemPnm","pixWriteMemSpix","pixWriteMemTiff","pixWriteMemTiffCustom","pixWriteMemWebP","pixWriteMixedToPS","pixWritePSEmbed","pixWritePng","pixWriteSegmentedPageToPS","pixWriteStream","pixWriteStreamAsciiPnm","pixWriteStreamBmp","pixWriteStreamGif","pixWriteStreamJp2k","pixWriteStreamJpeg","pixWriteStreamPS","pixWriteStreamPam","pixWriteStreamPdf","pixWriteStreamPng","pixWriteStreamPnm","pixWriteStreamSpix","pixWriteStreamTiff","pixWriteStreamTiffWA","pixWriteStreamWebP","pixWriteStringPS","pixWriteTiff","pixWriteTiffCustom","pixWriteWebP","pixXor","pixZero","pixa","pixa","pixa","pixaAccumulateSamples","pixaAddBorderGeneral","pixaAddBox","pixaAddPix","pixaAddPixWithText","pixaAddTextNumber","pixaAddTextlines","pixaAnyColormaps","pixaBinSort","pixaCentroids","pixaChangeRefcount","pixaClear","pixaClipToForeground","pixaClipToPix","pixaCompareInPdf","pixaComparePhotoRegionsByHisto","pixaConstrainedSelect","pixaConvertTo1","pixaConvertTo32","pixaConvertTo8","pixaConvertTo8Colormap","pixaConvertToGivenDepth","pixaConvertToNUpPixa","pixaConvertToPdf","pixaConvertToPdfData","pixaConvertToSameDepth","pixaCopy","pixaCountPixels","pixaCountText","pixaCreate","pixaCreateFromBoxa","pixaCreateFromPix","pixaCreateFromPixacomp","pixaDestroy","pixaDisplay","pixaDisplayBoxaa","pixaDisplayLinearly","pixaDisplayMultiTiled","pixaDisplayOnLattice","pixaDisplayPairTiledInColumns","pixaDisplayRandomCmap","pixaDisplayTiled","pixaDisplayTiledAndScaled","pixaDisplayTiledByIndex","pixaDisplayTiledInColumns","pixaDisplayTiledInRows","pixaDisplayTiledWithText","pixaDisplayUnsplit","pixaEqual","pixaExtendArrayToSize","pixaExtendByMorph","pixaExtendByScaling","pixaExtractColumnFromEachPix","pixaFindAreaFraction","pixaFindAreaFractionMasked","pixaFindDimensions","pixaFindPerimSizeRatio","pixaFindPerimToAreaRatio","pixaFindStrokeWidth","pixaFindWidthHeightProduct","pixaFindWidthHeightRatio","pixaGetAlignedStats","pixaGetBox","pixaGetBoxGeometry","pixaGetBoxa","pixaGetBoxaCount","pixaGetCount","pixaGetDepthInfo","pixaGetFont","pixaGetLinePtrs","pixaGetPix","pixaGetPixArray","pixaGetPixDimensions","pixaGetRenderingDepth","pixaHasColor","pixaInitFull","pixaInsertPix","pixaInterleave","pixaIsFull","pixaJoin","pixaMakeFromTiledPix","pixaMakeFromTiledPixa","pixaMakeSizeIndicator","pixaModifyStrokeWidth","pixaMorphSequenceByComponent","pixaMorphSequenceByRegion","pixaRead","pixaReadBoth","pixaReadFiles","pixaReadFilesSA","pixaReadMem","pixaReadMemMultipageTiff","pixaReadMultipageTiff","pixaReadStream","pixaRemoveOutliers1","pixaRemoveOutliers2","pixaRemovePix","pixaRemovePixAndSave","pixaRemoveSelected","pixaRenderComponent","pixaReplacePix","pixaRotate","pixaRotateOrth","pixaSaveFont","pixaScale","pixaScaleBySampling","pixaScaleToSize","pixaScaleToSizeRel","pixaSelectByArea","pixaSelectByAreaFraction","pixaSelectByNumConnComp","pixaSelectByPerimSizeRatio","pixaSelectByPerimToAreaRatio","pixaSelectBySize","pixaSelectByWidthHeightRatio","pixaSelectRange","pixaSelectToPdf","pixaSelectWithIndicator","pixaSelectWithString","pixaSetBoxa","pixaSetFullSizeBoxa","pixaSetStrokeWidth","pixaSetText","pixaSizeRange","pixaSort","pixaSort2dByIndex","pixaSortByIndex","pixaSplitIntoFiles","pixaSplitPix","pixaThinConnected","pixaTranslate","pixaVerifyDepth","pixaVerifyDimensions","pixaWrite","pixaWriteCompressedToPS","pixaWriteDebug","pixaWriteFiles","pixaWriteMem","pixaWriteMemMultipageTiff","pixaWriteMemWebPAnim","pixaWriteMultipageTiff","pixaWriteStream","pixaWriteStreamInfo","pixaWriteStreamWebPAnim","pixaWriteWebPAnim","pixa_id","pixa_tr","pixa_u","pixaa","pixaa","pixaaAddBox","pixaaAddPix","pixaaAddPixa","pixaaClear","pixaaCreate","pixaaCreateFromPixa","pixaaDestroy","pixaaDisplay","pixaaDisplayByPixa","pixaaDisplayTiledAndScaled","pixaaFlattenToPixa","pixaaGetBoxa","pixaaGetCount","pixaaGetPix","pixaaGetPixa","pixaaInitFull","pixaaIsFull","pixaaJoin","pixaaRead","pixaaReadFromFiles","pixaaReadMem","pixaaReadStream","pixaaReplacePixa","pixaaScaleToSize","pixaaScaleToSizeVar","pixaaSelectRange","pixaaSizeRange","pixaaTruncate","pixaaVerifyDepth","pixaaVerifyDimensions","pixaaWrite","pixaaWriteMem","pixaaWriteStream","pixaa_u","pixaccAdd","pixaccCreate","pixaccCreateFromPix","pixaccDestroy","pixaccFinal","pixaccGetOffset","pixaccGetPix","pixaccMultConst","pixaccMultConstAccumulate","pixaccSubtract","pixacompAddBox","pixacompAddPix","pixacompAddPixcomp","pixacompConvertToPdf","pixacompConvertToPdfData","pixacompCreate","pixacompCreateFromFiles","pixacompCreateFromPixa","pixacompCreateFromSA","pixacompCreateWithInit","pixacompDestroy","pixacompDisplayTiledAndScaled","pixacompFastConvertToPdfData","pixacompGetBox","pixacompGetBoxGeometry","pixacompGetBoxa","pixacompGetBoxaCount","pixacompGetCount","pixacompGetOffset","pixacompGetPix","pixacompGetPixDimensions","pixacompGetPixcomp","pixacompInterleave","pixacompJoin","pixacompRead","pixacompReadMem","pixacompReadStream","pixacompReplacePix","pixacompReplacePixcomp","pixacompSetOffset","pixacompWrite","pixacompWriteFiles","pixacompWriteMem","pixacompWriteStream","pixacompWriteStreamInfo","pixad","pixadb","pixadb_ave","pixadb_boot","pixadb_split","pixam","pixas","pixat","pixatd","pixc","pixcmapAddBlackOrWhite","pixcmapAddColor","pixcmapAddNearestColor","pixcmapAddNewColor","pixcmapAddRGBA","pixcmapClear","pixcmapColorToGray","pixcmapContrastTRC","pixcmapConvertHSVToRGB","pixcmapConvertRGBToHSV","pixcmapConvertRGBToYUV","pixcmapConvertTo4","pixcmapConvertTo8","pixcmapConvertToHex","pixcmapConvertYUVToRGB","pixcmapCopy","pixcmapCountGrayColors","pixcmapCreate","pixcmapCreateLinear","pixcmapCreateRandom","pixcmapDeserializeFromMemory","pixcmapDestroy","pixcmapGammaTRC","pixcmapGetColor","pixcmapGetColor32","pixcmapGetCount","pixcmapGetDepth","pixcmapGetDistanceToColor","pixcmapGetFreeCount","pixcmapGetIndex","pixcmapGetMinDepth","pixcmapGetNearestGrayIndex","pixcmapGetNearestIndex","pixcmapGetRGBA","pixcmapGetRGBA32","pixcmapGetRangeValues","pixcmapGetRankIntensity","pixcmapGrayToColor","pixcmapGrayToFalseColor","pixcmapHasColor","pixcmapIsBlackAndWhite","pixcmapIsOpaque","pixcmapIsValid","pixcmapNonOpaqueColorsInfo","pixcmapRead","pixcmapReadMem","pixcmapReadStream","pixcmapResetColor","pixcmapSerializeToMemory","pixcmapSetAlpha","pixcmapSetBlackAndWhite","pixcmapShiftByComponent","pixcmapShiftIntensity","pixcmapToArrays","pixcmapToOctcubeLUT","pixcmapToRGBTable","pixcmapUsableColor","pixcmapWrite","pixcmapWriteMem","pixcmapWriteStream","pixcompCopy","pixcompCreateFromFile","pixcompCreateFromPix","pixcompCreateFromString","pixcompDestroy","pixcompDetermineFormat","pixcompGetDimensions","pixcompGetParameters","pixcompWriteFile","pixcompWriteStreamInfo","pixdb_ave","pixdb_range","pixelFractionalShift","pixelLinearMapToTargetColor","pixelShiftByComponent","pixlab","pixm","pixs","pixs","pixs","pixs","pixst","pixt","plotdata","plotlabels","plotstyles","pmsCreate","pmsCustomAlloc","pmsCustomDealloc","pmsDestroy","pmsGetAlloc","pmsGetLevelForAlloc","pmsGetLevelForDealloc","pmsLogInfo","popen","posix_memalign","poststream","predictor","prev","printf","projectiveXformPt","projectiveXformSampledPt","pselect","pta","pta","ptaAddPt","ptaAffineTransform","ptaChangeRefcount","ptaClone","ptaContainsPt","ptaConvertToBox","ptaConvertToBoxa","ptaConvertToNuma","ptaCopy","ptaCopyRange","ptaCreate","ptaCreateFromNuma","ptaCropToMask","ptaCyclicPerm","ptaDestroy","ptaEmpty","ptaEqual","ptaGetArrays","ptaGetBoundaryPixels","ptaGetBoundingRegion","ptaGetCount","ptaGetCubicLSF","ptaGetIPt","ptaGetInsideBox","ptaGetLinearLSF","ptaGetMinMax","ptaGetNeighborPixLocs","ptaGetPixelsFromPix","ptaGetPt","ptaGetQuadraticLSF","ptaGetQuarticLSF","ptaGetRange","ptaGetRankValue","ptaGetRefcount","ptaGetSortIndex","ptaInsertPt","ptaIntersectionByAset","ptaIntersectionByHmap","ptaJoin","ptaNoisyLinearLSF","ptaNoisyQuadraticLSF","ptaPolygonIsConvex","ptaPtInsidePolygon","ptaRead","ptaReadMem","ptaReadStream","ptaRemoveDupsByAset","ptaRemoveDupsByHmap","ptaRemovePt","ptaReplicatePattern","ptaReverse","ptaRotate","ptaScale","ptaSelectByValue","ptaSelectRange","ptaSetPt","ptaSort","ptaSort2d","ptaSortByIndex","ptaSubsample","ptaTestIntersection","ptaTransform","ptaTranslate","ptaTranspose","ptaUnionByAset","ptaUnionByHmap","ptaWrite","ptaWriteDebug","ptaWriteMem","ptaWriteStream","pta_u","ptaa","ptaaAddPt","ptaaAddPta","ptaaCreate","ptaaDestroy","ptaaGetBoundaryPixels","ptaaGetCount","ptaaGetPt","ptaaGetPta","ptaaIndexLabeledPixels","ptaaInitFull","ptaaJoin","ptaaRead","ptaaReadMem","ptaaReadStream","ptaaReplacePta","ptaaSortByIndex","ptaaTruncate","ptaaWrite","ptaaWriteDebug","ptaaWriteMem","ptaaWriteStream","ptaa_u","ptac","ptact","ptall","ptas","ptaul","ptaul","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","ptra","ptraAdd","ptraCompactArray","ptraConcatenatePdf","ptraConcatenatePdfToData","ptraCreate","ptraDestroy","ptraGetActualCount","ptraGetMaxIndex","ptraGetPtrToItem","ptraInsert","ptraJoin","ptraRemove","ptraRemoveLast","ptraReplace","ptraReverse","ptraSwap","ptraaCreate","ptraaDestroy","ptraaFlattenToPtra","ptraaGetPtra","ptraaGetSize","ptraaInsertPtra","ptype","putc","putc_unlocked","putchar","putchar_unlocked","putenv","puts","putw","qecvt","qecvt_r","qfcvt","qfcvt_r","qgcvt","qsort","quad_t","quadtreeGetChildren","quadtreeGetParent","quadtreeMaxLevels","quick_exit","quot","quot","quot","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rankhaus","rasteropHipLow","rasteropLow","rasteropUniLow","rasteropVipLow","rch","rchDestroy","rchExtract","rcha","rchaDestroy","rchaExtract","readHeaderJp2k","readHeaderJpeg","readHeaderMemJp2k","readHeaderMemJpeg","readHeaderMemPng","readHeaderMemPnm","readHeaderMemTiff","readHeaderMemWebP","readHeaderPng","readHeaderPnm","readHeaderSpix","readHeaderTiff","readHeaderWebP","readResolutionMemJpeg","realloc","reallocNew","reallocarray","realpath","recogAddDigitPadTemplates","recogAddSample","recogAverageSamples","recogCorrelationBestChar","recogCorrelationBestRow","recogCreate","recogCreateDid","recogCreateFromPixa","recogCreateFromPixaNoFinish","recogCreateFromRecog","recogDebugAverages","recogDecode","recogDestroy","recogDestroyDid","recogDidExists","recogExtractNumbers","recogExtractPixa","recogFilterPixaBySize","recogGetClassIndex","recogGetClassString","recogGetCount","recogGetDid","recogIdentifyMultiple","recogIdentifyPix","recogIdentifyPixa","recogIsPaddingNeeded","recogMakeBootDigitRecog","recogMakeBootDigitTemplates","recogModifyTemplate","recogPadDigitTrainingSet","recogProcessLabeled","recogProcessToIdentify","recogRead","recogReadMem","recogReadStream","recogRemoveOutliers1","recogRemoveOutliers2","recogSetChannelParams","recogSetParams","recogShowAverageTemplates","recogShowContent","recogShowMatch","recogShowMatchesInRange","recogSkipIdentify","recogSortPixaByClass","recogSplitIntoCharacters","recogStringToIndex","recogTrainFromBoot","recogTrainLabeled","recogTrainingFinished","recogWrite","recogWriteMem","recogWriteStream","red","redfactor","redfactor","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","reformatPacked64","refpage","regTestCheckFile","regTestCleanup","regTestCompareFiles","regTestComparePix","regTestCompareSimilarPix","regTestCompareStrings","regTestCompareValues","regTestGenLocalFilename","regTestSetup","regTestWriteDataAndCheck","regTestWritePixAndCheck","reg_save_area","register_t","rem","rem","rem","remove","rename","renameat","res","resetMorphBoundaryCondition","returnErrorFloat","returnErrorInt","returnErrorPtr","rewind","right","rightcurv","rightslope","root","rootname","rpmatch","rptr","runlengthMembershipOnLine","saConcatenatePdf","saConcatenatePdfToData","saConvertFilesToPdf","saConvertFilesToPdfData","saConvertUnscaledFilesToPdf","saConvertUnscaledFilesToPdfData","sa_text","sacmap","safiles","samphdispar","sample","sampling","sampling","sampvdispar","sampydispar","saprex","sarrayAddString","sarrayAppend","sarrayAppendRange","sarrayChangeRefcount","sarrayClear","sarrayClone","sarrayConcatUniformly","sarrayConvertFilesFittedToPS","sarrayConvertFilesToPS","sarrayConvertWordsToLines","sarrayCopy","sarrayCreate","sarrayCreateInitialized","sarrayCreateLinesFromString","sarrayCreateWordsFromString","sarrayDestroy","sarrayGenerateIntegers","sarrayGetArray","sarrayGetCount","sarrayGetRefcount","sarrayGetString","sarrayIntersectionByAset","sarrayIntersectionByHmap","sarrayJoin","sarrayLookupCSKV","sarrayPadToSameSize","sarrayParseRange","sarrayRead","sarrayReadMem","sarrayReadStream","sarrayRemoveDupsByAset","sarrayRemoveDupsByHmap","sarrayRemoveString","sarrayReplaceString","sarraySelectBySubstring","sarraySelectRange","sarraySort","sarraySortByIndex","sarraySplitString","sarrayToString","sarrayToStringRange","sarrayUnionByAset","sarrayUnionByHmap","sarrayWrite","sarrayWriteMem","sarrayWriteStderr","sarrayWriteStream","satext","scaleh","scalew","scaling","scanf","scanf1","score","seed48","seed48_r","sel","selCopy","selCreate","selCreateBrick","selCreateComb","selCreateFromColorPix","selCreateFromPix","selCreateFromPta","selCreateFromString","selDestroy","selDisplayInPix","selFindMaxTranslations","selGetElement","selGetName","selGetParameters","selGetTypeAtOrigin","selMakePlusSign","selPrintToString","selRead","selReadFromColorImage","selReadStream","selRotateOrth","selSetElement","selSetName","selSetOrigin","selWrite","selWriteStream","sela4and8ccThin","sela4ccThin","sela8ccThin","selaAddBasic","selaAddCrossJunctions","selaAddDwaCombs","selaAddDwaLinear","selaAddHitMiss","selaAddSel","selaAddTJunctions","selaCreate","selaCreateFromColorPixa","selaCreateFromFile","selaDestroy","selaDisplayInPix","selaFindSelByName","selaGetBrickName","selaGetCombName","selaGetCount","selaGetSel","selaGetSelnames","selaMakeThinSets","selaRead","selaReadStream","selaWrite","selaWriteStream","select","selectComposableSels","selectComposableSizes","selectDefaultPdfEncoding","setLeptDebugOK","setLineDataVal","setMsgSeverity","setPixMemoryManager","setPixelLow","setbuf","setbuffer","setenv","setlinebuf","setsize","setstate","setstate_r","setvbuf","setwidth","showExtractNumbers","sigset_t","size","size","size","size","sizehaus","skip_horiz","snprintf","spacewidth","special","spglobal","splitPathAtDirectory","splitPathAtExtension","splitStringToParagraphs","splocal","spp","spp","sprintf","srand","srand48","srand48_r","srandom","srandom_r","sreadHeaderSpix","sscanf","sscanf1","stack","start","startTimer","startTimerNested","startWallTimer","start_sec","start_usec","startx","startx","state","state","stderr","stdin","stdout","step","stopTimer","stopTimerNested","stopWallTimer","stop_sec","stop_usec","strcodeCreate","strcodeCreateFromFile","strcodeFinalize","strcodeGenerate","stringCat","stringCheckForChars","stringCompareLexical","stringConcatNew","stringCopy","stringCopySegment","stringFindEachSubstr","stringFindSubstr","stringJoin","stringJoinIP","stringLength","stringNew","stringRemoveChars","stringReplace","stringReplaceEachSubstr","stringReplaceSubstr","stringReverse","stringSplitOnToken","strip","strtod","strtof","strtokSafe","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtouq","success","sudokuCreate","sudokuDestroy","sudokuGenerate","sudokuOutput","sudokuReadFile","sudokuReadString","sudokuSolve","sudokuTestUniqueness","sumtab","suseconds_t","sx","sx","sy","sy","system","tabsize","tempfile","templ_use","tempnam","testname","text","text","text","th","thresh","threshold","thresholdToBinaryLineLow","tiffGetCount","time_t","timer_t","timespec","timeval","title","title","tmpfile","tmpnam","tmpnam_r","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trailer","train_done","trellisscore","trellistempl","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstart","tv_nsec","tv_sec","tv_sec","tv_usec","tw","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","ungetc","unsetenv","useboth","ushort","utype","va_list","val","valloc","value","vdprintf","vertlinesep","vfprintf","vfscanf","vfscanf1","vprintf","vscanf","vscanf1","vsnprintf","vsprintf","vsscanf","vsscanf1","vsuccess","vvalid","w","w","w","w","w","w","w","w","w","w","w","w","wchar_t","wcstombs","wctomb","weightfactor","wh","width","widthtab","wpl","wpl","wpl","writeImageCompressedToPSFile","writeImageFileInfo","writeMultipageTiff","writeMultipageTiffSA","wshedApply","wshedBasins","wshedCreate","wshedDestroy","wshedRenderColors","wshedRenderFill","x","x","xlabel","xloc","xoverlap","xrefloc","xres","xres","xres","xres","xy","y","y","ylabel","yloc","yoverlap","yres","yres","yres","yres","ysuccess","zlibCompress","zlibUncompress","Box","BoxGeometry","Boxa","BoxaRefIterator","InvalidPathNulByte","InvalidUtf8Path","MemoryTooLarge","Pix","PixError","ReadFrom","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_box","get_geometry","get_h","get_n","get_w","h","into","into","into","into","into","into","into_iter","into_iter","next","pix_read","pix_read_mem","provide","raw","raw","raw","source","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","w","x","y","source","source","MAX_CREDIBLE_RESOLUTION","MIN_CREDIBLE_RESOLUTION","TessApi","TessInitError","TessSetVariableError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","get_alto_text","get_component_images","get_hocr_text","get_image_dimensions","get_lstm_box_text","get_regions","get_source_y_resolution","get_tsv_text","get_utf8_text","get_word_str_box_text","into","into","into","mean_text_conf","new","provide","provide","raw","recognize","set_image","set_rectangle","set_rectangle_from_box","set_source_resolution","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"leptess"],[680,"leptess::capi"],[6606,"leptess::leptonica"],[6685,"leptess::leptonica::PixError"],[6687,"leptess::tesseract"]],"d":["Use divisible blobs chopping","Debug level for unichar ambiguities","Debug level","Exposure value follows this pattern in the image filename. …","Learn both character fragments (as is done in the special …","Each bounding box is assumed to contain ngrams. Only learn …","Page number to apply boxes from","include fixed-pitch heuristics in char segmentation","Debug level for BiDi","unrej potential with no checks","Certainty scaling factor","Split center adjustment","Width of (smaller) chopped blobs above which we don’t …","Chop debug","Chop enable","Good split limit","Min Inside Angle Bend","Min Outline Area","Min Number of Points on Outline","Use new seam_pile","OK split limit","Split overlap adjustment","Same distance","Max number of seams in seam_pile","Split sharpness adjustment","Split length adjustment","Split Length","Vertical creep","Width change adjustment","X / Y  length weight","Leading punctuation","1st Trailing punctuation","2nd Trailing punctuation","Threshold for good features during adaptive 0-255","Threshold for good protos during adaptive 0-255","Prune poor adapted results this much worse than best result","Threshold at which classify_adapted_pruning_factor starts","Assume the input is numbers [0-9].","Character Normalization Range ...","Exclude fragments that do not look like whole characters …","Class Pruner Multiplier 0-255:","Class Pruner Threshold 0-255","Class Pruner Angle Pad Loose","Class Pruner Angle Pad Medium","CLass Pruner Angle Pad Tight","Class Pruner CutoffStrength:","Class Pruner End Pad Loose","Class Pruner End Pad Medium","Class Pruner End Pad Tight","Class Pruner Side Pad Loose","Class Pruner Side Pad Medium","Class Pruner Side Pad Tight","Bring up graphical debugging windows for fragments training","Classify debug level","Enable match debugger","Enable adaptive classifier","Enable adaptive classifier","Default font name to be used in training","Integer Matcher Multiplier  0-255:","Class str to debug learning","Learning Debug Level:","Veto difference between classifier certainties","Veto ratio between classifier ratings","Slope above which lines are called vertical","Slope below which lines are called horizontal","Penalty to apply when a non-alnum is vertically out of its …","Non-linear stroke-density normalization","Norm adjust curl ...","Norm adjust midpoint ...","Normalization Method   ...","Number of Class Pruner Levels","Pico Feature Length","Proto Pruner Angle Pad","Proto Prune End Pad","Proto Pruner Side Pad","Save adapted templates to a file","Use pre-adapted classifier templates","Il1 conflict set","Use acceptability in okstring","As it says","POTENTIAL crunch cert lt this","Del if word gt xht x this above bl","Del if word gt xht x this below bl","Del if word ht gt xht x this","Del if word ht lt xht x this","Del if word width lt xht x this","POTENTIAL crunch rating lt this","Take out ~^ early?","Before word crunch?","Fiddle alpha figures","Don’t pot crunch sensible strings","Don’t crunch words with long lower case strings","Don’t touch sensible strings","Don’t crunch words with long lower case strings","Crunch words with long repetitions","crunch garbage cert lt this","crunch garbage rating lt this","How many potential indicators needed","POTENTIAL crunch cert lt this","POTENTIAL crunch rating lt this","For adj length in rating per ch","Small if lt xht x this","As it says","crunch rating lt this","Set to 1 for general debug info, to 2 for more details, to …","File to send tprintf output to","Contextual fixspace debug","Debug reassignment of small outlines","Reestimate debug","Whether to create a debug image for split shiro-rekha …","Debug level for split shiro-rekha process.","Do not include character fragments in the results of the …","Worst certainty for words that can be inserted into the …","Worst certainty for using pending dictionary","Title of output document (used for hOCR and PDF output)","Function used for calculation of dot product","Min area fraction of grandchild for box","Min area fraction of child outline","Max holes allowed in blob","Remove boxy parents of char-like children","Importance ratio for chucking outlines","turn on debugging for this module","Max layers of nested children inside a character outline","Max number of children inside a character outline","Min pixels for potential char in box","Max lensq/area for acceptable child outline","Use the new outline complexity module","Editor debug window height","Editor debug window name","Editor debug window width","Editor debug window X Pos","Editor debug window Y Pos","Blob bounding box colour","Add to image height for menu bar","Correct text colour","Editor image window name","Word bounding box colour","Editor image X Pos","Editor image Y Pos","Word window height","BL normalized word window","Word window width","Word window X Pos","Word window Y Pos","Remove and conditionally reassign small outlines when they …","Save input bi image","Save the merged image","Save the seed image","Save special character image","Filename extension","What constitues done for spacing","How many non-noise blbs either side?","Small if lt xht x this","force associator to run regardless of what enable_assoc is…","Name of debugfile","xht multiplier","Say which blocks have tables","Ensure gaps not less than 2quanta wide","Use large space at start and end of rows","Add coordinates for each character to hocr output","Add font info to hocr output","Debug level for hyphenated words.","Run interactively?","Set JPEG quality level","Language model debug level","Minimum length of compound words","Average classifier score of a non-matching unichar.","Turn on/off the use of character ngram model","Maximum order of the character ngram model","Factor to bring log-probs into the same range as ratings …","Strength of the character ngram model relative to the …","To avoid overly small denominators use this as the floor …","Words are delimited by space","Use only the first UTF8 step of the given string when …","Penalty for inconsistent case","Penalty for inconsistent character type","Penalty for inconsistent font","Penalty increment","Penalty for non-dictionary words","Penalty for words not in the frequent word dictionary","Penalty for inconsistent punctuation","Penalty for inconsistent script","Penalty for inconsistent spacing","Use sigmoidal score for certainty","Maximum number of prunable (those for which PrunablePath() …","Maximum size of viterbi lists recorded in BLOB_CHOICEs","High level wrapper for Tesseract and Leptonica","Load dawg with special word bigrams.","Load frequent word dawg.","Load dawg with number patterns.","Load dawg with punctuation patterns.","Load system word dawg.","Load unambiguous word dawg.","Allows to include alternative symbols choices in the hOCR …","Use ratings matrix/beam search with lstm","Avg. noise blob length","Bad Match Pad (0-1)","Maximum angle delta for prototype clustering","Matcher Debug Flags","Matcher Debug Level","Use two different windows for debugging the matching: One …","Good Match (0-1)","Reliable Config Threshold","Perfect Match (0-1)","Min # of permanent classes","New template margin (0-1)","Great Match (0-1)","Enable adaption even if the ambiguities have not been seen","Maximum number of different character choices to consider …","Merge the fragments in the ratings matrix and delete them …","Specify minimum characters to try during OSD","Min acceptable orientation margin","Reject any x-ht lt or eq than this","Print multilang debug info.","Hingepoint for base char certainty","Hingepoint for disjoint certainty","Scaling on certainty diff from Hingepoint","Threshold for new punc char certainty","Max diacritics to apply to a blob","Max diacritics to apply to a word","Punct. chs expected WITHIN numbers","Whether to use the top-line splitting process for …","Allow NN to unrej","Improve correlation of heights","Max aspect ratio of a dot","Max lost before fallback line used","Fix bug in modes threshold for xheights","Fraction of est allowed in calc","Non standard number of outlines","Non standard number of outlines","Output file for ambiguities found in the dictionary","Page separator (default is form feed control character)","Detect music staff and remove intersecting components","Whether to use the top-line splitting process for …","Print paragraph debug info.","Run paragraph detection on the post-text-recognition (more …","Max advance fake generation","Dist inside big blob for chopping","Use new fast algorithm","Fraction of cut for free cuts","Allow feature extractors to see the original outline","Debug old poly","More accurate approx on wide things","Preserve multiple interword spaces","Prioritize blob division over chopping","good_quality_doc gte good blobs limit","good_quality_doc gte good char limit","alphas in a good word","good_quality_doc lte outline error limit","good_quality_doc lte rejection limit","good_quality_doc gte good char limit","Rating scaling factor","Don’t double check","Use dictword test","Extend permuter check","Use DOC dawg in 11l conf. detector","Individual rejection control","Extend permuter check","Individual rejection control","Individual rejection control","if &gt;this fract","Fix blobs that aren’t chopped","Save alternative paths found during chopping and …","Save Document Words","Don’t use any alphabetic-specific tricks. Set to true in …","Default score multiplier for word matches, which may have …","Score multiplier for word matches that have good case …","Score multiplier for word matches which have good case and …","Score multiplier for glyph fragment segmentations which do …","Score multiplier for poorly cased strings that are not in …","SegSearch debug level","Maximum character width-to-height ratio","Maximum number of pain point classifications per chunk …","Maximum number of pain points stored in the queue","Max large speckle size","Penalty to add to worst rating for noise","Max certaintly variation allowed in a word (in sigma)","Certainty to add for each dict char above small word size.","Stopper debug level","Make AcceptableChoice() always return false. Useful when …","Certainty threshold for non-dict words","Reject certainty offset","Size of dict word to be treated as non-dict word","Stream a filelist from stdin","Maximum top of a character measured as a multiple of x…","What reduction in badness do we think sufficient to choose …","Debug level for sub &amp; superscript fixer","Minimum bottom of a character measured as a multiple of x…","A superscript scaled down more than this is unbelievably …","How many times worse certainty does a superscript position …","Accept good rating limit","UNLV keep 1Il chars rejected","Suspect marker level","Don’t touch bad rating limit","Don’t suspect dict wds longer than this","Baseline Normalized Matching","Character Normalized Matching","Generate and print debug information for adaption","Perform training for ambiguities","Amount of debug output for bigram correction.","Good blob limit","Blacklist of chars not to recognize","List of chars to override tessedit_char_blacklist","Whitelist of chars to recognize","Scale factor for features not used","Write .xml ALTO file","Output text with boxes","Write .html hOCR output file","Write .box file for LSTM training","Write .pdf output file","Write .tsv output file","Write .txt output file","Write WordStr format .box output file","Block and Row stats","Page stats","Output font info per char","Output data to debug file","Draw output words","Try inverting the image in `LSTMRecognizeWord`","Use word segmentation quality metric","Use word segmentation quality metric","Dump char choices","Dump intermediate images made during page segmentation","Enable correction based on the word bigram dictionary.","Enable single word correction based on the dictionary.","Add words to the document dictionary","Try to improve fuzzy spaces","Crunch double hyphens?","Contextual 0O O0 flips","rej good doc wd if more than this fraction rejected","Reduce rejection on good docs","Rej blbs near image edge limit","Only initialize with the config file. Useful if the …","List of languages to load with this one","Aspect ratio dot/hyphen test","Generate more boxes from boxed chars","Do minimal rejection on pass 1 output","Only reject tess failures","Which OCR engine(s) to run (Tesseract, LSTM, both). …","According to dict_word","-1 -&gt; All pages, else specific page to process","Page seg mode: 0=osd only, 1=auto+osd, 2=auto_only, …","Run in parallel where possible","Reward punctuation joins","Only rej partially rejected words in block rejection","Only preserve wds longer than this","Only rej partially rejected words in row rejection","Reject all bad quality wds","%rej allowed before rej whole block","%rej allowed before rej whole doc","Rejection algorithm","%rej allowed before rej whole row","Adaption debug","Take segmentation and labeling from box file","Conversion of word/line box file to char box file","Apply row rejection to good docs","Adaptation decision algorithm for tess","Test adaption criteria","Print timing stats","Generate training data from boxed chars","Break input into lines and remap boxes if present","Max words to keep in list","Don’t bother with word plausibility","Aspect ratio dot/hyphen test","In multilingual mode use params model of the primary …","Reject spaces?","Number of row rejects in whole word rejects which prevents …","Make output have exactly one word per WERD","Write block separators in output","Capture the image from the IPE","Write all parameters to the given file.","Write repetition char code","Write .unlv output file","Don’t reject ANYTHING AT ALL","Don’t reject ANYTHING","Test for point","xcoord","ycoord","Create PDF with only one invisible text layer","All doc is proportial text","Min pile height to make ascheight","Max cap/xheight","Min cap/xheight","Ding rate for unbalanced char cells","Baseline debug level","Bias skew estimates with line length","Attempt whole doc/block fixed pitch","Moan about prop blocks","Moan about fixed pitch blocks","Dump stats when moaning","Max baseline shift","Min size of baseline shift","Max width before chopping","Chopper is being tested.","Debug baseline generation","Print test blob information","Block to do debug on","Turn on output related to bugs in tab finding","Write full metric stuff","Debug on fixed pitch test","Make debug windows printable","Debug tab finding","Test xheight algorithms","Min pile height to make descheight","Max desc/xheight","Min desc/xheight","Turn off dp fixed pitch algorithm","Max pixel gap for broken pixed pitch","Turn on equation detector","New row made if blob makes row this big","Factor to expand rows by in expand_rows","Do even faster pitch algorithm","Prevent multiple baselines","Use spline baseline","Force proportional word segmentation on all rows","Max allowed bending of chop cells","Max distance of chop pt from vertex","Do fixed pitch chopping","Min width of decent blobs","Pitch IQR/Gap IQR threshold","Vigorously remove noise","Ile of sizes for xheight guess","Ile of sizes for xheight guess","Interpolate across gaps","Max iqr/median for linespace","Number of linew fits to do","Max number of blobs a big blob can overlap","Pixel size of noise","Xh fraction noise in pitch","Min blob height/top to include blob top into xheight stats","Min blobs before gradient counted","* blob height for initial linesize","Min credible pixel xheight","fraction of linesize for min xheight","Use test xheight mechanism","Don’t remove noise blobs","Fraction of bounding box for noise","Debug row garbage detector","Height fraction to discard outlines as speckle noise","Dot to norm ratio for deletion","Reject noise-like rows","Reject noise-like words","Dot to norm ratio for deletion","Fraction of size for maxima","Fraction of x for big t count","super norm blobs to save row","xh fract width error for norm blobs","xh fract height error for norm blobs","Transitions for normal blob","Fraction of neighbourhood","Make baselines for ocropus","Use old baseline algorithm","Use old xheight algorithm","Debug old baseline generation","X fraction for new partition","Merge suspect partitions","Use para default mechanism","Split stepped splines","Fraction of linespace for good overlap","Force parallel baselines","Use correct answer for fixed/prop","Max range test on pitch","Fraction of xheight for sameness","Scale scores on big words","Ding rate for mid-cuts","Use original wiseowl xheight","Chop underlines &amp; put back","Display unsorted blobs","Display unsorted blobs","Display rows after expanding","Display blob bounds after pre-ass","Display rows after final fitting","Draw fixed pitch cell boundaries","Display forced fixed pitch words","Display row accumulation","Display separate words","Display separate words","Draw page-level cuts","Display page correlated rows","Draw row-level cuts","Show table regions","Script has no xheight, so use a single mode","Ile of gradients for page skew","Lag for skew on row accumulation","For smooth factor","For smooth factor","If true, word delimiter spaces are assumed to have …","Min ratio space/nonspace","Min ratio space/nonspace","Size of window for spline segmentation","Min blobs in each spline segment","Fraction of line spacing for outlier","Fraction of line spacing for quad","Force straight baselines","Fraction of height used as a minimum gap for aligned blobs.","run table detection","Force using vertical text page mode","Only run stroke widths","Show final block bounds","Show column bounds","Show tab vectors","Show image blobs","Show partition bounds","Show tab candidates","Show partition bounds, waiting if &gt;1","Show blobs rejected as noise","Show stroke widths","Debug line finding","Enable vertical detection","Fraction of textlines deemed vertical to use vertical page …","Enables the table recognizer for table layout and filtering…","Debug table marking steps in detail","Show page stats used in table finding","Fraction of box matches required to declare a line vertical","max fraction of mean blob width allowed for vertical gaps …","Tests refer to land/port","Do current test","coord of test pt","coord of test pt","Bottom edge of debug rectangle","Left edge of debug reporting rectangle","Right edge of debug rectangle","Top edge of debug reporting rectangle","Fraction of x to ignore","Fraction of width occupied","Multiple of line_size for underline","Use CJK fixed pitch model","Max width of blobs to make rows","Smoothing width stats","Threshold for definite fixed","Threshold for definite prop","Max believable third space","Fraction of xheight","Fraction of xheight","Non-fuzzy spacing region","Max initial cluster size","Min initial cluster spacing","Multiple of xheight","Fraction of xheight","Fraction of valid gaps needed","Pitch sync threshold","Rows required to outvote a veto","Ile of blob widths for space est","Smoothing gap stats","Accepted variation","Min pile height to make xheight","Pass ANY flip to context?","Only stat OBVIOUS spaces","Debug data","Limit use of xht gap with odd small kns","Fract of kerns reqd for isolated row stats","or should we use mean","No.gaps reqd with 1 large gap to treat as a table","Don’t autoflip kn to sp when large separation","Default flip","Default flip","Force word breaks on punct to break long lines in non…","New fuzzy kn alg","Don’t restrict kn-&gt;sp fuzzy limit to tables","New fuzzy sp alg","Fract of xheight for fuzz sp","Fract of xheight for fuzz sp","Fract of xheight for fuzz sp","gap ratio to flip sp-&gt;kern","xht multiplier","xht multiplier","Enable improvement heuristic","Thresh guess - mult kn by this","Thresh guess - mult xht by this","gap ratio to flip kern-&gt;sp","gap ratio to flip kern-&gt;sp","gap ratio to flip kern-&gt;sp","Limit use of xht gap with large kns","Multiplier on kn to limit thresh","Don’t trust spaces less than this time kn","narrow if w/h less than this","Only stat OBVIOUS spaces","Fract of xheight for narrow","Don’t reduce box if the top left is non blank","Factor for defining space threshold in terms of space and …","Fix suspected bug in old code","Constrain relative values of inter and intra-word gaps for …","Space stats use prechopping?","Better guess","Block stats to use fixed pitch rows?","Only use within xht gap for wd breaks","How wide fuzzies need context","Use row alone when inadequate cert spaces","No.samples reqd to reestimate for row","rep gap multiplier for space","Only stat OBVIOUS spaces","Only stat OBVIOUS spaces","Don’t chng kn to space next to punct","How to avoid being silly","No.gaps reqd with few cert spaces to use certs","Don’t let sp minus kn get too small","Use within xht gap for wd breaks","Fuzzy if less than this","Min difference of kn &amp; sp in table","Expect spaces bigger than this","how far between kern and space?","how far between kern and space?","Space stats use prechopping?","Use within xht gap for wd breaks","wide if w/h less than this","Fract of xheight for wide","Mark v.bad words for tilde crunch","Output char for unidentified blobs","Use ambigs for deciding whether to adapt to a character","Use only the first UTF8 step of the given string when …","Specify DPI for input image","A filename of user-provided patterns.","A suffix of user-provided patterns located in tessdata.","A filename of user-provided words.","A suffix of user-provided words located in tessdata.","Enum representing different variable options accepted by …","Word for which stopper debug information should be printed …","Blob pause","Print blamer debug messages","Debug level for wordrec","Display Blobs","Display Segmentations","Display splits","Associator Enable","Max number of broken pieces to associate","Try to set the blame for errors","Only run OCR for words that had truth recorded in …","Allowed size variance","Fraction of xheight","Fraction of xheight","Max initial cluster size","Min initial cluster spacing","Max allowed deviation of blob top outside of font data","Min change in xht before actually trying it","Score penalty (0.1 = 10%) added if an xheight is …","Score penalty (0.1 = 10%) added if there are subscripts or …","Get the variable’s name as used by Tesseract","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Extract text from image as XML-formatted string with Alto …","Get the given level kind of components (block, textline, …","Extract text from image as HTML with bounding box …","","Returns a box file for LSTM training from the internal …","","","Extract text from image as TSV-formatted string.","Extract text from current selected region of the image. By …","Extract text from image as a string formatted in the same …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Low level wrapper for Leptonica C API","","","","Override image resolution if not detected","Set image to use for OCR.","Set the source image from an in-memory file","Restrict OCR to a specific region of the image.","Restrict OCR to a specific region of the image using a …","Override image resolution. Can be used to suppress “…","Set the value of an internal Tesseract parameter.","Low level wrapper for Tesseracteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Read an image from a local file.","Like pix_read, but reads the image from memory instead of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the given level kind of components (block, textline, …","","Get the dimensions of the currently loaded image, or None …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Provide an image for Tesseract to recognize.","","","Override image resolution. Can be used to suppress “…","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],0,[1,1],[[]],[[1,1],3],[[],3],[[1,4],5],[[]],[[]],[[6,7],[[10,[8,9]]]],[[6,11,3],[[13,[12]]]],[[6,7],[[10,[8,9]]]],[6,13],[[6,7],[[10,[8,9]]]],[6,[[13,[12]]]],[6,14],[[6,7],[[10,[8,9]]]],[6,[[10,[8,9]]]],[[6,7],[[10,[8,9]]]],[[]],[[]],0,[6,14],[[[13,[15]],15],[[10,[6,16]]]],[6,14],[[6,14]],[[6,[18,[17]]],[[10,[19]]]],[[6,[21,[20]]],[[10,[19]]]],[[6,14,14,14,14]],[[6,22]],[[6,14]],[[6,1,15],[[10,[23]]]],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,26],0,[[27,28,25],14],[27,14],[27,29],[27],[27],[[],27],[27],[27],[[27,14],25],[27,25],[[27,25,14],14],[[27,14],25],[[27,28,14,30,14],31],[[27,28,14,14,14,30,14,14],31],[[27,30],31],[27,25],[[27,25,32],14],[[27,14],25],[27,25],[27,33],[27,25],[[27,25,14],14],[27,34],[[27,14],25],[27,25],[27,35],[[27,36],37],[27,28],[[27,30],31],[27,14],[[27,25],25],[[27,30,14],31],[[27,14,38],14],[[27,30,14],31],[[27,14,14,30,14,14],31],[27,33],[27,14],[[27,14],25],[27,25],[27,25],[[27,14],25],[[27,14],25],[[27,30],31],[[27,25,25,28,25,14],14],[[27,25,25,28],14],[[27,25,25],14],[[27,25,25,28,25,14,25,25,37,14],14],[27],[[27,25,25],14],[[27,25],14],[27,14],[[27,39]],[[27,25],14],[[27,33,14,25,25,14,26],14],[[27,25,25,14,26],14],[[27,25]],[[27,25]],[[27,40],14],[[27,40],14],[[27,20,14,14,14,14,14,14],25],[[27,25,25],14],[[27,20,14,14,14,14]],[[27,33]],[[27,33]],[[27,25]],[[27,32]],[[27,25]],[[27,28]],[[27,14,14,14,14]],[[27,14]],[[27,25,25],14],[25,26],0,0,[41,38],[41],[41,25],[41,14],[14],[26],[25],[25],[25,26],[[25,14],26],[25,26],[[],40],[40],[40,36],[40,14],[[40,13]],[[40,36]],[[40,14]],[[40,13]],0,0,0,0,0,0,0,0,0,0,0,[[25,25,14],26],0,[[29,28,14,14,14,14],14],[29],[29,28],[[29,28,14,14,14,14],14],[29,29],[29],[[29,28],33],[[29,28,14,33,14,14],33],[[29,28],14],[[29,28,28],14],0,0,0,0,0,0,[[29,28],14],[[29,28,28,28,38]],[[29,28,14,14,14]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[34,28],38],[34,34],[34],[34,41],[34,29],[34,29],[[34,28],25],[[34,28],14],[34,14],[34,14],[34,14],[[34,14,14,14,14,14,14,14,14],25],[34,14],[34,14],[34,25],0,[[26,27],14],[[26,25],14],[26,14],[26,25],[26,14],[[26,26]],[26,26],[26,25],[25,26],0,0,0,0,[25,26],[25,26],[[],25],[25,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],37],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,37,14,39],43],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,14],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[39,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,43],[[],42],[14,14],[[44,14,14,14,14,45],14],[[33,14,14,14,14],14],[[38,38],14],[[38,14,14,38,38],14],[[38,14,14,14,14],14],[[46,46],36],0,[46,36],0,[[47,28],14],[[25,25],25],[[38,38,38,38,38,38],14],[[38,38,38,38],14],[[38,38,38,38,38],14],[[38,38,38,38,38,38,38],14],0,0,0,0,0,0,0,0,0,[[20,37,20,37],48],[[20,37,20,37,14,14],14],[[20,37,20,37,20,37,37,14],20],0,[13,14],[13,14],[25,32],[25,14],[25,43],[25,43],0,0,[[25,14,14],25],[14,14],0,0,0,0,0,[[20,14],49],[49],[[49,37],20],[[49,14],14],[[49,20,14],14],[[49,39,14],14],[[49,20,37,37],14],[[49,39,37,37],14],0,[[38,14,14,38,38],14],[[38,14,14,14,14],14],0,0,0,0,[[25,14],50],[50],[[50,25,14],14],[[50,25,14,14,14],51],[[50,25],33],[[50,25,14],14],[[50,25,14],14],[[50,25,51],45],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,52,14,14,14,14],52],[[52,52],52],[[52,14],14],[[52,14,14],52],[[52,14,14,14,14,14,14,14,14],14],[52,52],[[52,52,14,14],14],[[52,52,14],14],[[52,38,38,14],14],[[52,14],53],[52,52],[[14,14,14,14],52],[[14,14,14,14],52],[52],[[52,52,14],14],[[52,38,38],14],[[52,14,14,14,14],14],[52,14],[[52,14,14,14,14],14],[[52,14,14,38,14,14,14,14,14],14],[[52,52,14],14],[[52,14],14],[[52,52,14],14],[[52,52,14,14],14],[[52,52,38],14],[[52,52],52],[[39,52],14],[[52,52,14,14],52],[[52,14,14,14],52],[[52,52,14,14],14],[[52,14,14,14,14],14],[[52,14,14,14],14],[[52,14,14,14,14],14],[[52,52,14,14,14,14,14],14],[[52,14,14,38,38],52],[[52,14,14,38,38,14,14,38,14],52],0,0,0,0,0,0,0,[[31,52,14],14],[[31,14,14,14,14,14],14],[[31,31,14,14,14],31],[[31,14,14,14,14],31],[[31,31,14,14,14],31],[[31,38],31],[[31,14,14,45],31],[31,14],[[31,52],31],[[31,30],31],[[31,31,31,31,30],14],[[31,31,14,14,38,38,33],14],[[31,52],31],[[31,52,14],14],[[31,31,14],14],[[31,14],53],[[31,14],31],[14,31],[31],[[31,30,14,14,14,14,38,14,14,14],33],[[31,14,14],54],[[31,31,14,45,14],14],[31,14],[[31,37],14],[[31,45,45,45,45,45,45,14],14],[[31,53,53,53,53,53,53,14],14],[[31,14],53],[[31,45],55],[[31,14,14],31],[31,45],[[31,14,14,55,55],14],[[31,14],14],[[31,38,38],14],[[31,14,14],52],[[31,14,14,14,14,14],14],[31,14],[[31,14,14,14,38],14],[[31,14,14,52],14],[[31,14,14,14,14,14,14],14],[[31,14,14,14,14,14,14],14],[[31,14,14],52],[[31,14,14],52],[[31,38,14,14,14,14,14,14],14],[[31,45,45],14],[[31,14,14],52],[31,14],[[31,52,14,14,38,14,38,14],31],[[31,14,14,38,38,45],31],[[31,52],14],[[31,14,52],14],[[31,52],31],[[31,52,14],14],[[31,14],14],[[31,31,14,14],14],[[31,14,14,14,14],14],[[31,14,14],45],[[31,14,14,14,14],45],[[31,38,14],45],[[31,14,14,14,14,14,14,45,45],14],[[31,31,14],31],[[31,31,14,14,14],31],[31,31],[[31,31],31],[[31,25,45,45,45,45,33],14],[[31,25,45,45,33],14],[[31,38],31],[25,31],[[20,37],31],[39,31],[[31,14,14,14,14,30],31],[[31,14,14,38,45],31],[[31,14,14,14,30],31],[[31,14,38,38,38,45,45,38],31],[[31,14],14],[[31,14,52],14],[[31,14,52],14],[[31,38,38,38],31],[[31,14,14,14],31],[[31,14],31],[[31,38,38],31],[[31,14,14,14],31],[[31,14,14,14,14,14],31],[[31,38,14,14],31],[[31,38,14],52],[[31,14,14,14],31],[[31,45,14],31],[[31,31,14,14,14],31],[[31,53,14],31],[[31,31,14,14,14,14,14,14,45],14],[[31,14,38,38,38,38,14],14],[[31,14,14,14,14],14],[[31,14,38,38,38,38],14],[[31,14,14,14,14,14],31],[[31,14,14,45],31],[[31,55,14,14,14],54],[[31,55],54],[[31,45],31],[[31,14,31,31],14],[[31,14,14],14],[[31,14,14,38,38],31],[[31,14,14,38,38,14,14,38,14],31],[[31,38,38],31],[[31,14,14],31],[[25,31],14],[[25,31],14],[[20,37,31],14],[31,14],[[39,31],14],[[54,14,52,14],14],[[54,31,14],14],[[54,52,14,14],14],[[54,14],54],[14,54],[54],[[33,54,14,14,28,28,14,14],33],[54,14],[[54,14],14],[[54,14,31],14],[[54,14,52,14],31],[[54,45,14],31],[[54,14,14,14],52],[54,14],[[54,14,14],31],[54,14],[[54,14,14,52,31],14],[[54,31],14],[[54,14,31],14],[[54,54,14,14],14],[[14,14,14],54],[25,54],[[25,25,14,14],54],[[20,37],54],[39,54],[[54,14],14],[[54,14,31],14],[[54,14,14,14],54],[[54,14,14,14,14],14],[54,54],[[25,54],14],[[20,37,54],14],[[39,54],14],0,0,[[36,36,37,37,13],36],0,[25],[[46,46],36],0,[33,56],[56],[[57,56],14],[[33,14],57],[57],[57,33],[57,33],[57,33],[57,33],[57,14],[[57,14],14],[57,14],[57,14],[[57,14],56],[57,14],[25,57],[39,57],[[57,14],14],[[25,57],14],[[25,57],14],[57,25],[[39,57],14],0,[14],0,0,0,[[58,25,20,37],14],0,[[],14],[39],[39],0,0,[26,26],[27,27],[29,29],[34,34],[35,35],[41,41],[40,40],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[39,39],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[45,45],[55,55],[48,48],[94,94],[95,95],[51,51],[96,96],[49,49],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[47,47],[105,105],[106,106],[50,50],[56,56],[57,57],[107,107],[108,108],[109,109],[110,110],[58,58],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[33,33],[44,44],[117,117],[30,30],[118,118],[52,52],[31,31],[54,54],[53,53],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44,14,14],14],0,0,0,0,0,0,0,[[55,55,38,14,14,14,14,38,30],14],0,[[14,14,14,14,28],14],[[14,14,14,28],14],0,[[25,25,25],14],[[25,25,20,37],14],[[25,25,38,38,25],14],[[25,25,14,14,14,14,25,14],14],[[25,25,14,25],14],[[25,25,14,38,14,14,25,25],14],[[25,25,25,14,14,14,38,14,14],14],[[25,25],14],[[25,25,25,14,14,14,38,14,14,14],14],[[25,25],14],[28,28],[[14,14,14,14,14,14],14],[[20,37,14,14,25,14,14,14,25,111,14],14],[[20,37,14,14,20,37,14,14,14,25,111,14],14],[28,28],[[25,25,25,14,14,14,38,14,14],14],[[25,25],14],[[38,38,38,14,14,14],14],[[38,38,38,38,38,38],14],[[25,25,14,14],54],[136,136],[28,28],[136,136],[28,28],[53,53],[[14,14,14,14,14,14],14],[[14,14,14,38,38,38],14],[[14,14,14,38,38,38],14],[[14,14,14,14,14,14],14],[[25,25,14,14,14,54,14,38,25,25],14],[[25,25,14,25,25,14,14,14,38,38,14,25],14],[[25,14],14],[[51,14,14,14],51],[[25,25,38],14],[[25,25],14],[[25,25,14,14,14,14,14,14,25],14],[[25,25,14,14,14,14,14,14],30],[[25,25,14],14],[[25,14,14,25,14,14,14,25,111,14],14],[[25,14,14,20,37,14,14,14,25,111,14],14],[[25,14,14,14,31,14,38,25,20,37],14],[[25,14,14,14,31,14,38,25,25],14],[[25,25,25,25],14],[[25,25,20,37],14],[[38,38,38,38,38,38],14],[[38,38,38,14,14,14,14],14],[[14,14,14,14,14,14],14],0,0,[[14,14],38],[[14,14],14],[[38,38,38],38],[[38,38],38],[[38,38],38],[25,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,37,37],20],[[25,37,37],20],[[25,14,14],20],0,0,0,0,0,0,0,0,[[109,14,25],14],[[109,25],14],[[33,14],109],[[14,14],109],[[109,25,14],14],[109],[[109,119],14],[[109,33,38,14],14],[[109,119,14],14],[[33,14],119],[109,14],[[109,33,14,14],14],[25,109],[[20,37],109],[39,109],[[33,119,38,14],119],[[108,51,31,14,14,25],14],[[33,14,14,14,14,33,108,14],14],[[33,14,14,14,14,33,108],14],[[33,33,108,33,14],14],[[25,109],14],[[20,37,109],14],[[39,109],14],[[108,14,33,14,14,14,33,25],14],[[108,14,33,31,14,14,14,31,25],14],[[14,14,14,14,14],108],[[126,14,14,14,14],108],[108],[[108,14],14],[[108,14],109],[[39,108],14],[[108,109],14],[[108,14,14],14],[108,14],[[108,14,14,14,14,14,14],14],[[108,14,14,14],14],[25,108],[[20,37],108],[39,108],[108,14],[[108,14],14],[[108,14,14,14,14,14,14],14],[[108,14],14],[[108,14,14],14],[[108,38,14,14],14],[108,14],[[108,14],14],[[25,108],14],[[20,37,108],14],[[39,108],14],0,0,0,0,0,[[14,14,14,14,14,14,14],33],[[28,14,28,28,14,14,14]],[[14,14],67],0,0,0,0,0,[[124,32,32],14],[[124,14],14],[124,124],[124,122],[[124,14,14,14],33],[124,124],[[124,124],14],[[14,14],124],[124,124],[124],[[124,124],124],[124,32],[[124,14,14],14],[[124,32,14,14],14],[[124,32,14,14],14],[[124,14,14,32],14],[124,14],[[124,14,14],14],[124,14],[[124,124,124,38,38],124],[25,124],[[20,37],124],[39,124],[[124,14],124],[[124,32],14],[[124,32],14],[[124,14,14],14],[[124,14,14,32],14],[[124,14,14],14],[[124,14],14],[[25,124],14],[[20,37,124],14],[[39,124],14],[[14,25],14],[[],32],0,[[92,32],14],[[32,14,14,14],25],[[32,14,14,14,25,37],14],[[20,37,37],25],[[20,37,37],25],[[20,14,14],25],0,[136,32],[[136,92,32],14],[14,42],[[25,20,37,14,14,14],14],[[28,14],14],[[25,14,14],14],[[28,14,14,14,14]],[[28,14,14,14]],0,[39,14],[[32,14,14,14],25],[[32,14,14,14,25,37],14],0,0,[[14,25],39],[39,14],[39,14],[39,14],[39,14],[39,14],[39,14],[[39,14,14],14],[[39,20],14],[[39,14,14],14],[[39,44,14],14],[[39,14,14],14],[39,14],[39,14],[[39,62],14],[[25,14,39],25],[[115,14,25],14],[[115,14,25],14],[[115,14,25],14],[[28,14,14,14,28,14,14],14],[[25,25],14],[[25,25],14],[[25,25],14],[[25,38,38,25],14],[[25,38,38,25],14],[39,14],[[25,14,14,20,37,25],14],[[25,14,14,25,25],14],[39,14],0,[39,14],[[25,25,14],14],[[25,14],14],[[20,14],14],[[39,14],14],[[14,28],14],[[39,14],14],0,[39],[[36,37,25],39],[[115,14,25],14],[[115,14,25],14],[[115,14,25],14],[[28,14,14,14,28,14,14],14],[[28,14,14,14,28,14,14],14],[[26,4],[[10,[137]]]],[[27,4],[[10,[137]]]],[[29,4],[[10,[137]]]],[[34,4],[[10,[137]]]],[[35,4],[[10,[137]]]],[[41,4],[[10,[137]]]],[[40,4],[[10,[137]]]],[[59,4],[[10,[137]]]],[[64,4],[[10,[137]]]],[[65,4],[[10,[137]]]],[[66,4],[[10,[137]]]],[[39,4],[[10,[137]]]],[[67,4],[[10,[137]]]],[[68,4],[[10,[137]]]],[[69,4],[[10,[137]]]],[[70,4],[[10,[137]]]],[[71,4],[[10,[137]]]],[[72,4],[[10,[137]]]],[[73,4],[[10,[137]]]],[[75,4],[[10,[137]]]],[[76,4],[[10,[137]]]],[[77,4],[[10,[137]]]],[[78,4],[[10,[137]]]],[[79,4],[[10,[137]]]],[[81,4],[[10,[137]]]],[[91,4],[[10,[137]]]],[[92,4],[[10,[137]]]],[[93,4],[[10,[137]]]],[[45,4],[[10,[137]]]],[[55,4],[[10,[137]]]],[[48,4],[[10,[137]]]],[[94,4],[[10,[137]]]],[[95,4],[[10,[137]]]],[[51,4],[[10,[137]]]],[[96,4],[[10,[137]]]],[[49,4],[[10,[137]]]],[[97,4],[[10,[137]]]],[[98,4],[[10,[137]]]],[[99,4],[[10,[137]]]],[[100,4],[[10,[137]]]],[[101,4],[[10,[137]]]],[[102,4],[[10,[137]]]],[[103,4],[[10,[137]]]],[[47,4],[[10,[137]]]],[[106,4],[[10,[137]]]],[[50,4],[[10,[137]]]],[[56,4],[[10,[137]]]],[[57,4],[[10,[137]]]],[[107,4],[[10,[137]]]],[[108,4],[[10,[137]]]],[[109,4],[[10,[137]]]],[[110,4],[[10,[137]]]],[[58,4],[[10,[137]]]],[[111,4],[[10,[137]]]],[[112,4],[[10,[137]]]],[[113,4],[[10,[137]]]],[[114,4],[[10,[137]]]],[[115,4],[[10,[137]]]],[[116,4],[[10,[137]]]],[[33,4],[[10,[137]]]],[[44,4],[[10,[137]]]],[[117,4],[[10,[137]]]],[[30,4],[[10,[137]]]],[[118,4],[[10,[137]]]],[[52,4],[[10,[137]]]],[[31,4],[[10,[137]]]],[[54,4],[[10,[137]]]],[[53,4],[[10,[137]]]],[[119,4],[[10,[137]]]],[[120,4],[[10,[137]]]],[[121,4],[[10,[137]]]],[[122,4],[[10,[137]]]],[[123,4],[[10,[137]]]],[[124,4],[[10,[137]]]],[[125,4],[[10,[137]]]],[[126,4],[[10,[137]]]],[[127,4],[[10,[137]]]],[[128,4],[[10,[137]]]],[[129,4],[[10,[137]]]],[[130,4],[[10,[137]]]],[[131,4],[[10,[137]]]],[[132,4],[[10,[137]]]],[[133,4],[[10,[137]]]],[[134,4],[[10,[137]]]],[[135,4],[[10,[137]]]],[39,37],0,[[25,25],39],[[20,37],39],[25,39],[[25,25],39],[[],39],0,0,0,[[122,14,14,14,14],122],[[122,14,14,14,14],122],[[122,14,14,14,14],122],[[122,38,38],14],[[122,14,14,14,14],122],[[122,38,38],122],[[122,53,53,14,38],122],[[122,14],33],[[122,14],14],[122,122],[122,124],[[122,14,14,14],33],[[122,116,14],122],[[122,116,116,14],122],[122,122],[[122,122],14],[[14,14],122],[122,122],[122],[122,33],[[122,122],122],[[122,122],122],[[122,122],122],[122,38],[[122,14,14],14],[[122,38,14,14],14],[[122,38,14,14],14],[[122,14,14,38],14],[122,14],[[122,14,14],14],[122,14],[[122,122,122,38,38],122],[[39,122,14],14],[[122,38,38],122],[[122,53,53,14,38],122],[[122,14,14,14,14,122,14,14],14],[25,122],[[20,37],122],[39,122],[[122,14,14,14,14],122],[[122,38,38],33],[[122,122],122],[[122,14],122],[[122,14],122],[[122,14],122],[[122,38],14],[[122,38],14],[[122,14,14],14],[[122,14,14,38],14],[[122,14,14],14],[[122,14],14],[[122,38],33],[[25,122],14],[[20,37,122],14],[[39,122],14],[[123,122,14],14],[[123,14],14],[123,33],[123,123],[123,123],[123,33],[[123,14],123],[14,123],[123],[[123,14,14],33],[123,14],[[123,14],38],[[123,14,14],122],[[123,14,14,14],14],[[123,14,14,14,38],14],[[123,14,14,14,38],14],0,[[39,25],14],[[39,25],14],0,[[14,39],14],[[14,39],14],[[25,39],14],[[36,46,46,39],46],[[39,14,14,14,14,14],14],[[39,14,14,14,14,14],14],[[39,14,14,14,14,14],14],[[39,14,14,14,14,14,14],14],[[39,14,14,14,14,14],14],[[39,14,14,14,14,14,14,14,14],14],[[36,37,37,39],37],[36],[[25,25,39],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[39,25],14],[[39,25],14],[[39,43,14],14],[[39,43,14],14],[[39,62],14],0,0,[39,43],[39,43],[39,14],0,0,0,0,0,0,[39],[[36,46,46,39],46],[[36,37,37,39],37],0,[[],38],[[38,38,14],14],[[32,14,25],25],[[14,14,14,14],45],[[25,25],25],[[14,14,14,14],14],[[14,14,14,14,38,38],33],[[52,14],53],[[31,14,14],53],[14,53],[14,53],[[14,14,14,14,14],53],[[52,14,14,14,14],53],[[31,14,14,14,14,14],53],[[14,14,14,14],53],[[14,14,32,32],53],[[53,14,14,14],53],[[14,14,14,14,14],53],[31,119],[[31,14,14,14,14],119],[[25,14,14,14,14,14,38,38,38,38,14],25],[[53,53,38],14],[[53,53,38],14],[[14,14,14,25,25,25,25],14],[[33,53,52,14,14],53],[[14,14,14,14],14],[25,51],[14,25],[[],25],[25,14],[[],25],[[14,38],38],[[14,14],28],[[25,25,14,14,14],51],[[14,14,14,28,28,28,28]],[[53,53,38],14],[[28,14,14,14,14],14],[[14,14,38],14],[[14,14,38],14],[[25,25,14,14],51],[[39,14,14],14],[39,14],[39,14],[[],14],[[],14],[[25,37,14,39],43],[25,25],[[25,37,39],43],[[32,14],14],[[25,25,25],14],[39,14],0,0,0,[[110,45,45,14,25],14],[[25,14,25,25,25],110],[110],[110,14],[110,14],[[45,14,25,25,25,25],33],[[45,45,14,25,25,25,25],33],[[45,55,14,25,25,25,25],33],[110,14],[110,33],[25,110],[[110,14],14],[[45,14,25,25],14],[[45,45,14,25,25],14],[[55,14,25,25],14],[[45,25],33],[[45,45,25],33],[[55,25],33],[[45,45,14,14,25,25],110],[[45,45,45,14,14,25,25],110],[[45,55,14,14,25,25],110],[[25,110],14],0,0,[[55,55,45],14],[[55,14,45,45,45,45],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[28,25,37],25],[[28,25,37,91],14],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,14],[[25,14],14],0,[[118,45,53],30],[[112,33],14],[[112,33,31,30],14],[[112,51],14],[[14,14],112],[112],[[112,31,30],14],[[112,31,30],14],[[25,38,38,14,25,14,14,14],14],[[14,14,14,38,38],112],[[14,14,14,38,38],112],[113],[25,113],[[113,14],30],[112,113],[[25,113],14],[[33,14,14,14,31,30],14],[112,14],[[112,33,31],14],[[25,14,38,14,25,14,14,14],14],[[14,14,14,14,38],112],[[30,45],30],[[25,14,14,14,38,38,45,14,14],112],[136,43],[[136,92,43],14],0,0,0,0,0,[116,116],[[14,14],116],[25,116],[[33,14,14],116],[[14,14,14,14,25],116],[116],[[116,14,14],33],[[116,14,14,38],14],[[116,38,38],14],[[116,14,14,14,14],14],[[116,38],14],[116,116],[[116,38],116],[25,116],[39,116],[[116,14,14,38],14],[[116,14,14],14],[[25,116],14],[[39,116],14],0,0,0,0,0,[43,25],[58],[14,47],[[47,104]],[47],[[47,104],104],[47,105],[47,105],[105,105],[105,105],[[47,104,104]],[47,14],[[38,38,38,38],38],[14,47],[48,47],[53,47],[51,47],[[47,104]],[47],[[47,104],104],[47,105],[47,105],[105,105],[105,105],[[47,104]],[47,14],[[20,37,20,37,14],14],[[20,37],20],[[25,37],20],[[25,37,37,37],20],[[39,37,37,37],20],[[39,37],20],[[25,25,36,37],14],[[],30],[[],30],[[],30],[14,30],[[96,20,37],14],[[96,25],14],[[96,14],96],[[96,37],20],[37,96],[96],[[96,20,37,48],14],[[96,37],20],[96,37],[25,96],[[20,37],96],[39,96],[[96,96],14],[[96,37,96],14],[[25,96,37,37],14],[[39,96,37,37],14],[14],[[36,14]],[[36,14]],[[36,14]],[[33,14,14],107],[107],[[55,14,14,37],20],[[25,14],14],[[48,32],14],[[48,14],14],[48,48],[48,45],[48,48],[[48,48],14],[14,48],[[32,14,14],48],[[14,14],48],[48],[48,48],[48,14],[48,14],[[48,14],32],[[48,14,32],14],[48,14],[[48,14,14],14],[[48,32,32],14],[48,14],[[95,46,32],14],[[14,14],95],[95],[[95,46,14],48],[[48,14,32],14],[[48,48,48],14],[[48,48,48],14],[[48,48,14,14],14],[[48,48,48],14],[[32,32,14],48],[25,48],[[20,37],48],[39,48],[[48,48],14],[[48,48,97],14],[[48,14],14],[[48,14,32],14],[[48,14,14],48],[[48,14],14],[[48,32,32],14],[[48,14,32],14],[[48,14,32],14],[[48,48,48],14],[[48,48,48],14],[[25,48],14],[[20,37,48],14],[48,14],[[39,48],14],[[94,48,14],14],[[94,14,32],14],[14,94],[[14,14],94],[94],[94,48],[94,14],[[94,14,14],48],[[94,14],14],[94,14],[[94,14,14,32],14],[25,94],[[20,37],94],[39,94],[[94,14,48],14],[94,14],[[25,94],14],[[20,37,94],14],[[39,94],14],[[25,14,14,38],14],0,0,[[25,14,14,14,58],14],[[25,33,14,58],14],[[25,14],58],[[25,33],58],[[25,14],58],[[25,14],58],[[20,37,14],58],[[14,14]],[[36,14],14],[[36,14],14],[[36,14],14],[[36,14],14],[[36,14],14],[[36,14],14],[[],25],[[25,14,25],14],[[32,46],14],[[14,14,46],14],[[25,46],14],[[25,46],14],[[14,14],97],[48,97],[53,97],[51,97],[97],[[97,46,46,14],98],[97,14],0,0,0,0,0,[14,14],[[],25],0,[14],[14],[14],[[38,38,38,14],14],[[38,38,38,38,14],14],[[38,38,38,38,38,14],14],[[38,38,38,14],14],[14],[14,47],[[47,104]],[47],[47,14],[47,105],[47,105],[105,105],[105,105],[[47,104,104]],[[47,104],104],[[39,47]],[[38,38]],[[14,14]],[[36,14]],[[36,14,14]],[[36,14,14]],[[36,14,14]],[[36,14,14]],[[36,14,14]],[[36,14,14]],[14],0,0,0,0,0,[[20,37,14,14],55],[43,43],0,0,[136],[[136,92],14],[[43,43],68],0,0,0,0,[13],[[37,37],36],[[25,25,25,25],14],[[25,14]],[39,14],[[25,25],39],[36],[[46,14,28],14],[25,14],[[25,25,25,25],14],[[25,25],14],[[25,25],14],[25,14],[25,14],[38,14],[25],[[99,36],14],[[14,14],99],[[99,14]],[99,14],[[99,14],36],[[39,99],14],[99,36],[99,14],[99,14],[[28,28,14],14],[[28,14,14,14,38,38,28,28],14],[[38,14,14,38,38,38,38],14],[[28,14,14,14,38,38,14,14],14],[[28,38],28],0,0,0,0,0,0,0,[[100,36],14],[[100,100,36],14],[100],[[100,36],100],[100,100],[100,14],[[100,100,36],14],[[100,100,36],14],[[100,100],14],[[100,100],36],[100,36],[[100,100],36],[100,14],[43,43],[[43,43],69],0,0,[[14,14,32,32,32,32],14],0,0,[[28,38,38],28],[[103,36],14],[14,103],[[103,14]],[103,14],[[39,103],14],[103,36],[[],43],[[92,43],14],[[106,36],14],[14,106],[[106,14]],[106,14],[[39,106],14],[106,36],0,[[14,14,14,14],30],[[14,14,38,38],116],[[14,14,14,14],116],[[14,14,38,38],116],[[14,14,38,38,116,116],14],[14,14],[[45,14,14,44],14],[[],38],[14,14],[[14,14,14,14],31],[[38,38,38,38,14,14],14],[[],14],[[],14],[[45,14,14,14,14],53],[[45,14,14,14,14,14],53],[[28,28,28,14],14],[[14,28,28,28],14],[38,116],[[],20],[[25,37,25],14],[46,36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,37],14],[[14,25,37],37],[[14,25,37],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,25],[25,14],[[25,14],14],[25,25],0,0,0,[[25,37,14],14],[51,14],[[],43],[[92,43],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,37],0,0,0,0,0,0,0,0,[[33,14,14,14,14],14],0,0,0,0,0,0,0,0,0,[136,43],[[136,92,43],14],0,0,0,0,0,[[45,14,14,38],45],[[45,38],14],[[45,38],14],[[45,14,14,14],45],[[45,14,38],14],[[45,45,45,14],45],[[45,14],45],[[45,14],14],[45,14],[[45,14,14],45],[45,45],[[45,14],45],[38,45],[45,48],[45,45],[45,53],[[45,45],53],[[45,14,14,14,14],51],[45,45],[[45,45],14],[[45,14],14],[[45,38,14,38],14],[14,45],[[38,14,14],45],[[14,14],45],[25,45],[[45,45,38],45],[[45,45,38],45],[45],[[45,45,38,38,14,45,45],14],[[45,14],45],[[45,14,45,45],14],[[45,14,45],14],[[45,45,38],14],[45,14],[[33,38,14],45],[[45,14],45],[[45,38,14,14,38,38,38,38,38],14],[[45,38,38,38,38],14],[[45,38,45],45],[[45,14,14,38],14],[[45,14,38,38],45],[[45,38,14],14],[[45,38,45,38],14],[[38,14,14],45],[[45,14],45],[[45,14],14],[45,14],[[45,14,14],14],[[45,14,14,14,14],14],[[45,14],38],[[45,14,38],14],[[45,38,38,38,38,38,38],14],[[45,38,38,14,14,38,38,38,38],14],[45,14],[[45,14,14],14],[[45,38,14],14],[[45,38],14],[[45,38],14],[[45,38,38],14],[[45,38],14],[[45,38,38],14],[[45,38,14],14],[[45,38,14],14],[[45,38,14,14],14],[[45,38,38],14],[45,45],[[45,14,45],14],[[45,38,45,14,38],14],[45,14],[[45,14],45],[[45,14,14,14],14],[[45,14,38,38,38,38,38,38,38,45],14],[[45,38],14],[[45,14,14,38],14],[[14,14],45],[[45,14],14],[[45,38,38],14],[[45,38,38],14],[[45,14,38],14],[[45,45,38,38,14,38],14],[[45,45,14,38,38,14,45,45],14],[[45,45,14,38,38],14],[[38,38,45,14,38,38,14,45,45],14],[[38,38,45,14,38,38],14],[[45,45],45],[45,45],[[45,14,14],14],[[45,45,14,14],14],[[45,45,45,14],45],[[45,38,38],45],[[45,45],45],[[38,14],45],[45,45],[[45,14,14,14],45],[[45,14],45],[[45,38,38],45],[[38,38,45,14,45,45],14],[[38,38,14],45],[[45,38,14],45],[[45,38],45],[[45,14],45],[[14,14],45],[[45,38,45,45,14],45],[[45,38,38,38,45,14],45],[[45,14],45],[25,45],[[20,37],45],[39,45],[[45,14],45],[[45,14,14],45],[[45,14],14],[[45,14,38],14],[[45,45],45],[[45,45,38,38],14],[[45,14],14],[[45,38,38],14],[[45,14,38],14],[[45,14,38],14],[[45,45,38,14],14],[[45,14,14,38,38,38],14],[[45,45,14],45],[[45,14],45],[[45,45],45],[[45,45,45,45,14,14],14],[[45,14],45],[[45,45,14,45,45],14],[[45,38,14,38,38,38,38,45],14],[[45,14],45],[[45,38,38,38],45],[[45,38,38],45],[[45,14],45],[[45,14],45],[[45,14],45],[[45,14],45],[[45,14,45,45,45,45],14],[[45,45,45,45],14],[[25,45],14],[[25,45],14],[[20,37,45],14],[45,14],[[39,45],14],[[55,45,14],14],[[55,14,38],14],[[55,55,14,14,14,14,14,14,14,14],14],[14,55],[[14,14],55],[55],[55,45],[55,14],[[55,14,14],45],[[55,14],14],[55,14],[55,45],[[55,14,14,38,14],14],[[55,55,14,14],14],[25,55],[[20,37],55],[39,55],[[55,14,45],14],[55,14],[[25,55],14],[[20,37,55],14],[[39,55],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,36],14],[[25,37],39],0,0,0,0,0,[[25,25],25],[[25,25],45],[[25,25,14,25,25],14],[[126,14,25,30],14],[[25,25],25],[39,14],[25],0,0,0,0,0,0,0,[[33,52],45],[[33,52],45],[[33,52,14,38],14],[[33,14,14,14,14,38],14],[[33,33],33],[[33,33,14],14],[[33,33,38],33],[[33,33,38,14,14,14],33],[[33,33],33],[[33,38,14],33],[[33,14,14,14,14,14],33],[[33,14,28],33],[[33,14,14,14,14,28],33],[[33,14],14],[[33,14,14,14,14],33],[[33,38],33],[[33,33,33],33],[33,14],[33,33],[[33,14,14,14,14],33],[[33,14,14,14,14],33],[[33,33],33],[[33,14,14,14,14],33],[[33,50,25,28,14,14],33],[[33,25],14],[[33,50,25,28,14],33],[[33,30,45],14],[[33,38,14],33],[[33,38,28],33],[[33,38,20],33],[[33,53,53,14],33],[[33,53,53,28],33],[[33,53,53,20],33],[[33,53,53,33,38,14],33],[[33,38,14],33],[[33,53,53,14],33],[[33,53,53,14,14],33],[[33,28],33],[[33,14],14],[[33,33,33],33],[[33,33,14,14],33],[[33,33,33,33,14,14],33],[[33,33,14],33],[[33,33,33,14,14],14],[[33,14,33,30],33],[[33,52,14],45],[[33,52,14],45],[[33,33,52,14,14,14,38],14],[[33,33,52,14,28],14],[[33,38,14,14,14,14,14],45],[[33,14,14,14,14,14],38],[[33,33,33,14,14,14,14,14,14,14],33],[[33,14,14,14,14,14],33],[[33,33,14,14,14,14,14,14,14,33],14],[[33,33,14,14,14,33],14],[[33,33,14,14,14],33],[[33,33,33,14,14,14,14,14,14,14,33,33,33],14],[[33,33,14,14,14,33,33,33],14],[[33,33,33],33],[[33,33,14,14,14,14,14,14,14,14,38,14],14],[[33,38,38,14,14],33],[[33,116,116],33],[[33,38,38,14,14],33],[[33,116,116],33],[[33,38,14],33],[[33,38,28],33],[[33,38,20],33],[[33,53,53,14],33],[[33,53,53,28],33],[[33,53,53,20],33],[[33,53,53,33,38,14],33],[[33,38,14],33],[[33,53,53,14],33],[[33,33,14,14,38],33],[[33,33,52,28,38,14,14],33],[[33,31,38],33],[[33,33,14,14,14],14],[[33,33,33,14,14,38,14,28],33],[[33,33,33,14,14,38,38,38,14,28],33],[[33,33,33,14,14,38,14,14,28],33],[[33,33,33,14,14,38,14],33],[[33,33,33,14,14,38],33],[[33,33,33,14,14,38],33],[[33,52,28,38],14],[[33,33,33,14,14,38,14],33],[[33,33,33,14,14],33],[[33,38,38],33],[[33,14,14],33],[33,33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,14,14],33],[[33,14,14,14,14],33],[[33,33,14,14,38],33],[[33,33,14,14],33],[[33,14,33],33],[[33,14,14,38,38],14],[[33,14,38,38],14],[[33,14],14],[33,14],[[33,33,33,38,14,14],33],[[33,20],14],[33,14],[[33,52],14],[[33,14,14],14],[[33,52,14,14,14,14,33,52],14],[[33,52,33,52],14],[[33,33,14,14,28],33],[[33,52,52],33],[[33,52,14,52],33],[[33,31],30],[[33,33,52],14],[33,33],[[33,33,114],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,114],33],[[33,14,14],33],[[33,14,14],33],[[33,33,114],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,14,14,14,14,33,33,33],14],[[107,14,14,14,14,14,14,14,14],14],[[33,14,14,14,14,14],33],[[33,14,14,14,14,38,38],14],[[33,52,14,14,14,14,14],14],[[33,52,14,14,14,14],14],[[33,33,14,14,14,14,14],33],[[33,33,14,14,14,14],14],[[33,31,14,14,14,14,14],33],[[33,31,14,14,14,14],14],[[33,14,14,14,14],33],[[33,14,14,14],33],[[33,25,14,14],33],[[33,14,14,14,14,14],33],[[33,14,14],14],[[33,14,14,14],33],[[33,33,14],14],[[33,38,38,38],33],[[33,14,14,14],33],[[33,28,14],33],[[33,14,14,14,14],14],[[33,52,45,45,45,45,45,45],14],[[33,33,33],14],[[33,33,33,14,14],14],[[33,33,14,38,33],14],[[33,33,14,14,14,38,38,33],14],[[33,33,52,52,38,14,14,14,38,14],14],[[33,33,14,14,14,38,38,33],14],[[33,33,52,52,38,14,14,38,14],14],[[33,33,14,14,14,38,38,33],14],[[33,33,14],45],[[33,33,14,14,14,33],14],[[33,33,14,14,14,38,14],14],[[33,38,38,38,38,38,38],122],[[33,52,14,14],14],[[33,30,14],31],[[33,14],33],[[33,14],31],[[33,119,14,38,38,14],14],[[33,14,33,119,14],14],[[33,30,14],31],[[33,14,14],33],[[33,33,14,14,14,14,14],33],[[33,33,38],33],[[33,33,33,38],33],[[33,14],33],[[33,33,136,136],33],[[33,33,14,14],33],[33,33],[[33,33,28,28],33],[[33,33,14,14],33],[33,33],[[33,33,20,20],33],[33,33],[33,33],[[33,20,20,20,20,14],33],[[33,14],33],[33,33],[[33,14,14],33],[[33,14],33],[[33,14],33],[33,33],[33,33],[33,33],[33,33],[[33,38,38,14],33],[33,48],[33,33],[33,33],[[33,14],33],[[33,38],33],[[33,38,38,14],33],[[33,33],33],[[33,14],33],[[33,38,38,38,14,14],33],[33,33],[[33,14],33],[[33,38,38,38],33],[[33,38,38,38],33],[33,33],[[33,14,38,38,38],33],[[33,14],33],[[33,14],33],[[33,33],33],[33,33],[33,123],[33,33],[33,33],[33,33],[33,123],[[33,33],33],[[33,14],33],[33,33],[33,33],[[33,14,14],33],[33,33],[33,33],[[33,14],33],[33,33],[[33,14],33],[[33,14,14],33],[[33,14],33],[[33,14,14],33],[[33,14],124],[[33,14],122],[[33,14,14,25,14,14,14,25,111,14],14],[[33,14,14,20,37,14,14,14,25,111,14],14],[[33,14,14,14,31,14,38,25,20,37],14],[[33,14,14,14,31,14,38,25,25],14],[[33,38,38,14],33],[[33,33],33],[[33,116,14,14],33],[[33,116],33],[[33,116,116],33],[[33,116,116,14,14],33],[[33,116,116,14,14],33],[[33,33],33],[[33,33,14,14,14,14],33],[[33,33],14],[[33,33],14],[[33,33],14],[[33,33,14],14],[[33,33],14],[[33,33],14],[[33,33],14],[[33,31,14],33],[[33,33,38],14],[[33,33,14,14,38,38,14,14,14,38],14],[[33,33,14,14,14,14,14,38],14],[[33,33,14,14,38,38,14,14,14,38],14],[[33,33,14,14,38,38,14,14,14,14,38],14],[[33,52,14,14,14],14],[[33,52],45],[[33,52],45],[[33,14,14],14],[[33,14,14],14],[33,45],[[33,14],45],[[33,52,14,14],14],[[33,14,14,14],14],[[33,14,14],14],[[33,14],14],[[33,38,38,38,14,30],14],[[14,14,14],33],[125,33],[[14,14,14],33],[[14,14,14],33],[[33,33,33],33],[33,33],[33,33],[[14,14,14,14],33],[[33,33,14,52,52],14],[[33,33,33,33],14],[[33,14,14],33],[[33,33,14,14],33],[[33,14,38,14,55,30],14],[[33,52,14,14,30],14],[[33,52,14,30],14],[[28,37],33],[[33,14],33],[[33,33,52,14,14,38,38],33],[[33,14],33],[[33,14,38,38,14,14,38,38],33],[[33,14,14,14,38,38,38],33],[33],[33,14],[[33,33,114],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,14,14],33],[[33,14,14],33],[[33,14,14],14],[[28,14,14,14,14],33],[[33,33],33],[[33,114,14,28,28],33],[[33,28,14],33],[[33,33,33,14,14,28,38,14],33],[[33,33,53],33],[[33,33,53,33,14,14,28],33],[[33,119],33],[[33,33,119,33,14,14],33],[[33,33,114,28],33],[[33,14,14,25,14],14],[[33,14],14],[[33,14,14,14],33],[[33,14],33],[[33,14,14,14],33],[33,33],[[33,14,14],33],[[33,31,14,28],33],[[33,31,14],33],[[33,38,14,14,14],33],[33,14],[33,33],[33,14],[33,33],[[33,33,14],14],[[33,33,14,14],14],[[33,33,14],14],[[33,33,38,14],33],[[33,33,114],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,14,14],33],[[33,14,14],33],[[33,14,38,14],14],[[33,14],33],[[33,14,14],33],[[33,14],33],[[33,14,14],33],[[33,38,14],45],[[33,38,38,45,45,14],45],[[33,38,38,45,14],45],[[33,14],30],[[33,14],33],[[33,14],33],[33,28],[[33,14,14,14,14,14],45],[[33,14,14,14,14,30],30],[[33,14,14,14,14,14,14,30],30],[[33,33,25],33],[[33,33,14,25],33],[[33,33,14,25],33],[[33,33,38,14],33],[[33,14,14,14],33],[[33,14,14,14,14,14,14],33],[[33,14],33],[[33,14,45,14,14],33],[[33,14,14,14,14,38,14],33],[[33,14],33],[[33,14],33],[[33,14,38,38],33],[[33,14,14,14],14],[[33,53,14,14],33],[[33,14,14,14,52],33],[[33,28,14],33],[[33,28,28],33],[[33,14,38],14],[[33,52,33,14,38],14],[[33,14,38],14],[[33,53,30],45],[[33,14,14,14,33,53,30],14],[[33,33,14,14,14,14,14,38,38,33,33,30],14],[33,53],[[33,38],14],[[33,33],33],[[33,14,14,14,14,38,53,45,30],14],[[33,14,14,14,14],14],[[33,14,14,31,33],14],[[33,14,52,33],14],[[33,14,14,14],14],[[33,14,45],45],[[33,14,14,14],14],[[33,38,38,38],14],[[33,33,14,14,14,38,14],14],[[33,14,14,14,14,126],52],[[33,14,38],14],[[33,14,38],14],[[33,14,14,14],31],[[33,52,38,14,14,14],52],[[33,52,14,14,14,14,52,14],14],[[33,38,38],14],[[33,14,38,38],33],[[33,38,38,14,14,38,38,38,38],14],[[33,38,14,38,38],14],[[33,38,38,14,14,38,38,38],14],[[33,38,38,38,14,14,38,38,38,38],14],[[33,38,38,38,14,14,38,38,38,38,14],14],[[33,14,14],14],[[33,38,14,38,45],14],[[33,14,14,14],14],[[33,14,14,14,14],14],[[33,52,14,31,54,25],14],[[33,14],33],[[33,14],33],[[33,33],33],[[33,14,14],14],[[33,33],33],[[33,38],14],[[33,33,38],14],[33,14],[[33,33,38,14,14],33],[[33,33,33,38,14,14],33],[[33,33,38,14,14],33],[[33,33,14,14],33],[[33,52,14,38,14,55,14,14,14],14],[[33,33,30],33],[[33,33,14,30],33],[[33,14,14,14,58],14],[[53,14,14],33],[[33,33,14,30],33],[[33,14,14,14,14],33],[[33,28,14,14,38,38],33],[[33,28,28,14],33],[[33,14,14],33],[[33,14],53],[[33,14,14,14,14,14,14,14,14,33],114],[[33,38,38,14,14,14,14,14,33],114],[[33,14,14,14,14,14,14,14,14,33],114],[33,57],[[33,14],14],[[33,33,14,14,14,14,38],14],[[33,33,14,14,14,14,38,38,38],14],[[33,14,14,14],33],[[33,14,14,14,33,33,33],14],[[33,33,14,14,14,14,33],14],[[33,33,14,14,33],14],[[33,33,33,14,14,14,14,33,33,33],14],[[33,33,14,14,33,33,33],14],[[33,33,14,14,28,30],14],[[33,14,14,14,14,14,28,14],14],[[33,14,28],14],[[33,14],45],[[33,52,14],45],[[33,33,14,14,14],45],[[33,14],47],[[33,14,45,45,45],14],[[33,33,14,14,14,45,45,45],14],[[33,33,52,14,28,14],14],[33,44],[[33,14,14,14,38],14],[33,28],[33,14],[[33,33,14],45],[[33,33,14,14,38,38,14],14],[[33,14,14,14],14],[[33,14,25],45],[[33,14,14,14,14,14,14],14],[[33,14],45],[[33,52,14],45],[[33,33,14,14,14],45],[[33,14,14,14],55],[33,14],[33,14],[[33,14,14,14],33],[[33,14,14,14,14],14],[[33,14,14,14,14],14],[[33,14],36],[[33,14,14,14,38,38,38,38,38,14],45],[[33,14,14,14,38,38,38,53,53],14],[[33,14],14],[[33,52,28,14,14],14],[[33,14],45],[[33,14,14,14,28,44],14],[[56,33,52],14],[33,119],[[33,33,14,38],14],[[33,33,14,14,14,38,33,33],14],[[33,14,14,28],14],[[33,33,14,14,14,28],14],[[33,14,14,28],14],[[33,14],33],[[33,14],33],[[33,14,14],45],[[33,14,20,20,20],14],[[33,14,14,14,14,14],14],[[33,28,14,14],14],[[33,14,14,14,14],14],[[33,14,14,14,28,30,14],14],[[33,14,38,28],14],[[33,33,14,14,14,38,38,45],14],[[33,33,14,14,14,38,38,38,38],14],[[33,20,37],14],[33,14],[[33,33,33,33,30],14],[[33,14,14],14],[[33,14,14,14,38],14],[[33,14,14,14],45],[[33,14,14,14,14],45],[[33,14,14,14,14,14],14],[33,14],[33,25],[[33,37],20],[[33,14],14],[33,14],[[33,14,14,14,14,31,45],14],[[33,14,14,14,14,31,30,45],14],[33,14],[33,14],[33,14],[[33,33,14,14,14,14,38],33],[[33,33,14,14,14,14],33],[[33,25,14,14],33],[[33,44,14],33],[[33,33,33,38,14],33],[[33,14,14],33],[[33,33,114],33],[[33,33,25],33],[[33,33,14,38,14],33],[[33,33,38,14],33],[[33,33,38,14],33],[[33,14,38,14],14],[[33,14,38,14],33],[[33,14,14,14,14],33],[[33,14,38,38,14,38,33],14],[[33,33,33,33,38,38,14,14],14],[[33,14],33],[[33,38,14],14],[[14,14,28],33],[[33,115,14],33],[[33,33],33],[[33,31,33,31,14],14],[[33,14,14,38,38],14],[[33,33,28,28],33],[33,33],[[33,14,14,33,33],14],[[33,14,33,33],31],[[33,14,52],33],[[33,38,38,38,38],33],[[28,14,14,14,28],33],[[33,14],33],[[14,14,38,38,38,38],33],[14,33],[[33,14,45,45],33],[[33,14,45,45],33],[[33,14,45,45],33],[[33,14],33],[[33,14],33],[[33,14,14,14,14,14],33],[[33,14,14,14,14,14],33],[[33,14,14,14,14,14],33],[[14,14,38,38,14],33],[[33,33,28,38],33],[[33,33,31,14],33],[[33,14,31],33],[[33,14,14],33],[[33,14,14,14,14,14,14],33],[[33,14,14],33],[[33,33,14,14,14,14,14,14,38,14],33],[[33,38],14],[[33,14],33],[[33,14],33],[[33,52,33,38],14],[33,124],[[33,14,14,14,38,38,38,25],14],[[33,14,38],14],[[33,14,14],14],[[33,14],33],[[33,14,14,14,14,14,14],33],[[33,14,14,14,14,14],33],[[33,14,14],33],[[33,14,14,14,14,14,14,45,45,38,38],14],[[33,33,33,14],33],[[33,38,14,14],14],[[33,14,14],33],[[33,33,38],33],[[33,33,38],33],[[33,33,38],33],[[33,38,38],33],[[33,25,14],33],[[33,25,14],33],[[33,33,14,25],33],[[33,33,14,25],33],[[33,14,14,14],33],[[33,25,14],33],[[33,25,14,14,14,31],33],[[33,33,25,14,14,14,31],33],[[33,25,14],33],[[33,33,25,14],33],[[33,38,38,38,38,14],33],[[33,38,28],14],[[33,38,38,38],33],[[33,38],14],[[33,116],33],[[33,33,52,28],33],[[33,33,38],33],[[33,14,14],14],[[33,14,14,38,14,14],14],[[33,14,14,38,14],14],[[33,14,14],45],[[33,44,14,14,14],33],[[33,14,14,14],33],[[33,14,14],33],[[33,14,14,38,38],33],[[33,14,14],33],[[33,14,14],33],[[33,33,114],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,14,14],33],[[33,33,114],33],[[33,14,14],33],[[33,14,14],33],[[33,33,33],33],[[33,38,38,38,38,14,14],33],[[33,38,38,14,14],14],[[33,14,14,14,14,38,33,33],14],[[33,33,14,14,14,14,14,14,14,38,14],33],[[33,14],33],[[33,31,28],33],[[33,31],33],[[33,33,14,14,14,14,14,14,14],14],[[33,33,14,14,28],14],[[33,53,14,25],14],[[33,52,38,14],33],[[39,33,25],14],[[33,14,14,51,14],51],[[33,38,14],33],[[33,38,28],33],[[33,38,20],33],[[33,53,53,14],33],[[33,53,53,28],33],[[33,53,53,20],33],[[33,53,53,33,38,14],33],[[33,38,14],33],[[33,53,53,14],33],[[33,14,14,14,14,14],33],[[33,14,14,14,14],33],[[33,14,14,14,14],33],[[33,14,33,123],14],[[33,14,33,124,123,123],14],[[33,44,14,14,14],33],[[33,14,14,14,33],14],[[33,38,38,38,38,14,14,28,14],33],[[33,14,14,14,14],33],[33,33],[[33,14,14,38],33],[[33,14,14,38],33],[[33,14,14,38],33],[[33,14,14,38,38],33],[[33,33,33,33,38,38,14,14,14,14,38,14],14],[33,33],[[33,14,14,14,14,14,33,14,14],14],[[33,33,14],14],[[33,14,14,14,14],14],[[33,14,14,14],14],[[33,14,14,14,14],14],[25,33],[[33,14,14],45],[[30,14,14,51,14],51],[[25,37],33],[[25,14,14,14,14,14,14],14],[[20,37,14,14,14,14,14,14],14],[[51,14],33],[[25,28,52,14,14],33],[[25,14,14,14,14],33],[[20,37],33],[[20,37],33],[[20,37,37],33],[[20,37],33],[[20,37,28,52,14,14],33],[[20,37,14,14,14,14],33],[[20,37],33],[[20,37],33],[[20,37],33],[[20,37,14],33],[[20,37],33],[[39,14],33],[39,33],[39,33],[[39,28,52,14,14],33],[[39,14,14,14,14],33],[39,33],[39,33],[39,33],[[39,14],33],[39,33],[[25,14],33],[[25,14],33],[[33,20],33],[[33,14,20],33],[[33,14,14,14,14],33],[33,33],[[33,14],33],[[33,14],33],[[33,14,14,14,14],33],[[33,14,14],33],[[33,14],33],[[33,14,14],33],[[33,33,33,14,14,14],14],[[33,33,33,14,14],33],[33,14],[[33,30,45],14],[[33,52,14,14],14],[[33,52,14,20,20,20],14],[[33,52,14,20,20,20,38],14],[[33,31,14,14],14],[[33,31,14,20,20,20],14],[[33,31,14,20,20,20,38,14],14],[[33,14,14,14],33],[[33,14,14,14,20,20,20],14],[[33,52,14,14,14,14,14],14],[[33,52,14,14,14,14,14,14,14],14],[[33,52,14,14,14,14,14,14,14,38],14],[[33,31,14,14,14,14,14],14],[[33,31,14,14,14,14,14,14,14],14],[[33,31,14,14,14,14,14,14,14,38],14],[[33,33,14,14,14,14,14,14,14,14,14],14],[[33,14,14,14,14,14,14],14],[[33,14,14,14,14,14,20,20,20],14],[[33,14,14,14,14,14,20,20,20,38],14],[[33,45,14,14,14,28],14],[[33,45,14,14,14,14,14,28],14],[[53,14,14,14],33],[[33,53,14,14,14],14],[[33,53,14,20,20,20,14],14],[[33,53,14,20,20,20,38,14,14],14],[[33,53,14],14],[[33,53,20,20,20],14],[[33,53,20,20,20,38],14],[[33,119,14,14,14],33],[[33,33],14],[[33,33,14,14],33],[[33,38,14,14,14,14,14,14],45],[[33,38,14,14,14,14],33],[[33,33],33],[[33,14,14,38,14],33],[[33,14,14,38,14],33],[[33,14],33],[[33,38,14],33],[[33,38,28],33],[[33,38,28],33],[[33,38,28],33],[[33,38,14],33],[[33,38,20],33],[[33,38,20],33],[[33,38,14],33],[[33,14,14,38,14],33],[[33,14],33],[[33,14,14,38,14],33],[[33,38,14],33],[[33,38,14],14],[[33,14,14,38,14],14],[[33,38,33,38],33],[[33,52,45,45,45,45,45,45],14],[[33,14,14,14],45],[[33,14,14,14],33],[[33,14,38,14,33,33,33,33],14],[[33,14,38,14,14,33,33],14],[[33,14,33,33],33],[[33,38,38],33],[[33,33,38,38],14],[[33,38,38],33],[33,33],[[33,14,14],33],[[33,38,38],33],[[33,14],33],[[33,38,38],33],[[33,14,14],33],[33,33],[33,33],[[33,38,38],33],[[33,38,38,38,14],33],[33,33],[33,33],[[33,14],33],[33,33],[33,33],[[33,14],33],[[33,38,38],33],[[33,14,14,14],33],[[33,14],33],[[33,14],33],[[33,14,14,14,14],33],[[33,14,14],33],[[33,38,38],33],[[33,33,38],33],[[33,14,14],33],[[33,38,38,38],33],[[33,14,14],33],[[33,38,38],14],[[33,38,38],33],[[33,14,14],33],[[33,38],33],[33,33],[33,33],[33,33],[33,33],[33,33],[33,33],[[33,38],33],[[33,38],33],[[33,38,38,38],33],[[33,14,14],33],[[33,14,14],33],[[33,38,38,33,38],33],[[33,52,14,14,14,14,14,14],14],[[33,52,14,14],14],[[33,14,14,14,14,33],53],[[33,14,14,14,14,33],53],[[33,106,14,14,14],14],[[33,106,14,14],14],[[33,106,14,14],52],[[33,106,14,14],14],[[33,106,14,14],52],[[33,106,14,14,14],52],[[33,33,33,14],33],[[33,33,33,14,14,14],33],[[33,33,14],14],[[33,33,14,14],33],[[33,33,14],14],[[33,33,14],14],[[33,33,14],14],[[33,33,14,14],33],[[33,14],33],[[33,38,14,14,14],33],[[33,38,14,14,14],33],[[33,38,14,14,14],33],[[33,38,14,14,14],33],[[33,14,14,14,14,14,14],33],[[33,38,14,14,14],33],[[33,14,14,14,52],33],[[33,38,14,14],52],[[33,33,53,45],14],[[33,14,33,33],14],[[33,14,14,14],33],[[33,28,37],14],[33,14],[[33,28],14],[[33,14],14],[33,33],[[33,14],14],[[33,31,14],33],[[33,14,28],14],[[33,14,14,14,14,28],14],[[33,14],14],[[33,14,14,14,14,14],14],[[33,44],14],[[33,14,14],14],[[33,28],14],[[33,14],14],[[33,14,14,14],14],[[33,14],14],[[33,52],14],[[33,52,28],14],[[33,14],14],[[33,33,28],14],[[33,33,14,14,14,14,14],14],[[33,33,28,14,14],14],[[33,14,14,14,14],14],[[33,14,14,14,14,14],14],[[33,14],14],[[33,14,14,14],14],[[33,14,14,28],14],[[33,14,38],14],[[33,33,14],14],[[33,14,14,14,14,14],14],[[33,14,14],14],[[33,52,14,14,14,14],14],[[33,33,14,14,14,14,14,14],14],[[33,14],14],[[33,14],14],[[33,14,14,14],33],[[33,25],14],[[33,20,37],14],[[33,50,25,28,14,14,14,14,14],14],[[33,50,25,28,14,14,14,14],14],[[33,28,14],33],[[33,14],14],[[33,14],14],[[33,14],14],[[33,14],14],[[33,14],14],[[33,14,14],20],[[33,33,38,38],14],[[33,33,28,28],33],[[33,14,14,28,28,14],33],[[33,14,14,14],33],[[33,33],14],[[33,33,14],14],[[33,33,28,28,14],33],[[33,33,28,28,14],33],[[33,14],33],[[33,52,14,14,14,14,14,14],31],[[33,14,14,33],31],[[33,38,14,14,14,14,33],14],[[33,14,14,14,14,14,14],31],[[33,14,14,31,30,33],14],[[33,33,38,38,38],33],[[33,14,14,14,14,14],33],[[33,14,14,14,14],33],[[33,14,14,14,14],33],[[33,14,14,14],33],[[33,14],53],[[33,33,33],33],[[33,33,33],33],[[33,33],14],[[33,33,45],14],[[33,33,45,45,45],14],[[33,14],14],[[33,33,14,14,38,38,14,14],14],[[33,14,14,14],33],[[33,14,115,14],33],[[33,14],33],[[33,14,14,14],33],[[33,33,14,14,14,38,38,14,33,14],14],[[33,14,14,38,14,33,33],14],[[33,14,14,14,14],14],[[33,25,14,14,14,14],33],[[33,14,14],33],[[33,14,14,14],14],[[33,14,14,14,14,38,14,14,14,33,33,33],14],[[33,14,14],33],[[33,14,14],33],[[33,14],33],[[33,33,14,14],33],[[33,14,14,14,14,14,14],121],[121],[[121,14,14],14],[[121,14,14],14],[[121,14,14],33],[121,14],[[33,14,14,33,121],14],[[33,14,14,14],33],[[33,33,14,14],14],[[33,33,14,14,14],33],[[33,14],33],[[33,115,14],33],[[33,14,14],33],[[33,14,38],33],[[33,14,38,14],33],[[33,14,38],33],[[33,14,38,14],33],[[33,14,38],33],[[33,14,38,14],33],[[33,38,14,14,14],14],[[33,14],14],[[33,33,14,38,14],33],[[33,33,38,14],33],[[33,33,38,14],33],[[33,14,38,14],14],[[33,14,38,14],33],[[33,33],33],[[33,52],45],[[33,52],45],[[33,52,38],14],[[33,52,33,124,38,38],14],[[33,14,14,14,14,14,14],33],[[33,14,14,14,14],33],[[33,14,14,14],33],[[33,14,14,14,33,33,122,122],14],[[33,33,122,122],14],[[33,14,14,14,14,14,45],14],[[33,14,14,14,14,31,14,30],14],[[33,33,14,30],14],[[25,33,14],14],[[25,33],14],[[33,25,14,14,14],14],[[25,33,14],14],[[25,33,14,14],14],[[25,33,14,14,14,14],14],[[25,33,14,14],14],[[20,37,33,14],14],[[20,37,33],14],[[20,37,33],14],[[20,37,33,14,14,14,14],14],[[20,37,33,14,14],14],[[20,37,33,52,14,38],14],[[20,37,33],14],[[20,37,33,14,25],14],[[20,37,33,38],14],[[20,37,33],14],[[20,37,33],14],[[20,37,33,14],14],[[20,37,33,14,45,51,51,45],14],[[20,37,33,14,14],14],[[33,33,38,14,25],14],[[25,25],14],[[25,33,38],14],[[33,33,38,38,14,14,25],14],[[39,33,14],14],[[39,33],14],[[39,33],14],[[39,33],14],[[39,33,14,14,14,14,14],14],[[39,33,14,14],14],[[39,33,52,14,38],14],[[39,33],14],[[39,33,14,25],14],[[39,33,38],14],[[39,33],14],[[39,33],14],[[39,33,14],14],[[39,33,14,25],14],[[39,33,14,14],14],[[33,52,14,38],25],[[25,33,14,25],14],[[25,33,14,25,45,51,51,45],14],[[25,33,14,14],14],[[33,33,33],33],[[33,14],14],0,0,0,[[30,53,33,38,38],14],[[30,30,14,14,14,14,28],30],[[30,52,14],14],[[30,33,14],14],[[30,33,14,50,25,28,14],14],[[30,50,45,28,14],30],[[30,50,51,28,14],30],[[30,14],14],[[30,14,14,45,14],30],[30,53],[[30,14],14],[30,14],[[30,30,31],14],[[30,33],30],[[30,30,14,14,14,14,14,14,25],14],[[30,38,38,14,14,38,45,38,33,14],14],[[30,14,14,14,14,14],30],[[30,14],30],[30,30],[[30,14],30],[[30,14],30],[[30,14],30],[[30,51,14,14,14,14,14,14],30],[[30,14,38,14,14,25,25],14],[[30,14,38,14,14,25,20,37],14],[30,30],[[30,14],30],[30,45],[[30,14],14],[14,30],[[33,31,14,14,14],30],[[33,14,14,14],30],[[126,14],30],[30],[[30,14,14],33],[[30,54,14,14],30],[[30,14,38,14,14,14,31],33],[[30,14,14,14,14,38,14,14],30],[[30,14,14,14,31],33],[[30,30,14,38,14,14,14,14,14,14,51],33],[[30,14,14],33],[[30,14,14,14],33],[[30,14,14,14,14,14,14],33],[[30,45,14,14,14,14,28],33],[[30,14,38,14,14],33],[[30,14,14,38,14,14,14],33],[[30,14,38,14,14,14,28],33],[[30,14,14,14,28],33],[[30,30,14,45,14],14],[[30,37],14],[[30,14,14,114,14],30],[[30,45,14,14],30],[[30,14,33],14],[30,45],[[30,33,14],45],[[30,45,45],14],[30,45],[30,45],[[30,38,14,14],45],[30,45],[30,45],[[30,14,14,14],33],[[30,14,14],52],[[30,14,14,14,14,14],14],[[30,14],31],[30,14],[30,14],[[30,14,14],14],[[25,14,14,14,14],30],[[30,14],36],[[30,14,14],33],[30,33],[[30,14,14,14,14],14],[[30,14],14],[[30,14],14],[[30,33,52],14],[[30,14,33,52],14],[[30,30,14],30],[[30,14,14],14],[[30,30,14,14],14],[[33,14,14,14,14,31],30],[[30,14,14,14],30],[[30,14,14,14,14],45],[[30,38],30],[[30,25,14,14],30],[[33,30,25,14,14],30],[25,30],[25,30],[[25,25],30],[51,30],[[20,37],30],[[20,37],30],[25,30],[39,30],[[30,38,14,14,33,33],30],[[30,38,14,33,33],30],[[30,14],14],[[30,14,33,52],14],[[30,45],14],[[33,30,14],33],[[30,14,33,52],14],[[30,38,14,14,14,14],30],[[30,14],30],[[25,25,14],14],[[30,38,38],30],[[30,38,38],30],[[30,14,14],30],[[30,14,14],30],[[30,38,14,14],30],[[30,38,14,14],30],[[30,14,14,14,14],30],[[30,38,14,14],30],[[30,38,14,14],30],[[30,14,14,14,14,14],30],[[30,38,14,14],30],[[30,14,14,14],30],[[30,14,14,14,38,14,14,28,14,25],14],[[30,45,14],30],[[30,25,14],30],[[30,31,14],14],[30,14],[[30,14,14,14],30],[[30,25,51],14],[[30,14,14,14,14],14],[[30,14,14,45,14],30],[[30,55,14],118],[[30,45,14],30],[[30,14,38,14,14,14,14],14],[[33,14,14,14,28],30],[[30,14,14,14],30],[[30,14,14,14],30],[[30,14,14],14],[[30,14,14,14],14],[[25,30],14],[[30,25,14,14],14],[[25,30],14],[[25,30,14],14],[[20,37,30],14],[[20,37,30],14],[[20,37,30,14,14,14,14],14],[[25,30],14],[[39,30],14],[[39,30],14],[[39,30,14,14,14,14],14],[[25,30,14,14,14,14],14],0,0,0,0,0,[[118,52,14],14],[[118,14,33,52,14],14],[[118,30,14],14],[118,14],[14,118],[[30,14,14,14],118],[118],[[118,14,14],33],[[118,14,38,14,14,14],33],[[118,14,14,14,14,14,14],30],[[118,45,14],30],[[118,14],31],[[118,45],14],[[118,14,14,14],33],[[118,14,14],30],[[118,30],14],[[118,14],14],[[118,118,14,14],14],[25,118],[[25,25,14,14],118],[[20,37],118],[39,118],[[118,14,30],14],[[118,14,14],118],[[118,45,45],118],[[118,14,14,14],118],[[118,14,14,14,14],14],[118,14],[[118,14,14],14],[[118,14,14,14],14],[[25,118],14],[[20,37,118],14],[[39,118],14],0,[[120,33],14],[[14,14,14],120],[[33,14],120],[120],[[120,14],33],[120,14],[120,33],[[120,38],14],[[120,33,38],14],[[120,33],14],[[126,52,14],14],[[126,33,14],14],[[126,125,14],14],[[126,14,38,14,14,25,25],14],[[126,14,38,14,14,25,20,37],14],[14,126],[[25,25,14],126],[[30,14,14],126],[[51,14],126],[[14,14,33,14],126],[126],[[126,14,14,14,14,14,14],33],[[126,25,20,37],14],[[126,14,14],52],[[126,14,14,14,14,14],14],[[126,14],31],[126,14],[126,14],[126,14],[[126,14],33],[[126,14,14,14,14],14],[[126,14,14],125],[[126,126],126],[[126,126,14,14],14],[25,126],[[20,37],126],[39,126],[[126,14,33,14],14],[[126,14,125],14],[[126,14],14],[[25,126],14],[[126,25],14],[[20,37,126],14],[[39,126],14],[[39,126,25],14],0,0,0,0,0,0,0,0,0,0,[[44,14,14],14],[[44,14,14,14],14],[[44,14,14,14,14],14],[[44,14,14,14,14],14],[[44,14,14,14,14],14],[44,14],[[44,38,38,38],44],[[44,38],14],[44,14],[44,14],[44,14],[44,44],[44,44],[[20,14],25],[44,14],[44,44],[[44,14],14],[14,44],[[14,14],44],[[14,14,14],44],[[20,14,14],44],[44],[[44,38,14,14],14],[[44,14,14,14,14],14],[[44,14,28],14],[44,14],[44,14],[[44,14,14,14,14,14],14],[44,14],[[44,14,14,14,14],14],[[44,14],14],[[44,14,14],14],[[44,14,14,14,14],14],[[44,14,14,14,14,14],14],[[44,14,28],14],[[44,14,14,14,14,14],14],[[44,38,14],14],[28,44],[38,44],[[44,14],14],[[44,14],14],[[44,14],14],[[44,33,14],14],[[44,14,14,14],14],[25,44],[[20,37],44],[39,44],[[44,14,14,14,14],14],[[44,14,14,20],14],[[44,14,14],14],[[44,14,14],14],[[44,28,28],14],[[44,38],14],[[44,14,14,14,14],14],[[44,14,14],14],[[44,28,14],14],[[44,14,14,14,14],14],[[25,44],14],[[20,37,44],14],[[39,44],14],[125,125],[[25,14],125],[[33,14],125],[[20,37,14],125],[125],[[14,14,14,14],14],[[125,14,14,14],14],[[125,14,14,14,14],14],[[25,125],14],[[39,125,25],14],0,0,[[14,14,14,38,28],14],[[28,28,28,28],14],[[14,14,14,28,28,28],14],0,0,0,0,0,0,0,0,0,0,0,[[37,37,45,25],14],[37,36],[36],[[]],[37,36],[[37,14],14],[[36,14],14],[[]],[[25,25],39],[[36,37,37],14],0,0,0,[25,14],[[38,14,14,38,38],14],[[38,14,14,14,14],14],[[14,73,73,73,72,70],14],0,0,[[53,38,38],14],[[53,38],53],[[53,14],14],[53,53],[[53,14,14],14],[53,52],[[53,14],31],[[53,45,45],14],[53,53],[[53,14,14],53],[14,53],[[45,45],53],[[53,33],53],[[53,14,14],53],[53],[53,14],[[53,53,14],14],[[53,45,45],14],[[33,14],53],[53,52],[53,14],[[53,38,38,38,38,45],14],[[53,14,14,14],14],[[53,52],53],[[53,38,38,45],14],[[53,38,38,38,38],14],[[33,14,14,14],53],[[33,52],53],[[53,14,38,38],14],[[53,38,38,38,45],14],[[53,38,38,38,38,38,45],14],[[53,38,38,38,38],14],[[53,38,53,14,38],14],[53,14],[[53,14,14,45],14],[[53,14,14,14],14],[[53,53,53],14],[[53,53,53],14],[[53,53,14,14],14],[[53,38,53,38,38,38,45],14],[[53,38,53,38,38,38,38,45],14],[[53,14],14],[[53,38,38,14],14],[25,53],[[20,37],53],[39,53],[[53,53],14],[[53,53,97],14],[[53,14],14],[[53,33,53,14,14,14,14],53],[[53,14],53],[[53,38,38,38],53],[[53,38,38],53],[[53,38,38,14,14],53],[[53,14,14],53],[[53,14,38,38],14],[[53,14,14,45],53],[53,53],[[53,45],53],[[53,14],53],[[53,53],14],[[53,14,14,38,38],53],[[53,38,38],53],[53,53],[[53,53,53],14],[[53,53,53],14],[[25,53,14],14],[[25,53,14],14],[[20,37,53,14],14],[[39,53,14],14],0,0,[[119,14,38,38],14],[[119,53,14],14],[14,119],[119],[[33,14,14,31,30],119],[119,14],[[119,14,14,38,38],14],[[119,14,14],53],[[33,14],119],[[119,53],14],[[119,119,14,14],14],[25,119],[[20,37],119],[39,119],[[119,14,53],14],[[119,45],119],[119,14],[[25,119,14],14],[[25,119,14],14],[[20,37,119,14],14],[[39,119,14],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[101,36],14],[101,14],[[101,25],14],[[101,51,20,37],14],[14,101],[[101,14,14]],[[101,14],14],[[101,14],14],[[101,14],36],[[101,14,36,14],14],[[101,101],14],[[101,14,14],36],[101,36],[[101,14,36,14],36],[101,14],[[101,14,14],14],[14,102],[[102,14,14]],[102,101],[[102,14,14],101],[[102,14],14],[[102,14,101],14],0,[[14,39],14],[[14,39],14],[14,14],[14,14],[25,14],[25,14],[[14,39],14],[[138,14,14,14],25],[[138,14,14,14,25,37],14],[[138,14,14,14],25],[[138,14,14,14,25,37],14],[[138,14,25],25],[[36,37,37,13]],0,[[123,14,14,14,38,38,38,38],14],[[123,14,14,14,38],14],[[14,14],14],[14,42],0,0,0,[[],14],0,[28,14],0,0,[[],43],0,[[91,14],14],0,[[28,14,14,14,14,14,14]],[[28,14,14,14,14,14,14,14,14,14,28,14,14,14,14,14]],[[28,14,14,14,14,14,14,14,14,14]],[[28,14,14,14,14,14,14,14]],0,[128],[[128,14,38,25,14,14,14,14],14],0,[129],[[129,45,45,51,45,45,45,45],14],[[25,14,14,14,14,14],14],[[25,14,14,14,14,14],14],[[20,37,14,14,14,14,14],14],[[20,37,14,14,14,14,14],14],[[20,37,14,14,14,14,14],14],[[20,37,14,14,14,14,14,14],14],[[20,37,14,14,14,14,14,14,14,14],14],[[20,37,14,14,14],14],[[25,14,14,14,14,14],14],[[25,14,14,14,14,14,14],14],[[25,14,14,14,14,14],14],[[25,14,14,14,14,14,14,14,14],14],[[25,14,14,14],14],[[20,37,14,14],14],[[36,46],36],[[36,37,37],36],[[36,37,37],36],[[25,25],25],[[127,51],30],[[127,33,14],14],[[127,14],14],[[127,33,52,38,14,25,33],14],[[127,33,31,45,45,51,14],14],[[14,14,14,14,14],127],[[127,33],14],[[30,14,14,14,14,14],127],[[30,14,14,14,14,14],127],[[127,14,14,14,14,14],127],[[127,14],14],[[127,33,14,33],31],[127],[127,14],[127,14],[[127,31,38,14,54,55],51],[127,30],[[30,14,14,38,45],30],[[127,14,25,14],14],[[127,14,25],14],[127,14],[127,130],[[127,33,14,14,31,30,33,14],14],[[127,33,33],14],[[127,30,33],14],[[127,51],14],[[14,14,14,14,14],127],[[14,14],30],[[127,33],33],[[127,14,14],14],[[127,33,52,25,33],14],[[127,33,14],33],[25,127],[[20,37],127],[39,127],[[127,38,14,14,33,33],14],[[127,38,14,33,33],14],[[127,14],14],[[127,14,14,38,38],14],[127,14],[[39,127,14,14],14],[[127,33,33,52,14,38],33],[[127,30,38,38,14],14],[127,14],[[30,14],118],[[127,33,14,14,31,30,14],14],[[127,25,14],14],[[127,30,38,14,14],30],[[127,33,52,25,14],14],[[127,14,14,38],14],[[25,127],14],[[20,37,127],14],[[39,127],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,14,14,14,14,14],25],0,[[131,25],14],[131,14],[[131,14,14],14],[[131,33,33],14],[[131,33,33,14,38,14],14],[[131,20,37,20,37],14],[[131,38,38,38],14],[[131,14,14],25],[[14,25,131],14],[[131,36,37,25],14],[[131,33,14],14],0,0,0,0,0,[25,14],[[25,25],14],[[14,25,14,25],14],0,[14],[[25,25,38],38],[[25,25,14],14],[[25,25,36],36],[39],0,0,0,0,0,[25,14],0,[[14,14,14,14,14,14],14],[[51,25],14],[[51,20,37],14],[[51,14,38,14,14,25,25],14],[[51,14,38,14,14,25,20,37],14],[[51,25,25],14],[[51,25,20,37],14],0,0,0,0,0,0,0,0,0,0,[[51,25,14],14],[[25,51],14],[[51,51,14,14],14],[[51,14],14],[51,14],[51,51],[[51,14,14],51],[[51,38,38,25],14],[[51,14,25],14],[[51,14],51],[51,51],[14,51],[[14,25],51],[[25,14],51],[25,51],[51],[14,51],[[51,14,14],25],[51,14],[51,14],[[51,14,14],25],[[51,51,51],14],[[51,51,51],14],[[51,51],14],[[51,25,25],14],[[51,51,25],14],[[51,14,14,14,14,25,14],14],[25,51],[[20,37],51],[39,51],[[51,51],14],[[51,51,97],14],[[51,14],25],[[51,14,25,14],14],[[51,25],51],[[51,14,14],51],[[51,51,14],51],[[51,45],51],[[51,25,25],14],[[51,14],25],[[51,14,14,14],25],[[51,51,51],14],[[51,51,51],14],[[25,51],14],[[20,37,51],14],[51,14],[[39,51],14],0,0,0,0,[25,14],[25,14],0,[136,136],[[136,92],14],0,[114,114],[[14,14,25],114],[[14,14,14,14,14],114],[[14,14,14],114],[[33,25],114],[[33,14,14,25],114],[[53,14,14,25],114],[[25,14,14,25],114],[114],[[114,14,14],33],[[114,14,14,14,14],14],[[114,14,14,14],14],[114,25],[[114,14,14,14,14],14],[[114,14],14],[[14,14],114],[114,25],[25,114],[25,114],[39,114],[[114,14],114],[[114,14,14,14],14],[[114,25],14],[[114,14,14],14],[[25,114],14],[[39,114],14],[115,115],[115,115],[115,115],[115,115],[[115,38,38,14,14],115],[115,115],[115,115],[115,115],[[115,114,25,14],14],[[115,38,38,14,14],115],[14,115],[[30,51],115],[25,115],[115],[[115,14,14,14,14],33],[[115,25,14,114],14],[[115,14,14],25],[[115,14,14],25],[115,14],[[115,14],114],[115,51],[[14,14],115],[25,115],[39,115],[[25,115],14],[[39,115],14],[[14,73,73,73,71],14],[[14,14,114,114],14],[[14,14,14],14],[[33,14],14],[14],[[28,14,14,28],14],[14,14],[[13,13]],[[28,14,14,28]],[[39,25]],[[39,25,37]],[[25,25,14],14],[39],0,[25,25],[[25,91],14],[[39,25,14,37],14],0,[[33,51,54,55,33],30],0,0,0,0,0,0,0,[[25,46,25],14],0,0,0,[[25,25,25],14],[[25,25,25],14],[[25,14],51],0,0,0,[[25,25],14],[28],[43],[[43,92],14],[28],[[28,91],14],[[28,37,14,14,14,14,14],14],[[25,25],14],[[25,25],14],0,0,[[]],[[],36],[[],93],0,0,0,0,0,0,0,0,0,0,[[],38],[36,38],[93,38],0,0,[14,132],[[25,14,25],14],[[132,25],14],[[132,25,25],14],[[25,37,25],14],[[25,25,14],14],[[25,25],14],[25,25],[[25,25,14],14],[[25,14,14],25],[[25,25],48],[[25,25,14],14],[[25,25],25],[[25,25],14],[[25,37],14],[25,25],[[25,25],25],[[25,25],14],[[25,25,25,14],25],[[25,25,25,14,14],25],[25,25],[[25,25,25,25],14],0,[[25,25],32],[[25,25],38],[[25,25,25],25],[[25,25,14],43],[[25,25],138],[[25,25,14],43],[[25,25,14],43],[[25,25,14],46],[[25,25,14],46],[[25,25,14],46],0,[14,133],[133],[[14,14,14,14],133],[[133,14],14],[25,14],[25,14],[133,14],[[14,14],14],0,0,0,0,0,0,[25,14],0,0,0,[[25,25],25],0,0,0,0,0,0,0,[[28,14,28,14,14]],[[39,14],14],0,0,0,0,0,0,[[],39],[25,25],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,39],14],[25,14],0,0,0,0,0,[37,36],0,[[14,25,135],14],0,[[39,25,135],14],[[39,25,135],14],[[39,25,135],14],[[25,135],14],[[25,135],14],[[25,135],14],[[25,46,25,135],14],[[25,25,135],14],[[25,25,135],14],[[25,25,135],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,14,37],37],[[25,14],14],0,0,0,0,0,0,0,[[25,25,14,14],14],[[25,39,14],14],[[25,25,25],14],[[51,25],14],[134,14],[[134,30,45],14],[[33,33,14,14],134],[134],[134,33],[134,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,37,37],20],[[20,37,37],20],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[139,139],3],[[22,4],5],[[19,4],5],[[19,4],5],[[139,4],5],[[]],[[]],[[]],[[]],[[]],[140,19],[141,19],[[]],[[12,37],[[13,[[143,[142]]]]]],[22,139],[144,28],[12,37],[144,28],0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[[]],[145,13],[17,[[10,[144,19]]]],[[[21,[20]]],[[10,[144,19]]]],[146],0,0,0,[19,[[13,[147]]]],[[],8],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[16,16],3],[[23,23],3],[[16,4],5],[[16,4],5],[[23,4],5],[[23,4],5],[[148,4],5],[[]],[[]],[[]],[[148,7],[[10,[8,9]]]],[[148,11,3],[[13,[12]]]],[[148,7],[[10,[8,9]]]],[148,13],[[148,7],[[10,[8,9]]]],[148,[[13,[12]]]],[148,14],[[148,7],[[10,[8,9]]]],[148,[[10,[8,9]]]],[[148,7],[[10,[8,9]]]],[[]],[[]],[[]],[148,14],[[[13,[15]],15],[[10,[148,16]]]],[146],[146],0,[148,14],[[148,144]],[[148,14,14,14,14]],[[148,22]],[[148,14]],[[],8],[[],8],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],24],[[],24],[[],24]],"c":[],"p":[[4,"Variable"],[3,"CStr"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"LepTess"],[6,"c_int"],[3,"String"],[3,"Utf8Error"],[4,"Result"],[6,"TessPageIteratorLevel"],[3,"Boxa"],[4,"Option"],[15,"i32"],[15,"str"],[3,"TessInitError"],[3,"Path"],[8,"AsRef"],[4,"PixError"],[15,"u8"],[15,"slice"],[3,"Box"],[3,"TessSetVariableError"],[3,"TypeId"],[15,"i8"],[3,"TessResultRenderer"],[3,"TessBaseAPI"],[15,"u32"],[3,"TessPageIterator"],[3,"Pixa"],[3,"Boxa"],[15,"f64"],[3,"Pix"],[3,"TessResultIterator"],[3,"TessMutableIterator"],[4,"c_void"],[15,"usize"],[15,"f32"],[3,"_IO_FILE"],[3,"ETEXT_DESC"],[3,"TessChoiceIterator"],[15,"never"],[15,"i64"],[3,"PixColormap"],[3,"Numa"],[15,"u64"],[3,"L_Rbtree"],[3,"L_Dna"],[3,"L_ByteBuffer"],[3,"L_Bmf"],[3,"Sarray"],[3,"Box"],[3,"Pta"],[3,"Boxaa"],[3,"Numaa"],[3,"CCBord"],[3,"CCBorda"],[3,"L_Compressed_Data"],[3,"__fsid_t"],[3,"__mbstate_t"],[19,"__mbstate_t__bindgen_ty_1"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"_IO_marker"],[3,"_IO_codecvt"],[3,"_IO_wide_data"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[19,"__atomic_wide_counter"],[3,"__atomic_wide_counter__bindgen_ty_1"],[3,"__pthread_internal_list"],[3,"__pthread_internal_slist"],[3,"__pthread_mutex_s"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_cond_s"],[3,"__once_flag"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"random_data"],[3,"drand48_data"],[3,"L_WallTimer"],[3,"L_Dnaa"],[3,"L_DnaHash"],[3,"L_Bytea"],[3,"L_Hashmap"],[3,"L_Hashitem"],[3,"L_Heap"],[3,"DoubleLinkedList"],[3,"L_Ptra"],[3,"L_Ptraa"],[3,"L_Queue"],[19,"Rb_Type"],[3,"L_Rbtree_Node"],[3,"L_Stack"],[3,"L_Colorfill"],[3,"L_Dewarpa"],[3,"L_Dewarp"],[3,"GPlot"],[3,"L_Pdf_Data"],[3,"JbClasser"],[3,"JbData"],[3,"Sel"],[3,"Sela"],[3,"L_Kernel"],[3,"RGBA_Quad"],[3,"Pixaa"],[3,"Ptaa"],[3,"Pixacc"],[3,"PixTiling"],[3,"FPix"],[3,"FPixa"],[3,"DPix"],[3,"PixComp"],[3,"PixaComp"],[3,"L_Recog"],[3,"L_Rch"],[3,"L_Rcha"],[3,"L_Rdid"],[3,"L_RegParams"],[3,"L_StrCode"],[3,"L_Sudoku"],[3,"L_WShed"],[3,"__va_list_tag"],[15,"u16"],[3,"Error"],[15,"u128"],[3,"BoxGeometry"],[3,"TryFromIntError"],[3,"NulError"],[3,"Box"],[3,"RefCounted"],[3,"Pix"],[3,"BoxaRefIterator"],[3,"Demand"],[8,"Error"],[3,"TessApi"],[13,"InvalidPathNulByte"],[13,"MemoryTooLarge"]]},\
"leptonica_plumbing":{"doc":"","t":"DDDNNDDEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLCALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIIDDLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLL","n":["Box","BoxCreateValidError","Boxa","ImageSizeConversion","NullPtr","Pix","PixReadError","PixReadMemError","Pixa","Str","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","create","create_valid","destroy","destroy","destroy","destroy","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_box_cloned","get_box_copied","get_count","get_count","get_geometry","get_height","get_imagelib_versions","get_pix_cloned","get_pix_copied","get_version","get_width","into","into","into","into","into","into","into","into","leptonica_sys","memory","new_from_pointer","new_from_pointer","new_from_pointer","new_from_pointer","new_from_pointer","provide","provide","provide","read","read_mem","read_multipage_tiff","source","to_str","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","BorrowedFrom","LeptonicaClone","LeptonicaDestroy","RefCounted","RefCountedExclusive","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","deref","deref","deref","deref_mut","destroy","drop","drop","from","from","from","into","into","into","new","new","new","to_ref_counted","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"leptonica_plumbing"],[128,"leptonica_plumbing::memory"]],"d":["Wrapper around Leptonica’s <code>Box</code> structure","Error returned by Box::create_valid","Wrapper around Leptonica’s <code>Boxa</code> structure","","","Wrapper around Leptonica’s <code>Pix</code> structure","Error returned by Pix::read","Error returned by Pix::read_mem","Wrapper around Leptonica’s <code>Pixa</code> structure","Wrapper for heap allocated leptonica strings","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper for <code>boxaCreate</code>","Wrapper for <code>boxCreateValid</code>","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wrapper for <code>boxaGetBox</code> with copied <code>accessflag</code>: <code>L_CLONE</code>","Wrapper for <code>boxaGetBox</code> with copied <code>accessflag</code>: <code>L_COPY</code>","Wrapper for <code>boxaGetCount</code>","Wrapper for <code>pixaGetCount</code>","Wrapper for <code>boxGetGeometry</code>","Wrapper for <code>pixGetHeight</code>","Wrapper for <code>getImagelibVersions</code>","","Wrapper for <code>pixaGetPix</code> with copied <code>accessflag</code>: <code>L_COPY</code>","Wrapper for <code>getLeptonicaVersion</code>","Wrapper for <code>pixGetWidth</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create an owned Box from a box pointer","Create a new Boxa from a pointer","Create a new instance from a pointer","Create a new Pixa from a pointer","Create a new Str from a heap allocated c-string pointer","","","","Wrapper for <code>pixRead</code>","Wrapper for <code>pixReadMem</code>","Wrapper for <code>pixaReadMultipageTiff</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-ref counted wrapper that’s valid for the lifetime …","Trait to define how leptonica clones this memory.","Trait to define how leptonica frees this memory.","A wrapper for ref counted leptonica pointers.","A wrapper for ref counted leptonica pointers that can be …","","","","","","","Call to leptonica’s internal structure-clone method.","","","","","Call to leptonica’s internal structure-destroy method.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new borrowed-from wrapper","Creates a new ref counted wrapper","Creates a new ref counted exclusive wrapper","Convert to a ref counted wrapper","","","","","","","","",""],"i":[0,0,0,17,17,0,0,0,0,0,1,3,1,3,5,5,7,9,1,14,3,5,17,20,7,9,1,14,3,5,17,20,7,9,5,3,1,1,3,5,7,9,1,3,17,7,1,14,14,3,5,17,17,20,20,7,9,1,14,3,5,17,17,17,20,7,9,3,3,3,7,1,5,0,7,7,0,5,1,14,3,5,17,20,7,9,0,0,1,3,5,7,9,14,17,20,5,5,7,17,9,14,17,20,1,14,3,5,17,20,7,9,1,14,3,5,17,20,7,9,1,14,3,5,17,20,7,9,0,0,0,0,0,34,23,12,34,23,12,36,34,23,12,12,35,23,12,34,23,12,34,23,12,34,23,12,12,34,23,12,34,23,12,34,23,12],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[1,2],[3,4],[5,6],[5,6],[7,8],[9,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[11,[[13,[[12,[3]]]]]],[[11,11,11,11],[[15,[[12,[1]],14]]]],[1],[3],[5],[7],[9],[[1,1],16],[[3,3],16],[[17,17],16],[[7,7],16],[[1,18],19],[[14,18],19],[[14,18],19],[[3,18],19],[[5,18],19],[[17,18],19],[[17,18],19],[[20,18],19],[[20,18],19],[[7,18],19],[[9,18],19],[[]],[[]],[[]],[[]],[[]],[21,17],[22,17],[[]],[[]],[[]],[[3,11],[[13,[[23,[1]]]]]],[[3,11],[[13,[[12,[1]]]]]],[3,11],[7,11],[[1,[13,[11]],[13,[11]],[13,[11]],[13,[11]]],24],[5,11],[[],[[13,[9]]]],[[7,11],[[13,[[23,[5]]]]]],[[7,11],[[13,[[12,[5]]]]]],[[],9],[5,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,1],[4,3],[6,5],[8,7],[25,9],[26],[26],[26],[10,[[15,[[12,[5]],20]]]],[[[28,[27]]],[[15,[[12,[5]],17]]]],[10,[[13,[[12,[7]]]]]],[17,[[13,[29]]]],[9,[[15,[30,31]]]],[[],32],[[],32],[[],32],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[[23,[35]]]],[[[12,[35]]]],[[[12,[35]]]],[[]],[[[23,[35]]]],[[[12,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[35,[[23,[35]]]],[35,[[12,[35]]]],[[[12,[[0,[35,36]]]]],[[23,[[0,[35,36]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],33],[[],33],[[],33]],"c":[],"p":[[3,"Box"],[3,"Box"],[3,"Boxa"],[3,"Boxa"],[3,"Pix"],[3,"Pix"],[3,"Pixa"],[3,"Pixa"],[3,"Str"],[3,"CStr"],[6,"l_int32"],[3,"RefCountedExclusive"],[4,"Option"],[3,"BoxCreateValidError"],[4,"Result"],[15,"bool"],[4,"PixReadMemError"],[3,"Formatter"],[6,"Result"],[3,"PixReadError"],[4,"Infallible"],[3,"TryFromIntError"],[3,"RefCounted"],[6,"l_ok"],[6,"c_char"],[3,"Demand"],[15,"u8"],[15,"slice"],[8,"Error"],[15,"str"],[3,"Utf8Error"],[3,"String"],[3,"TypeId"],[3,"BorrowedFrom"],[8,"LeptonicaDestroy"],[8,"LeptonicaClone"]]},\
"leptonica_sys":{"doc":"","t":"RRRRGGGRRRRDDDGGRRRRDDRRRRRRRRGRGRDDRRRRRGRRGGRDDGGRRRRRRGRRRRGRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGRRRRRRRDDRRRRRRRRRRRRRRRRRRRRRRRRRRRGGRRRRRGGRRRGRRRRRRRRRGRRRRRRGDDDRRRRRRRRRRRRRRRGRRRRRGRRRDDRGGRRRRRGGGRRRRRRDDDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGRRRRRRRRDDDRRRRRRRRRRRRRGDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRGGDDDRRGDGGGGGGRRGRRRRRRRRRRRRRRDDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRGRRRRRRRRRRRGRRRDDDRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRGDDRRRHHHGGRRRDDRGGGRGGRRGGGRRRRRRRGGRRRRDDDDDDDDDDRGRRRRRRGDTGRRRRGGRRRRRRRRRRRDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRGGGGDDRRRRRDRMMMDGDMMMMMDMMMRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMMMMMMTDGGGGMGGRGRGMMFMGMMMMGMGMMGGGGGGDGMMMMMFGRGRMGMGGGGGGGGGGGGGMRMRMGMDTGMMGMGGMDFMMMMMMGMMMDDDGDDGGMGGMMGDRMMMMMMMMMGMGMMRGGGGGGRGRRGGGGGGFGGGGGGGGGGGDMMMMMMMMMMMMMGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGMMMMMMMMMMMMMMMMMFFFFFFFFFGFMFFFFFFMMMMMMMMMFFFMFFFFFFMMFFMMMMMFFFFFFFFMFFGGMMFFFFFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMFGFFMFFFFFFFFFFFFFFFFFFFFFFMFMMMFMFFFGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMMFMFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMFFFFFFMMMMMMMGMMMMMMMMMMMMMGMMFFFMMMMMGMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMFFFDMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFMFFFFFFFFMFFFGDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFMFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMFFFFFMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGFFMFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFFFFFGGFFFMMMMMMFFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGMMFFFFFFFFFFFFFFFFFFFFFFHHFFMMMMMMMMMMMMMMMMMMGMMMMMMMFFGGGGGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFFFFFFFFFFFFFMMMGMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFGGGGGFFGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGGGGFFMMFFFDMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMMMFFFFFFFFFFFFFFFDMFMGFFFFFFFFFFFFFFFMFFFFFFFFFFFFFFFFFFFFFMMMMMMMMMMMMMMMMMMMFFFMMMMMMMMMMMMMMFFFFMGMFFFFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFMMMMMMMMFMMMMGMMMMFFMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMMMMMMMMMMGMMFFMMMMMFFFFFFFGMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMFFFMMMMMMMMMMMFFFFFFFFFFMMMFFFFMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMFFFFFFFFFFFFFFFFFFFFFMMMMMMMTTTTTGTTGTTGGMFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFFFFFFFGFFFFMMMFMFMMFDFMFFFFMFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMMMMMMMMMMMMMFMFFFFFFFFFFFMGMMMFFFMFFFFFMMMMMFMFFFFFFFMMMMMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMMFFMFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMFFFMFGMMMMMMFMMMFFFMMMFFFFFFFFFMMFFFMMMMMMHHHMFFFMMFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFFFFMFFFFFFFFMGMMMMFMMMFMMMMMMMFFGGDDMMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGGGGGGGGGGGGGGFFMGMGMFMFMFFFFFFFFFFMMMMMMMMMMMMMMGFFMMMMMMMFFFFFFFFFFMMMMMMMMMMMMMMMMMMMMMFF","n":["ADDED_BORDER","ASYMMETRIC_MORPH_BC","BIG_ENDIAN","BMP_ID","BOX","BOXA","BOXAA","BOXAA_VERSION_NUMBER","BOXA_VERSION_NUMBER","BUFSIZ","BYTE_ORDER","Box","Boxa","Boxaa","CCBORD","CCBORDA","CCB_GLOBAL_COORDS","CCB_LOCAL_COORDS","CCB_SAVE_ALL_PTS","CCB_SAVE_TURNING_PTS","CCBord","CCBorda","COLOR_BLUE","COLOR_GREEN","COLOR_RED","DEFAULT_CLIP_LOWER_1","DEFAULT_CLIP_LOWER_2","DEFAULT_CLIP_UPPER_1","DEFAULT_CLIP_UPPER_2","DEWARP_VERSION_NUMBER","DLLIST","DNA_VERSION_NUMBER","DPIX","DPIX_VERSION_NUMBER","DPix","DoubleLinkedList","EOF","EXIT_FAILURE","EXIT_SUCCESS","FALSE","FD_SETSIZE","FILE","FILENAME_MAX","FOPEN_MAX","FPIX","FPIXA","FPIX_VERSION_NUMBER","FPix","FPixa","GPLOT","GPLOT_OUTPUT","GPLOT_OUTPUT_GPLOT_EPS","GPLOT_OUTPUT_GPLOT_LATEX","GPLOT_OUTPUT_GPLOT_NONE","GPLOT_OUTPUT_GPLOT_PNG","GPLOT_OUTPUT_GPLOT_PNM","GPLOT_OUTPUT_GPLOT_PS","GPLOT_SCALING","GPLOT_SCALING_GPLOT_LINEAR_SCALE","GPLOT_SCALING_GPLOT_LOG_SCALE_X","GPLOT_SCALING_GPLOT_LOG_SCALE_X_Y","GPLOT_SCALING_GPLOT_LOG_SCALE_Y","GPLOT_STYLE","GPLOT_STYLE_GPLOT_DOTS","GPLOT_STYLE_GPLOT_IMPULSES","GPLOT_STYLE_GPLOT_LINES","GPLOT_STYLE_GPLOT_LINESPOINTS","GPLOT_STYLE_GPLOT_POINTS","GPLOT_VERSION_NUMBER","GPlot","HAVE_FMEMOPEN","HAVE_FSTATAT","HAVE_LIBGIF","HAVE_LIBJP2K","HAVE_LIBJPEG","HAVE_LIBPNG","HAVE_LIBTIFF","HAVE_LIBUNGIF","HAVE_LIBWEBP","HAVE_LIBWEBP_ANIM","HAVE_LIBZ","IFF_BMP","IFF_DEFAULT","IFF_GIF","IFF_JFIF_JPEG","IFF_JP2","IFF_LPDF","IFF_PNG","IFF_PNM","IFF_PS","IFF_SPIX","IFF_TIFF","IFF_TIFF_G3","IFF_TIFF_G4","IFF_TIFF_JPEG","IFF_TIFF_LZW","IFF_TIFF_PACKBITS","IFF_TIFF_RLE","IFF_TIFF_ZIP","IFF_UNKNOWN","IFF_WEBP","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","JBCLASSER","JBDATA","JB_CHARACTERS","JB_CONN_COMPS","JB_CORRELATION","JB_DATA_EXT","JB_RANKHAUS","JB_TEMPLATE_EXT","JB_WORDS","JbClasser","JbData","KERNEL_VERSION_NUMBER","LIBLEPT_MAJOR_VERSION","LIBLEPT_MINOR_VERSION","LIBLEPT_PATCH_VERSION","LITTLE_ENDIAN","L_ADD_ABOVE","L_ADD_AT_BOT","L_ADD_AT_LEFT","L_ADD_AT_RIGHT","L_ADD_AT_TOP","L_ADD_BELOW","L_ADD_LEFT","L_ADD_RIGHT","L_ADD_TRAIL_SLASH","L_ADJUST_BOT","L_ADJUST_CHOOSE_MAX","L_ADJUST_CHOOSE_MIN","L_ADJUST_LEFT","L_ADJUST_LEFT_AND_RIGHT","L_ADJUST_RIGHT","L_ADJUST_SKIP","L_ADJUST_TOP","L_ADJUST_TOP_AND_BOT","L_ALL","L_ALL_EDGES","L_ALPHA_CHANNEL","L_ALPHA_SHIFT","L_AMAP","L_AMAP_NODE","L_ARABIC_NUMERALS","L_ARITH_ADD","L_ARITH_DIVIDE","L_ARITH_MULTIPLY","L_ARITH_SUBTRACT","L_ASET","L_ASET_NODE","L_AUTO_BYTE","L_AUTO_DOWNSHIFT","L_AVE_MAX_DIFF_2","L_BBUFFER","L_BIN_SORT","L_BLACK_IS_MAX","L_BLEND_GRAY","L_BLEND_GRAY_WITH_INVERSE","L_BLEND_TO_BLACK","L_BLEND_TO_WHITE","L_BLEND_WITH_INVERSE","L_BLUE_SHIFT","L_BLUE_WEIGHT","L_BMF","L_BOTH_DIRECTIONS","L_BOUNDARY_BG","L_BOUNDARY_FG","L_BOX_CENTER","L_BRING_IN_BLACK","L_BRING_IN_WHITE","L_BYTEA","L_Bmf","L_ByteBuffer","L_Bytea","L_CHECK_BOTH","L_CHECK_HEIGHT","L_CHECK_WIDTH","L_CHOOSE_CONSECUTIVE","L_CHOOSE_MAX","L_CHOOSE_MAXDIFF","L_CHOOSE_MAX_BOOST","L_CHOOSE_MIN","L_CHOOSE_MIN_BOOST","L_CHOOSE_SKIP_BY","L_CLEAR_PIXELS","L_CLIP_TO_FF","L_CLIP_TO_FFFF","L_CLIP_TO_ZERO","L_CLONE","L_COLORFILL","L_COMBINE","L_COMPACTION","L_COMPARE_ABS_DIFF","L_COMPARE_SUBTRACT","L_COMPARE_XOR","L_COMP_DATA","L_CONTINUED_BORDER","L_COPY","L_COPY_CLONE","L_Colorfill","L_Compressed_Data","L_DEFAULT_ENCODE","L_DEWARP","L_DEWARPA","L_DISPLAY_WITH_IV","L_DISPLAY_WITH_OPEN","L_DISPLAY_WITH_XLI","L_DISPLAY_WITH_XV","L_DISPLAY_WITH_XZGV","L_DNA","L_DNAA","L_DNAHASH","L_DRAW_BLUE","L_DRAW_GREEN","L_DRAW_RANDOM","L_DRAW_RED","L_DRAW_RGB","L_DRAW_SPECIFIED","L_Dewarp","L_Dewarpa","L_Dna","L_DnaHash","L_Dnaa","L_EQUAL_TO_ZERO","L_EUCLIDEAN_DISTANCE","L_EXCLUDE_REGION","L_EXCLUSIVE_OR","L_FILL_BLACK","L_FILL_WHITE","L_FIRST_IMAGE","L_FLATE_ENCODE","L_FLIP_PIXELS","L_FLOAT_TYPE","L_FLOAT_VALUE","L_FOUND","L_FROM_BOT","L_FROM_LEFT","L_FROM_RIGHT","L_FROM_TOP","L_FULL_DOWNSHIFT","L_G4_ENCODE","L_GEOMETRIC_INTERSECTION","L_GEOMETRIC_UNION","L_GET_BLACK_VAL","L_GET_BOT","L_GET_LEFT","L_GET_RIGHT","L_GET_TOP","L_GET_WHITE_VAL","L_GREATER_THAN_ZERO","L_GREEN_SHIFT","L_GREEN_WEIGHT","L_HANDLE_ONLY","L_HASHITEM","L_HASHMAP","L_HEAP","L_HMAP_CHECK","L_HMAP_CREATE","L_HORIZ","L_HORIZONTAL_EDGES","L_HORIZONTAL_LINE","L_HORIZONTAL_RUNS","L_HS_HISTO","L_HV_HISTO","L_Hashitem","L_Hashmap","L_Heap","L_INCLUDE_REGION","L_INSERT","L_INTEGER_VALUE","L_INTERMED_DIFF","L_INTERPOLATED","L_INTERSECTION","L_INT_TYPE","L_J2K_CODEC","L_JP2K_ENCODE","L_JP2_CODEC","L_JPEG_CONTINUE_WITH_BAD_DATA","L_JPEG_ENCODE","L_JPEG_READ_LUMINANCE","L_KERNEL","L_Kernel","L_LANDSCAPE_MODE","L_LARGEST_AREA","L_LAST_IMAGE","L_LC_ALPHA","L_LC_ROMAN_NUMERALS","L_LESS_THAN_ZERO","L_LINEAR_INTERP","L_LINEAR_SCALE","L_LINEAR_WARP","L_LOG_SCALE","L_LOWER_LEFT","L_LOWER_RIGHT","L_LS_BYTE","L_LS_TWO_BYTES","L_MANHATTAN_DISTANCE","L_MAX_DIFF","L_MEAN_ABSVAL","L_MEDIAN_VAL","L_MIN_DOWNSHIFT","L_MIRRORED_BORDER","L_MODE_COUNT","L_MODE_VAL","L_MORPH_CLOSE","L_MORPH_DILATE","L_MORPH_ERODE","L_MORPH_HMT","L_MORPH_OPEN","L_MS_BYTE","L_MS_TWO_BYTES","L_NEGATIVE","L_NEG_SLOPE_LINE","L_NEXT_IMAGE","L_NOCOPY","L_NON_NEGATIVE","L_NON_POSITIVE","L_NOT_FOUND","L_NO_CHROMA_SAMPLING_JPEG","L_NO_COMPACTION","L_OBLIQUE_LINE","L_PAINT_DARK","L_PAINT_LIGHT","L_PDF_DATA","L_PLOT_AT_BOT","L_PLOT_AT_LEFT","L_PLOT_AT_MID_HORIZ","L_PLOT_AT_MID_VERT","L_PLOT_AT_RIGHT","L_PLOT_AT_TOP","L_PORTRAIT_MODE","L_POSITIVE","L_POS_SLOPE_LINE","L_PTRA","L_PTRAA","L_Pdf_Data","L_Ptra","L_Ptraa","L_QUADRATIC_INTERP","L_QUADRATIC_WARP","L_QUEUE","L_Queue","L_RBTREE","L_RBTREE_NODE","L_RCH","L_RCHA","L_RDID","L_RECOG","L_RED_SHIFT","L_RED_WEIGHT","L_REGPARAMS","L_REG_COMPARE","L_REG_DISPLAY","L_REG_GENERATE","L_REMOVE","L_REMOVE_SMALL","L_REMOVE_TRAIL_SLASH","L_ROOT_MEAN_SQUARE","L_ROTATE_AREA_MAP","L_ROTATE_SAMPLING","L_ROTATE_SHEAR","L_RO_SC_TR","L_RO_TR_SC","L_RUN_OFF","L_RUN_ON","L_Rbtree","L_Rbtree_Node","L_Rch","L_Rcha","L_Rdid","L_Recog","L_RegParams","L_SAMPLED","L_SCAN_BOTH","L_SCAN_HORIZONTAL","L_SCAN_NEGATIVE","L_SCAN_POSITIVE","L_SCAN_VERTICAL","L_SC_RO_TR","L_SC_TR_RO","L_SELECT_AVERAGE","L_SELECT_BLUE","L_SELECT_BY_AREA","L_SELECT_BY_HEIGHT","L_SELECT_BY_MAX_DIMENSION","L_SELECT_BY_PERIMETER","L_SELECT_BY_WIDTH","L_SELECT_GREEN","L_SELECT_HEIGHT","L_SELECT_HUE","L_SELECT_IF_BOTH","L_SELECT_IF_EITHER","L_SELECT_IF_GT","L_SELECT_IF_GTE","L_SELECT_IF_LT","L_SELECT_IF_LTE","L_SELECT_MAX","L_SELECT_MIN","L_SELECT_RED","L_SELECT_SATURATION","L_SELECT_WEIGHTED","L_SELECT_WIDTH","L_SELECT_XVAL","L_SELECT_YVAL","L_SET_BLACK","L_SET_BOT","L_SET_LEFT","L_SET_PIXELS","L_SET_RIGHT","L_SET_TOP","L_SET_WHITE","L_SEVERITY_ALL","L_SEVERITY_DEBUG","L_SEVERITY_ERROR","L_SEVERITY_EXTERNAL","L_SEVERITY_INFO","L_SEVERITY_NONE","L_SEVERITY_WARNING","L_SHEAR_ABOUT_CENTER","L_SHEAR_ABOUT_CORNER","L_SHELL_SORT","L_SLOPE_BORDER","L_SMALLEST_AREA","L_SOBEL_EDGE","L_SORT_BY_AREA","L_SORT_BY_ASPECT_RATIO","L_SORT_BY_BOT","L_SORT_BY_HEIGHT","L_SORT_BY_MAX_DIMENSION","L_SORT_BY_MIN_DIMENSION","L_SORT_BY_PERIMETER","L_SORT_BY_RIGHT","L_SORT_BY_WIDTH","L_SORT_BY_X","L_SORT_BY_Y","L_SORT_DECREASING","L_SORT_INCREASING","L_STACK","L_STANDARD_DEVIATION","L_STRCODE","L_STR_MEMREADER","L_STR_NAME","L_STR_READER","L_STR_TYPE","L_SUBPIXEL_ORDER_BGR","L_SUBPIXEL_ORDER_RGB","L_SUBPIXEL_ORDER_VBGR","L_SUBPIXEL_ORDER_VRGB","L_SUBTRACTION","L_SUB_ON_LOC_DIFF","L_SUB_ON_SIZE_DIFF","L_SUDOKU","L_SUDOKU_INIT","L_SUDOKU_STATE","L_SV_HISTO","L_Stack","L_StrCode","L_Sudoku","L_TAKE_ABSVAL","L_TEXT_ORIENT_DOWN","L_TEXT_ORIENT_LEFT","L_TEXT_ORIENT_RIGHT","L_TEXT_ORIENT_UNKNOWN","L_TEXT_ORIENT_UP","L_THIN_BG","L_THIN_FG","L_TIMER","L_TOPHAT_BLACK","L_TOPHAT_WHITE","L_TR_RO_SC","L_TR_SC_RO","L_TWO_SIDED_EDGE","L_UC_ALPHA","L_UC_ROMAN_NUMERALS","L_UINT_TYPE","L_UNDEFINED","L_UNION","L_UNKNOWN","L_UPPER_LEFT","L_UPPER_RIGHT","L_USE_ALL_BOXES","L_USE_ALL_TEMPLATES","L_USE_AVERAGE_TEMPLATES","L_USE_CAPPED_MAX","L_USE_CAPPED_MIN","L_USE_INNER","L_USE_MAXSIZE","L_USE_MINSIZE","L_USE_OUTER","L_USE_SAME_PARITY_BOXES","L_VARIANCE","L_VERT","L_VERTICAL_EDGES","L_VERTICAL_LINE","L_VERTICAL_RUNS","L_WALLTIMER","L_WARP_TO_LEFT","L_WARP_TO_RIGHT","L_WHITE_IS_MAX","L_WSHED","L_WShed","L_WallTimer","L_ZERO","L_ctermid","L_tmpnam","LeptDebugOK","LeptMsgSeverity","MaxInitPtraSize","NUMA","NUMAA","NUMA_VERSION_NUMBER","NUM_GPLOT_OUTPUTS","NUM_GPLOT_STYLES","Numa","Numaa","PDP_ENDIAN","PIX","PIXA","PIXAA","PIXAA_VERSION_NUMBER","PIXAC","PIXACC","PIXACOMP_VERSION_NUMBER","PIXA_VERSION_NUMBER","PIXC","PIXCMAP","PIXTILING","PIX_CLR","PIX_DST","PIX_MASK","PIX_PAINT","PIX_SET","PIX_SRC","PIX_XOR","PTA","PTAA","PTA_VERSION_NUMBER","PTRDIFF_MAX","PTRDIFF_MIN","P_tmpdir","Pix","PixColormap","PixComp","PixTiling","Pixa","PixaComp","Pixaa","Pixacc","Pta","Ptaa","RAND_MAX","RB_TYPE","RECOG_VERSION_NUMBER","REMOVE_CMAP_BASED_ON_SRC","REMOVE_CMAP_TO_BINARY","REMOVE_CMAP_TO_FULL_COLOR","REMOVE_CMAP_TO_GRAYSCALE","REMOVE_CMAP_WITH_ALPHA","RGBA_QUAD","RGBA_Quad","Rb_Type","SARRAY","SARRAY_VERSION_NUMBER","SEEK_CUR","SEEK_END","SEEK_SET","SEL","SELA","SEL_DONT_CARE","SEL_HIT","SEL_MISS","SEL_VERSION_NUMBER","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","SPLIT_ON_BLANK_LINE","SPLIT_ON_BOTH","SPLIT_ON_LEADING_WHITE","SYMMETRIC_MORPH_BC","Sarray","Sel","Sela","TIFF_BIGEND_ID","TIFF_LITTLEEND_ID","TMP_MAX","TRUE","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","UNDEF","UNIX_PATH_SEPCHAR","USE_BMPIO","USE_INLINE_ACCESSORS","USE_JP2KHEADER","USE_PDFIO","USE_PNMIO","USE_PSIO","WCONTINUED","WEXITED","WINT_MAX","WINT_MIN","WIN_PATH_SEPCHAR","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_STDIO_LIM_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_G_fpos64_t","_G_fpos_t","_IOFBF","_IOLBF","_IONBF","_IO_EOF_SEEN","_IO_ERR_SEEN","_IO_FILE","_IO_USER_LOCK","_IO_backup_base","_IO_buf_base","_IO_buf_end","_IO_codecvt","_IO_lock_t","_IO_marker","_IO_read_base","_IO_read_end","_IO_read_ptr","_IO_save_base","_IO_save_end","_IO_wide_data","_IO_write_base","_IO_write_end","_IO_write_ptr","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_STDIO_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__FD_SETSIZE","__FILE","__FILE_defined","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__LITTLE_ENDIAN","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_IEC_60559_BFP__","__STDC_IEC_60559_COMPLEX__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","____FILE_defined","_____fpos64_t_defined","_____fpos_t_defined","____mbstate_t_defined","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__atomic_wide_counter","__atomic_wide_counter__bindgen_ty_1","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__count","__ctype_get_mb_cur_max","__cur_writer","__daddr_t","__data","__data","__data","__data","__dev_t","__elision","__fd_mask","__fds_bits","__flags","__fpos64_t","__fpos_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g_refs","__g_signals","__g_size","__getdelim","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__have_pthread_attr_t","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__lock","__loff_t","__low","__mbstate_t","__mbstate_t__bindgen_ty_1","__mode_t","__next","__next","__nlink_t","__nusers","__off64_t","__off_t","__old_x","__once_flag","__overflow","__owner","__pad1","__pad2","__pad3","__pad4","__pad5","__pid_t","__pos","__pos","__prev","__pthread_cond_s","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__state","__state","__struct_FILE_defined","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__thrd_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__tss_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uflow","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__value","__value32","__value64","__wch","__wchb","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__x","_bindgen_ty_1","_bindgen_ty_10","_bindgen_ty_11","_bindgen_ty_12","_bindgen_ty_13","_bindgen_ty_14","_bindgen_ty_15","_bindgen_ty_16","_bindgen_ty_17","_bindgen_ty_18","_bindgen_ty_19","_bindgen_ty_2","_bindgen_ty_20","_bindgen_ty_21","_bindgen_ty_22","_bindgen_ty_23","_bindgen_ty_24","_bindgen_ty_25","_bindgen_ty_26","_bindgen_ty_27","_bindgen_ty_28","_bindgen_ty_29","_bindgen_ty_3","_bindgen_ty_30","_bindgen_ty_31","_bindgen_ty_32","_bindgen_ty_33","_bindgen_ty_34","_bindgen_ty_35","_bindgen_ty_36","_bindgen_ty_37","_bindgen_ty_38","_bindgen_ty_39","_bindgen_ty_4","_bindgen_ty_40","_bindgen_ty_41","_bindgen_ty_42","_bindgen_ty_43","_bindgen_ty_44","_bindgen_ty_45","_bindgen_ty_46","_bindgen_ty_47","_bindgen_ty_48","_bindgen_ty_49","_bindgen_ty_5","_bindgen_ty_50","_bindgen_ty_51","_bindgen_ty_52","_bindgen_ty_53","_bindgen_ty_54","_bindgen_ty_55","_bindgen_ty_56","_bindgen_ty_57","_bindgen_ty_58","_bindgen_ty_59","_bindgen_ty_6","_bindgen_ty_60","_bindgen_ty_61","_bindgen_ty_62","_bindgen_ty_63","_bindgen_ty_64","_bindgen_ty_65","_bindgen_ty_66","_bindgen_ty_67","_bindgen_ty_68","_bindgen_ty_69","_bindgen_ty_7","_bindgen_ty_70","_bindgen_ty_71","_bindgen_ty_72","_bindgen_ty_73","_bindgen_ty_74","_bindgen_ty_75","_bindgen_ty_76","_bindgen_ty_77","_bindgen_ty_78","_bindgen_ty_79","_bindgen_ty_8","_bindgen_ty_80","_bindgen_ty_81","_bindgen_ty_82","_bindgen_ty_83","_bindgen_ty_84","_bindgen_ty_85","_bindgen_ty_86","_bindgen_ty_87","_bindgen_ty_88","_bindgen_ty_89","_bindgen_ty_9","_bindgen_ty_90","_bindgen_ty_91","_bindgen_ty_92","_bindgen_ty_93","_bindgen_ty_94","_bindgen_ty_95","_bindgen_ty_96","_chain","_codecvt","_cur_column","_fileno","_flags","_flags2","_freeres_buf","_freeres_list","_lock","_markers","_mode","_offset","_old_offset","_shortbuf","_unused2","_vtable_offset","_wide_data","a64l","abort","abs","addColorizedGrayToCmap","adjacentOnPixelInRaster","affineInvertXform","affineXformPt","affineXformSampledPt","aligned_alloc","alloc_fn","alloca","alpha","amapGetCountForColor","appendSubdirs","applyCubicFit","applyLinearFit","applyQuadraticFit","applyQuarticFit","array","array","array","array","array","array","array","array","array","arrayFindEachSequence","arrayFindSequence","arrayReplaceEachSequence","arraysize","at_quick_exit","atexit","atof","atoi","atol","atoll","auxstack","ave_done","barcodeDispatchDecoder","barcodeFormatIsSupported","baseindex","baseline1","baseline2","baseline3","baselinetab","bbufferCreate","bbufferDestroy","bbufferDestroyAndSaveData","bbufferExtendArray","bbufferRead","bbufferReadStream","bbufferWrite","bbufferWriteStream","beta","bilinearXformPt","bilinearXformSampledPt","blkcnt_t","blksize_t","blue","bmf","bmfCreate","bmfDestroy","bmfGetBaseline","bmfGetLineStrings","bmfGetPix","bmfGetStringWidth","bmfGetWidth","bmfGetWordWidths","bmf_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxAdjustSides","boxBoundingRegion","boxChangeRefcount","boxClipToRectangle","boxClipToRectangleParams","boxClone","boxCompareSize","boxContains","boxContainsPt","boxConvertToPta","boxCopy","boxCreate","boxCreateValid","boxDestroy","boxEqual","boxGetCenter","boxGetGeometry","boxGetRefcount","boxGetSideLocations","boxIntersectByLine","boxIntersects","boxIsValid","boxOverlapArea","boxOverlapDistance","boxOverlapFraction","boxOverlapRegion","boxPrintStreamInfo","boxRelocateOneSide","boxRotateOrth","boxSeparationDistance","boxSetGeometry","boxSetSide","boxSetSideLocations","boxSimilar","boxTransform","boxTransformOrdered","box_","boxa","boxa","boxa","boxa","boxa","boxa","boxaAddBox","boxaAdjustBoxSides","boxaAdjustHeightToTarget","boxaAdjustSides","boxaAdjustWidthToTarget","boxaAffineTransform","boxaBinSort","boxaClear","boxaClipToBox","boxaCombineOverlaps","boxaCombineOverlapsInPair","boxaCompareRegions","boxaContainedInBox","boxaContainedInBoxCount","boxaContainedInBoxa","boxaConvertToPta","boxaCopy","boxaCreate","boxaDestroy","boxaDisplayTiled","boxaEncapsulateAligned","boxaEqual","boxaExtendArray","boxaExtendArrayToSize","boxaExtractAsNuma","boxaExtractAsPta","boxaExtractCorners","boxaExtractSortedPattern","boxaFillSequence","boxaFindInvalidBoxes","boxaFindNearestBoxes","boxaGetArea","boxaGetAverageSize","boxaGetBox","boxaGetBoxGeometry","boxaGetCount","boxaGetCoverage","boxaGetExtent","boxaGetMedianVals","boxaGetNearestByDirection","boxaGetNearestToLine","boxaGetNearestToPt","boxaGetRankVals","boxaGetSizes","boxaGetValidBox","boxaGetValidCount","boxaGetWhiteblocks","boxaHandleOverlaps","boxaInitFull","boxaInsertBox","boxaIntersectsBox","boxaIntersectsBoxCount","boxaIsFull","boxaJoin","boxaLocationRange","boxaMakeAreaIndicator","boxaMakeSizeIndicator","boxaMakeWHRatioIndicator","boxaMedianDimensions","boxaMergeEvenOdd","boxaModifyWithBoxa","boxaPermutePseudorandom","boxaPermuteRandom","boxaPlotSides","boxaPlotSizes","boxaPruneSortedOnOverlap","boxaRead","boxaReadMem","boxaReadStream","boxaReconcileAllByMedian","boxaReconcilePairWidth","boxaReconcileSidesByMedian","boxaReconcileSizeByMedian","boxaRemoveBox","boxaRemoveBoxAndSave","boxaReplaceBox","boxaRotate","boxaRotateOrth","boxaSaveValid","boxaScale","boxaSelectByArea","boxaSelectBySize","boxaSelectByWHRatio","boxaSelectLargeULBox","boxaSelectRange","boxaSelectWithIndicator","boxaSetSide","boxaShiftWithPta","boxaSimilar","boxaSizeConsistency","boxaSizeRange","boxaSizeVariation","boxaSmoothSequenceMedian","boxaSort","boxaSort2d","boxaSort2dByIndex","boxaSortByIndex","boxaSplitEvenOdd","boxaSwapBoxes","boxaTransform","boxaTransformOrdered","boxaTranslate","boxaWindowedMedian","boxaWrite","boxaWriteDebug","boxaWriteMem","boxaWriteStderr","boxaWriteStream","boxaaAddBox","boxaaAddBoxa","boxaaAlignBox","boxaaCopy","boxaaCreate","boxaaDestroy","boxaaDisplay","boxaaExtendArray","boxaaExtendArrayToSize","boxaaExtendWithInit","boxaaFlattenAligned","boxaaFlattenToBoxa","boxaaGetBox","boxaaGetBoxCount","boxaaGetBoxa","boxaaGetCount","boxaaGetExtent","boxaaInitFull","boxaaInsertBoxa","boxaaJoin","boxaaQuadtreeRegions","boxaaRead","boxaaReadFromFiles","boxaaReadMem","boxaaReadStream","boxaaRemoveBoxa","boxaaReplaceBoxa","boxaaSelectRange","boxaaSizeRange","boxaaTranspose","boxaaWrite","boxaaWriteMem","boxaaWriteStream","boxas","bps","bsearch","caddr_t","callSystemDebug","calloc","ccb","ccbCreate","ccbDestroy","ccbaAddCcb","ccbaCreate","ccbaDestroy","ccbaDisplayBorder","ccbaDisplayImage1","ccbaDisplayImage2","ccbaDisplaySPBorder","ccbaGenerateGlobalLocs","ccbaGenerateSPGlobalLocs","ccbaGenerateSinglePath","ccbaGenerateStepChains","ccbaGetCcb","ccbaGetCount","ccbaRead","ccbaReadStream","ccbaStepChainsToPixCoords","ccbaWrite","ccbaWriteSVG","ccbaWriteSVGString","ccbaWriteStream","centtab","changeFormatForMissingLib","charset_size","charset_type","check_columns","cidConvertToPdfData","cida","clearenv","clearerr","clearerr_unlocked","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmapEqual","cmapdata85","cmapdatahex","cmapflag","cmddata","cmdname","color","colormap","compareTilesByHisto","components","composeRGBAPixel","composeRGBPixel","comptype","concatenatePdf","concatenatePdfToData","convertFilesFittedToPS","convertFilesTo1bpp","convertFilesToPS","convertFilesToPdf","convertFlateToPS","convertFlateToPSEmbed","convertG4ToPS","convertG4ToPSEmbed","convertGrayCodeToInt","convertHSVToRGB","convertImageDataToPdf","convertImageDataToPdfData","convertIntToGrayCode","convertJpegToPS","convertJpegToPSEmbed","convertLABToRGB","convertLABToXYZ","convertNumberedMasksToBoxaa","convertOnBigEnd16","convertOnBigEnd32","convertOnLittleEnd16","convertOnLittleEnd32","convertPtaLineTo4cc","convertRGBToHSV","convertRGBToLAB","convertRGBToXYZ","convertRGBToYUV","convertSegmentedFilesToPdf","convertSegmentedPagesToPS","convertSepCharsInPath","convertSortedToNumberedPathnames","convertTiffMultipageToPS","convertTiffMultipageToPdf","convertToNUpFiles","convertToNUpPixa","convertToPSEmbed","convertToPdf","convertToPdfData","convertToPdfDataSegmented","convertToPdfSegmented","convertUnscaledFilesToPdf","convertUnscaledToPdfData","convertXYZToLAB","convertXYZToRGB","convertYUVToRGB","count","counta","create2dFloatArray","create2dIntArray","createMatrix2dRotate","createMatrix2dScale","createMatrix2dTranslate","ctermid","current","cx","cx","cy","cy","d","d","daddr_t","dahash","data","data","data","data","data","data","data","data","data","data85","datacomp","datanames","dealloc_fn","debug","debug","decodeAscii85","decodeAscii85WithComp","decodeBase64","delx","delx","delya","depth","descr","dev_t","dewa","dewarp","dewarpBuildLineModel","dewarpBuildPageModel","dewarpCreate","dewarpCreateRef","dewarpDebug","dewarpDestroy","dewarpFindHorizDisparity","dewarpFindHorizSlopeDisparity","dewarpFindVertDisparity","dewarpGetTextlineCenters","dewarpMinimize","dewarpPopulateFullRes","dewarpRead","dewarpReadMem","dewarpReadStream","dewarpRemoveShortLines","dewarpShowResults","dewarpSinglePage","dewarpSinglePageInit","dewarpSinglePageRun","dewarpWrite","dewarpWriteMem","dewarpWriteStream","dewarpaApplyDisparity","dewarpaApplyDisparityBoxa","dewarpaCreate","dewarpaCreateFromPixacomp","dewarpaDestroy","dewarpaDestroyDewarp","dewarpaGetDewarp","dewarpaInfo","dewarpaInsertDewarp","dewarpaInsertRefModels","dewarpaListPages","dewarpaModelStats","dewarpaModelStatus","dewarpaRead","dewarpaReadMem","dewarpaReadStream","dewarpaRestoreModels","dewarpaSetCheckColumns","dewarpaSetCurvatures","dewarpaSetMaxDistance","dewarpaSetValidModels","dewarpaShowArrays","dewarpaStripRefModels","dewarpaUseBothArrays","dewarpaWrite","dewarpaWriteMem","dewarpaWriteStream","dewarpcache","did","direction","directory","display","displayHSVColorRange","ditherToBinaryLineLow","div","div_t","dna","dna","dna_tochar","dnaa","dpixAddMultConstant","dpixChangeRefcount","dpixClone","dpixConvertToFPix","dpixConvertToPix","dpixCopy","dpixCopyResolution","dpixCreate","dpixCreateTemplate","dpixDestroy","dpixEndianByteSwap","dpixGetData","dpixGetDimensions","dpixGetMax","dpixGetMin","dpixGetPixel","dpixGetRefcount","dpixGetResolution","dpixGetWpl","dpixLinearCombination","dpixRead","dpixReadMem","dpixReadStream","dpixScaleByInteger","dpixSetAllArbitrary","dpixSetData","dpixSetDimensions","dpixSetPixel","dpixSetResolution","dpixSetWpl","dpixWrite","dpixWriteMem","dpixWriteStream","dprintf","drand48","drand48_data","drand48_r","ecvt","ecvt_r","encodeAscii85","encodeAscii85WithComp","encodeBase64","end_ptr","erand48","erand48_r","exit","extractG4DataFromFile","extractMinMaxComponent","extractNumberFromFilename","extractRGBAValues","extractRGBValues","failure","fclose","fcvt","fcvt_r","fd_mask","fd_set","fdopen","feof","feof_unlocked","ferror","ferror_unlocked","fflush","fflush_unlocked","fgetJp2kResolution","fgetJpegComment","fgetJpegResolution","fgetPngColormapInfo","fgetPngResolution","fgetc","fgetc_unlocked","fgetpos","fgets","fhmtautogen","fhmtautogen1","fhmtautogen2","fhmtgen_low_1","fileAppendString","fileConcatenate","fileCopy","fileCorruptByDeletion","fileCorruptByMutation","fileFormatIsTiff","fileReplaceBytes","fileSplitLinesUniform","fileno","fileno","fileno_unlocked","filesAreIdentical","findFileFormat","findFileFormatBuffer","findFileFormatStream","findNextLargerPrime","findTiffCompression","finished","flockfile","fmemopen","fmorphautogen","fmorphautogen1","fmorphautogen2","fmorphopgen_low_1","fmorphopgen_low_2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fnbytesInFile","fonttab","fopen","fopenReadFromMemory","fopenReadStream","fopenWriteStream","fopenWriteWinTempfile","fp","fp_offset","fpix","fpixAddBorder","fpixAddContinuedBorder","fpixAddMirroredBorder","fpixAddMultConstant","fpixAddSlopeBorder","fpixAffine","fpixAffinePta","fpixAutoRenderContours","fpixChangeRefcount","fpixClone","fpixConvertToDPix","fpixConvertToPix","fpixConvolve","fpixConvolveSep","fpixCopy","fpixCopyResolution","fpixCreate","fpixCreateTemplate","fpixDestroy","fpixDisplayMaxDynamicRange","fpixEndianByteSwap","fpixFlipLR","fpixFlipTB","fpixGetData","fpixGetDimensions","fpixGetMax","fpixGetMin","fpixGetPixel","fpixGetRefcount","fpixGetResolution","fpixGetWpl","fpixLinearCombination","fpixPrintStream","fpixProjective","fpixProjectivePta","fpixRasterop","fpixRead","fpixReadMem","fpixReadStream","fpixRemoveBorder","fpixRenderContours","fpixRotate180","fpixRotate90","fpixRotateOrth","fpixScaleByInteger","fpixSetAllArbitrary","fpixSetData","fpixSetDimensions","fpixSetPixel","fpixSetResolution","fpixSetWpl","fpixThresholdToPix","fpixWrite","fpixWriteMem","fpixWriteStream","fpixaAddFPix","fpixaChangeRefcount","fpixaConvertLABToRGB","fpixaConvertLABToXYZ","fpixaConvertXYZToLAB","fpixaConvertXYZToRGB","fpixaCopy","fpixaCreate","fpixaDestroy","fpixaDisplayQuadtree","fpixaGetCount","fpixaGetData","fpixaGetFPix","fpixaGetFPixDimensions","fpixaGetPixel","fpixaSetPixel","fpos_t","fprintTiffInfo","fprintf","fptr","fputc","fputc_unlocked","fputs","fread","freadHeaderJp2k","freadHeaderJpeg","freadHeaderPng","freadHeaderPnm","freadHeaderSpix","freadHeaderTiff","fread_unlocked","free","freopen","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fscanf1","fseek","fseeko","fsetpos","fsfilcnt_t","fsid_t","ftell","ftello","ftrylockfile","ftype","fullarrays","fullhdispar","fullvdispar","fullydispar","function","funlockfile","fwrite","fwrite_unlocked","gamma","gaussDistribSampling","gaussjordan","gcvt","genConstrainedNumaInRange","genPathname","genRandomIntOnInterval","generateBinaryMaze","generatePtaBox","generatePtaBoxa","generatePtaFilledCircle","generatePtaFilledSquare","generatePtaGrid","generatePtaHashBox","generatePtaHashBoxa","generatePtaLine","generatePtaLineFromPt","generatePtaPolyline","generatePtaWideLine","generatePtaaBoxa","generatePtaaHashBoxa","generateUncompressedPS","getAffineXformCoeffs","getBilinearXformCoeffs","getCompositeParameters","getCutPathForHole","getExtendedCompositeParameters","getFilenamesInDirectory","getFormatExtension","getImagelibVersions","getImpliedFileFormat","getLeptonicaVersion","getLogBase2","getMorphBorderPixelColor","getNumberedPathnamesInDirectory","getOctcubeIndexFromRGB","getProjectiveXformCoeffs","getRGBFromIndex","getResA4Page","getResLetterPage","getSortedPathnamesInDirectory","getTiffResolution","getc","getc_unlocked","getchar","getchar_unlocked","getdelim","getenv","getline","getloadavg","getsubopt","getw","gid_t","global","gp_offset","gplotAddPlot","gplotCreate","gplotDestroy","gplotGenCommandFile","gplotGenDataFiles","gplotGeneralPix1","gplotGeneralPix2","gplotGeneralPixN","gplotMakeOutput","gplotMakeOutputPix","gplotRead","gplotSetScaling","gplotSimple1","gplotSimple2","gplotSimpleN","gplotSimplePix1","gplotSimplePix2","gplotSimplePixN","gplotSimpleXY1","gplotSimpleXY2","gplotSimpleXYN","gplotWrite","gplotfileoutputs","gplotstylenames","grayHistogramsToEMD","grayInterHistogramStats","green","h","h","h","h","h","h","h","h","h","h","h","h","hashtab","hasref","hsuccess","hvalid","id","id_t","ifunc","imax","index","index","informat","init","initsize","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioFormatTest","isPngInterlaced","itype","jbAccumulateComposites","jbAddPage","jbAddPageComponents","jbAddPages","jbClasserCreate","jbClasserDestroy","jbClassifyCorrelation","jbClassifyRankHaus","jbCorrelation","jbCorrelationInit","jbCorrelationInitWithoutComponents","jbDataDestroy","jbDataRead","jbDataRender","jbDataSave","jbDataWrite","jbGetComponents","jbGetLLCorners","jbGetULCorners","jbRankHaus","jbRankHausInit","jbTemplatesFromComposites","jbWordsInTextlines","jrand48","jrand48_r","keep_pixaa","kernelCopy","kernelCreate","kernelCreateFromFile","kernelCreateFromPix","kernelCreateFromString","kernelDestroy","kernelDisplayInPix","kernelGetElement","kernelGetMinMax","kernelGetParameters","kernelGetSum","kernelInvert","kernelNormalize","kernelRead","kernelReadStream","kernelSetElement","kernelSetOrigin","kernelWrite","kernelWriteStream","kernwidth","key","key","key_t","keytype","l64a","l_CIDataDestroy","l_amapCreate","l_amapDelete","l_amapDestroy","l_amapFind","l_amapGetFirst","l_amapGetLast","l_amapGetNext","l_amapGetPrev","l_amapInsert","l_amapSize","l_angleBetweenVectors","l_asetCreate","l_asetCreateFromDna","l_asetCreateFromPta","l_asetCreateFromSarray","l_asetDelete","l_asetDestroy","l_asetFind","l_asetGetFirst","l_asetGetLast","l_asetGetNext","l_asetGetPrev","l_asetInsert","l_asetSize","l_binaryCompare","l_binaryCopy","l_binaryRead","l_binaryReadSelect","l_binaryReadSelectStream","l_binaryReadStream","l_binaryWrite","l_bootnum_gen1","l_bootnum_gen2","l_bootnum_gen3","l_bootnum_gen4","l_byteaAppendData","l_byteaAppendString","l_byteaCopy","l_byteaCopyData","l_byteaCreate","l_byteaDestroy","l_byteaFindEachSequence","l_byteaGetData","l_byteaGetSize","l_byteaInitFromFile","l_byteaInitFromMem","l_byteaInitFromStream","l_byteaJoin","l_byteaSplit","l_byteaWrite","l_byteaWriteStream","l_chooseDisplayProg","l_clearDataBit","l_clearDataDibit","l_clearDataQbit","l_colorfillCreate","l_colorfillDestroy","l_compressGrayHistograms","l_convertCharstrToInt","l_dnaAddNumber","l_dnaChangeRefcount","l_dnaClone","l_dnaConvertToNuma","l_dnaCopy","l_dnaCopyParameters","l_dnaCreate","l_dnaCreateFromDArray","l_dnaCreateFromIArray","l_dnaDestroy","l_dnaDiffAdjValues","l_dnaEmpty","l_dnaGetCount","l_dnaGetDArray","l_dnaGetDValue","l_dnaGetIArray","l_dnaGetIValue","l_dnaGetParameters","l_dnaGetRefcount","l_dnaHashAdd","l_dnaHashCreate","l_dnaHashDestroy","l_dnaHashGetDna","l_dnaInsertNumber","l_dnaIntersectionByAset","l_dnaIntersectionByHmap","l_dnaJoin","l_dnaMakeHistoByHmap","l_dnaMakeSequence","l_dnaRead","l_dnaReadMem","l_dnaReadStream","l_dnaRemoveDupsByAset","l_dnaRemoveDupsByHmap","l_dnaRemoveNumber","l_dnaReplaceNumber","l_dnaSelectRange","l_dnaSetCount","l_dnaSetParameters","l_dnaSetValue","l_dnaShiftValue","l_dnaUnionByAset","l_dnaUnionByHmap","l_dnaWrite","l_dnaWriteMem","l_dnaWriteStderr","l_dnaWriteStream","l_dnaaAddDna","l_dnaaAddNumber","l_dnaaCreate","l_dnaaCreateFull","l_dnaaDestroy","l_dnaaFlattenToDna","l_dnaaGetCount","l_dnaaGetDna","l_dnaaGetDnaCount","l_dnaaGetNumberCount","l_dnaaGetValue","l_dnaaRead","l_dnaaReadMem","l_dnaaReadStream","l_dnaaReplaceDna","l_dnaaTruncate","l_dnaaWrite","l_dnaaWriteMem","l_dnaaWriteStream","l_fileDisplay","l_float32","l_float64","l_generateCIData","l_generateCIDataForPdf","l_generateFlateData","l_generateFlateDataPdf","l_generateG4Data","l_generateJpegData","l_generateJpegDataMem","l_getCurrentTime","l_getDataBit","l_getDataByte","l_getDataDibit","l_getDataFourBytes","l_getDataQbit","l_getDataTwoBytes","l_getFormattedDate","l_getStructStrFromFile","l_hashFloat64ToUint64","l_hashPtToUint64","l_hashStringToUint64","l_hashStringToUint64Fast","l_hmapCreate","l_hmapCreateFromDna","l_hmapCreateFromPta","l_hmapCreateFromSarray","l_hmapDestroy","l_hmapLookup","l_hmapRehash","l_int16","l_int32","l_int64","l_int8","l_intptr_t","l_jpegSetQuality","l_makeTempFilename","l_ok","l_pdfSetDateAndVersion","l_pdfSetG4ImageMask","l_pngSetReadStrip16To8","l_productMat2","l_productMat3","l_productMat4","l_productMatVec","l_psWriteBoundingBox","l_rbtreeCreate","l_rbtreeDelete","l_rbtreeDestroy","l_rbtreeGetCount","l_rbtreeGetFirst","l_rbtreeGetLast","l_rbtreeGetNext","l_rbtreeGetPrev","l_rbtreeInsert","l_rbtreeLookup","l_rbtreePrint","l_setAlphaMaskBorder","l_setConvolveSampling","l_setDataBit","l_setDataBitVal","l_setDataByte","l_setDataDibit","l_setDataFourBytes","l_setDataQbit","l_setDataTwoBytes","l_setNeutralBoostVal","l_uint16","l_uint32","l_uint64","l_uint8","l_uintptr_t","l_uncompressGrayHistograms","labs","latticeh","latticew","lcong48","lcong48_r","ldiv","ldiv_t","left","leftcurv","leftslope","leptSetStderrHandler","lept_calloc","lept_cp","lept_direxists","lept_fclose","lept_fopen","lept_free","lept_isPrime","lept_mkdir","lept_mv","lept_rm","lept_rm_match","lept_rmdir","lept_rmfile","lept_roundftoi","lept_stderr","lheapAdd","lheapCreate","lheapDestroy","lheapGetCount","lheapGetElement","lheapPrint","lheapRemove","lheapSort","lheapSortStrictOrder","lineEndianByteSwap","linearInterpolatePixelColor","linearInterpolatePixelFloat","linearInterpolatePixelGray","linearScaleRGBVal","lineheight","linelab32","linem1","lines8","linet1","linew","links","listAddToHead","listAddToTail","listDestroy","listFindElement","listFindTail","listGetCount","listInsertAfter","listInsertBefore","listJoin","listRemoveElement","listRemoveFromHead","listRemoveFromTail","listReverse","llabs","lldiv","lldiv_t","local","locatePtRadially","locs","loff_t","logScaleRGBVal","lqueueAdd","lqueueCreate","lqueueDestroy","lqueueGetCount","lqueuePrint","lqueueRemove","lrand48","lrand48_r","lstackAdd","lstackCreate","lstackDestroy","lstackGetCount","lstackPrint","lstackRemove","lut","makeColorfillTestData","makeDoGKernel","makeFlatKernel","makeGaussianKernel","makeGaussianKernelSep","makeGrayQuantIndexTable","makeGrayQuantTableArb","makeLogBase2Tab","makeMSBitLocTab","makeMosaicStrips","makeOrientDecision","makePixelCentroidTab8","makePixelSumTab8","makePlotPtaFromNuma","makePlotPtaFromNumaGen","makeRGBIndexTables","makeRGBToIndexTables","makeRangeKernel","makeSubsampleTab2x","makeTempDirname","malloc","max_diff_edgecurv","max_diff_linecurv","max_edgecurv","max_edgeslope","max_ht_ratio","max_linecurv","max_splith","max_wh_ratio","maxarraysize","maxcurv","maxdist","maxheight","maxheight_u","maxocc","maxpage","maxwidth","maxwidth","maxwidth_u","maxyshift","mblen","mbstowcs","mbtowc","mediabox","method","min_diff_linecurv","min_nopad","min_splitw","minarea","mincurv","mindepth","minheight_u","minisblack","minlines","minlines","minwidth","minwidth_u","mkdtemp","mkstemp","mkstemps","mktemp","mode","mode_t","modelsready","modifyTrailingSlash","morphSequenceVerify","mrand48","mrand48_r","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","n","naa","naarea","naasum","naasum_u","naclass","naclass","nacomps","nactual","nacurves","nadely","nadely_r","nafgt","naindex","nalevels","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","nalloc","name","namh","namidys","namodels","namoment","napage","napage","napages","narray","nasample","nasample_r","nascore","nascore","nascore_r","nash","nasi","nasum","nasum","nasum_u","natempl","natempl_r","nawidth","nawidth","nawidth_r","naxloc","naxloc","naxloc_r","nayloc","nbuckets","nbytes","nbytes85","nbytesInFile","nbytescomp","nclass","nclass","ncmap","ncolors","nelem","next","next","nextOnPixelInRaster","nguess","nhead","nitems","nlines","nlink_t","nother","npages","npages","nplots","nrand48","nrand48_r","nseeds","ntogo","num","num_samples","numa","numaAddBorder","numaAddNumber","numaAddSorted","numaAddSpecifiedBorder","numaAddToNumber","numaArithOp","numaBinSort","numaChangeRefcount","numaChooseSortType","numaClipToInterval","numaClone","numaClose","numaContrastTRC","numaConvertToDna","numaConvertToInt","numaConvertToPta1","numaConvertToPta2","numaConvertToSarray","numaCopy","numaCopyParameters","numaCountNonzeroRuns","numaCountReversals","numaCreate","numaCreateFromFArray","numaCreateFromIArray","numaCreateFromString","numaCrossingsByPeaks","numaCrossingsByThreshold","numaDestroy","numaDifferentiateInterval","numaDilate","numaDiscretizeHistoInBins","numaDiscretizeSortedInBins","numaEarthMoverDistance","numaEmpty","numaEqualizeTRC","numaErode","numaEvalBestHaarParameters","numaEvalHaarSum","numaFindExtrema","numaFindLocForThreshold","numaFindPeaks","numaFindSortedLoc","numaFitMax","numaGammaTRC","numaGetBinSortIndex","numaGetBinnedMedian","numaGetCount","numaGetCountRelativeToZero","numaGetEdgeValues","numaGetFArray","numaGetFValue","numaGetHistogramStats","numaGetHistogramStatsOnInterval","numaGetIArray","numaGetIValue","numaGetMax","numaGetMean","numaGetMeanAbsval","numaGetMeanDevFromMedian","numaGetMedian","numaGetMedianDevFromMedian","numaGetMin","numaGetMode","numaGetNonzeroRange","numaGetParameters","numaGetPartialSums","numaGetRankBinValues","numaGetRankValue","numaGetRefcount","numaGetSortIndex","numaGetSpanValues","numaGetStatsUsingHistogram","numaGetSum","numaGetSumOnInterval","numaGetUniformBinSizes","numaHasOnlyIntegers","numaHistogramGetRankFromVal","numaHistogramGetValFromRank","numaInsertNumber","numaIntegrateInterval","numaInterpolateArbxInterval","numaInterpolateArbxVal","numaInterpolateEqxInterval","numaInterpolateEqxVal","numaInvert","numaInvertMap","numaIsSorted","numaJoin","numaLogicalOp","numaLowPassIntervals","numaMakeAbsval","numaMakeConstant","numaMakeDelta","numaMakeHistogram","numaMakeHistogramAuto","numaMakeHistogramClipped","numaMakeRankFromHistogram","numaMakeSequence","numaMakeThresholdIndicator","numaNormalizeHistogram","numaOpen","numaPseudorandomSequence","numaQuantizeCrossingsByWidth","numaQuantizeCrossingsByWindow","numaRandomPermutation","numaRead","numaReadMem","numaReadStream","numaRebinHistogram","numaRemoveBorder","numaRemoveNumber","numaReplaceNumber","numaReverse","numaSelectCrossingThreshold","numaSetCount","numaSetParameters","numaSetValue","numaShiftValue","numaSimilar","numaSimpleStats","numaSort","numaSortAutoSelect","numaSortByIndex","numaSortGeneral","numaSortIndexAutoSelect","numaSortPair","numaSplitDistribution","numaSubsample","numaThresholdEdges","numaTransform","numaUniformSampling","numaWindowedMean","numaWindowedMeanSquare","numaWindowedMedian","numaWindowedStats","numaWindowedVariance","numaWrite","numaWriteDebug","numaWriteMem","numaWriteStderr","numaWriteStream","numaaAddNuma","numaaAddNumber","numaaCompareImagesByBoxes","numaaCreate","numaaCreateFull","numaaDestroy","numaaFlattenToNuma","numaaGetCount","numaaGetNuma","numaaGetNumaCount","numaaGetNumberCount","numaaGetPtrArray","numaaGetValue","numaaJoin","numaaRead","numaaReadMem","numaaReadStream","numaaReplaceNuma","numaaTruncate","numaaWrite","numaaWriteMem","numaaWriteStream","nwritten","nx","nx","nx","ny","ny","ny","obj1","obj2","obj3","obj4","obj5","objloc","objsize","off_t","offset","offset","on_exit","open_memstream","outformat","outname","overflow_arg_area","pageno","parent","parseForProtos","parseStringForNumbers","partifyFiles","partifyPixac","pathJoin","pclose","perror","pid_t","pix","pix","pix","pix","pix","pix","pixAbsDiffByColumn","pixAbsDiffByRow","pixAbsDiffInRect","pixAbsDiffOnLine","pixAbsDifference","pixAccumulate","pixAdaptThresholdToBinary","pixAdaptThresholdToBinaryGen","pixAddAlphaTo1bpp","pixAddAlphaToBlend","pixAddBlackOrWhiteBorder","pixAddBorder","pixAddBorderGeneral","pixAddConstantGray","pixAddContinuedBorder","pixAddGaussianNoise","pixAddGray","pixAddGrayColormap8","pixAddMinimalGrayColormap8","pixAddMirroredBorder","pixAddMixedBorder","pixAddRGB","pixAddRepeatedBorder","pixAddSingleTextblock","pixAddText","pixAddTextlines","pixAddWithIndicator","pixAffine","pixAffineColor","pixAffineGray","pixAffinePta","pixAffinePtaColor","pixAffinePtaGray","pixAffinePtaWithAlpha","pixAffineSampled","pixAffineSampledPta","pixAffineSequential","pixAlphaBlendUniform","pixAlphaIsOpaque","pixAnd","pixApplyInvBackgroundGrayMap","pixApplyInvBackgroundRGBMap","pixApplyVariableGrayMap","pixAssignToNearestColor","pixAutoPhotoinvert","pixAverageByColumn","pixAverageByRow","pixAverageInRect","pixAverageInRectRGB","pixAverageIntensityProfile","pixAverageOnLine","pixBackgroundNorm","pixBackgroundNormFlex","pixBackgroundNormGrayArray","pixBackgroundNormGrayArrayMorph","pixBackgroundNormMorph","pixBackgroundNormRGBArrays","pixBackgroundNormRGBArraysMorph","pixBackgroundNormSimple","pixBestCorrelation","pixBilateral","pixBilateralExact","pixBilateralGray","pixBilateralGrayExact","pixBilinear","pixBilinearColor","pixBilinearGray","pixBilinearPta","pixBilinearPtaColor","pixBilinearPtaGray","pixBilinearPtaWithAlpha","pixBilinearSampled","pixBilinearSampledPta","pixBlend","pixBlendBackgroundToColor","pixBlendBoxaRandom","pixBlendCmap","pixBlendColor","pixBlendColorByChannel","pixBlendGray","pixBlendGrayAdapt","pixBlendGrayInverse","pixBlendHardLight","pixBlendInRect","pixBlendMask","pixBlendWithGrayMask","pixBlockBilateralExact","pixBlockconv","pixBlockconvAccum","pixBlockconvGray","pixBlockconvGrayTile","pixBlockconvGrayUnnormalized","pixBlockconvTiled","pixBlockrank","pixBlocksum","pixCensusTransform","pixCentroid","pixCentroid8","pixChangeRefcount","pixChooseOutputFormat","pixCleanBackgroundToWhite","pixCleanupByteProcessing","pixClearAll","pixClearInRect","pixClearPixel","pixClipBoxToEdges","pixClipBoxToForeground","pixClipMasked","pixClipRectangle","pixClipRectangleWithBorder","pixClipRectangles","pixClipToForeground","pixClone","pixClose","pixCloseBrick","pixCloseBrickDwa","pixCloseCompBrick","pixCloseCompBrickDwa","pixCloseCompBrickExtendDwa","pixCloseGeneralized","pixCloseGray","pixCloseGray3","pixCloseSafe","pixCloseSafeBrick","pixCloseSafeCompBrick","pixColorContent","pixColorContentByLocation","pixColorFill","pixColorFraction","pixColorGray","pixColorGrayCmap","pixColorGrayMasked","pixColorGrayMaskedCmap","pixColorGrayRegions","pixColorGrayRegionsCmap","pixColorMagnitude","pixColorMorph","pixColorMorphSequence","pixColorSegment","pixColorSegmentClean","pixColorSegmentCluster","pixColorSegmentRemoveColors","pixColorShiftRGB","pixColorShiftWhitePoint","pixColorizeGray","pixColorsForQuantization","pixColumnStats","pixCombineMasked","pixCombineMaskedGeneral","pixCompareBinary","pixCompareGray","pixCompareGrayByHisto","pixCompareGrayOrRGB","pixComparePhotoRegionsByHisto","pixCompareRGB","pixCompareRankDifference","pixCompareTiled","pixCompareWithTranslation","pixComponentFunction","pixConformsToRectangle","pixConnComp","pixConnCompAreaTransform","pixConnCompBB","pixConnCompIncrAdd","pixConnCompIncrInit","pixConnCompPixa","pixConnCompTransform","pixContrastNorm","pixContrastTRC","pixContrastTRCMasked","pixConvert16To8","pixConvert1To16","pixConvert1To2","pixConvert1To2Cmap","pixConvert1To32","pixConvert1To4","pixConvert1To4Cmap","pixConvert1To8","pixConvert1To8Cmap","pixConvert24To32","pixConvert2To8","pixConvert32To16","pixConvert32To24","pixConvert32To8","pixConvert4To8","pixConvert8To16","pixConvert8To2","pixConvert8To32","pixConvert8To4","pixConvertCmapTo1","pixConvertColorToSubpixelRGB","pixConvertDataToDna","pixConvertForPSWrap","pixConvertGrayToColormap","pixConvertGrayToColormap8","pixConvertGrayToFalseColor","pixConvertGrayToSubpixelRGB","pixConvertHSVToRGB","pixConvertLossless","pixConvertRGBToBinaryArb","pixConvertRGBToCmapLossless","pixConvertRGBToColormap","pixConvertRGBToGray","pixConvertRGBToGrayArb","pixConvertRGBToGrayFast","pixConvertRGBToGrayGeneral","pixConvertRGBToGrayMinMax","pixConvertRGBToGraySatBoost","pixConvertRGBToHSV","pixConvertRGBToHue","pixConvertRGBToLAB","pixConvertRGBToLuminance","pixConvertRGBToSaturation","pixConvertRGBToValue","pixConvertRGBToXYZ","pixConvertRGBToYUV","pixConvertTo1","pixConvertTo16","pixConvertTo1Adaptive","pixConvertTo1BySampling","pixConvertTo2","pixConvertTo32","pixConvertTo32BySampling","pixConvertTo4","pixConvertTo8","pixConvertTo8BySampling","pixConvertTo8Colormap","pixConvertTo8Or32","pixConvertToDPix","pixConvertToFPix","pixConvertToPdf","pixConvertToPdfData","pixConvertToPdfDataSegmented","pixConvertToPdfSegmented","pixConvertToSubpixelRGB","pixConvertYUVToRGB","pixConvolve","pixConvolveRGB","pixConvolveRGBSep","pixConvolveSep","pixConvolveWithBias","pixCopy","pixCopyBorder","pixCopyColormap","pixCopyDimensions","pixCopyInputFormat","pixCopyRGBComponent","pixCopyResolution","pixCopySpp","pixCopyText","pixCopyWithBoxa","pixCorrelationBinary","pixCorrelationScore","pixCorrelationScoreShifted","pixCorrelationScoreSimple","pixCorrelationScoreThresholded","pixCountArbInRect","pixCountByColumn","pixCountByRow","pixCountConnComp","pixCountPixels","pixCountPixelsByColumn","pixCountPixelsByRow","pixCountPixelsInRect","pixCountPixelsInRow","pixCountRGBColors","pixCountRGBColorsByHash","pixCountTextColumns","pixCreate","pixCreateFromPixcomp","pixCreateHeader","pixCreateNoInit","pixCreateRGBImage","pixCreateTemplate","pixCreateTemplateNoInit","pixCreateWithCmap","pixCropAlignedToCentroid","pixCropToMatch","pixCropToSize","pixDarkenGray","pixDecideIfPhotoImage","pixDecideIfTable","pixDecideIfText","pixDeserializeFromMemory","pixDeskew","pixDeskewBarcode","pixDeskewBoth","pixDeskewGeneral","pixDeskewLocal","pixDestroy","pixDestroyColormap","pixDilate","pixDilateBrick","pixDilateBrickDwa","pixDilateCompBrick","pixDilateCompBrickDwa","pixDilateCompBrickExtendDwa","pixDilateGray","pixDilateGray3","pixDisplay","pixDisplayColorArray","pixDisplayDiffBinary","pixDisplayHitMissSel","pixDisplayLayersRGBA","pixDisplayMatchedPattern","pixDisplayPta","pixDisplayPtaPattern","pixDisplayPtaa","pixDisplayPtaaPattern","pixDisplaySelectedPixels","pixDisplayWithTitle","pixDisplayWrite","pixDistanceFunction","pixDitherTo2bpp","pixDitherTo2bppSpec","pixDitherToBinary","pixDitherToBinarySpec","pixDrawBoxa","pixDrawBoxaRandom","pixEmbedForRotation","pixEndianByteSwap","pixEndianByteSwapNew","pixEndianTwoByteSwap","pixEndianTwoByteSwapNew","pixEqual","pixEqualWithAlpha","pixEqualWithCmap","pixEqualizeTRC","pixErode","pixErodeBrick","pixErodeBrickDwa","pixErodeCompBrick","pixErodeCompBrickDwa","pixErodeCompBrickExtendDwa","pixErodeGray","pixErodeGray3","pixEstimateBackground","pixExpandBinaryPower2","pixExpandBinaryReplicate","pixExpandReplicate","pixExtendByReplication","pixExtractBarcodeCrossings","pixExtractBarcodeWidths1","pixExtractBarcodeWidths2","pixExtractBarcodes","pixExtractBorderConnComps","pixExtractBoundary","pixExtractData","pixExtractOnLine","pixExtractRawTextlines","pixExtractTextlines","pixFHMTGen_1","pixFMorphopGen_1","pixFMorphopGen_2","pixFadeWithGray","pixFastTophat","pixFewColorsMedianCutQuantMixed","pixFewColorsOctcubeQuant1","pixFewColorsOctcubeQuant2","pixFewColorsOctcubeQuantMixed","pixFillBgFromBorder","pixFillClosedBorders","pixFillHolesToBoundingRect","pixFillMapHoles","pixFillPolygon","pixFilterComponentBySize","pixFinalAccumulate","pixFinalAccumulateThreshold","pixFindAreaFraction","pixFindAreaFractionMasked","pixFindAreaPerimRatio","pixFindBaselines","pixFindCheckerboardCorners","pixFindColorRegions","pixFindCornerPixels","pixFindDifferentialSquareSum","pixFindEqualValues","pixFindHistoPeaksHSV","pixFindHorizontalRuns","pixFindLargeRectangles","pixFindLargestRectangle","pixFindMaxHorizontalRunOnLine","pixFindMaxRuns","pixFindMaxVerticalRunOnLine","pixFindNormalizedSquareSum","pixFindOverlapFraction","pixFindPageForeground","pixFindPerimSizeRatio","pixFindPerimToAreaRatio","pixFindRectangleComps","pixFindRectangleInCC","pixFindRepCloseTile","pixFindSkew","pixFindSkewAndDeskew","pixFindSkewOrthogonalRange","pixFindSkewSweep","pixFindSkewSweepAndSearch","pixFindSkewSweepAndSearchScore","pixFindSkewSweepAndSearchScorePivot","pixFindStrokeLength","pixFindStrokeWidth","pixFindThreshFgExtent","pixFindVerticalRuns","pixFindWordAndCharacterBoxes","pixFixedOctcubeQuant256","pixFixedOctcubeQuantGenRGB","pixFlipLR","pixFlipPixel","pixFlipTB","pixForegroundFraction","pixFractionFgInMask","pixFreeData","pixGammaTRC","pixGammaTRCMasked","pixGammaTRCWithAlpha","pixGenHalftoneMask","pixGenPhotoHistos","pixGenTextblockMask","pixGenTextlineMask","pixGenerateCIData","pixGenerateFromPta","pixGenerateHalftoneMask","pixGenerateMaskByBand","pixGenerateMaskByBand32","pixGenerateMaskByDiscr32","pixGenerateMaskByValue","pixGeneratePtaBoundary","pixGenerateSelBoundary","pixGenerateSelRandom","pixGenerateSelWithRuns","pixGetAllCCBorders","pixGetAutoFormat","pixGetAverageMasked","pixGetAverageMaskedRGB","pixGetAverageTiled","pixGetAverageTiledRGB","pixGetBackgroundGrayMap","pixGetBackgroundGrayMapMorph","pixGetBackgroundRGBMap","pixGetBackgroundRGBMapMorph","pixGetBinnedColor","pixGetBinnedComponentRange","pixGetBlackOrWhiteVal","pixGetCmapHistogram","pixGetCmapHistogramInRect","pixGetCmapHistogramMasked","pixGetColorAmapHistogram","pixGetColorHistogram","pixGetColorHistogramMasked","pixGetColorNearMaskBoundary","pixGetColormap","pixGetColumnStats","pixGetData","pixGetDepth","pixGetDifferenceHistogram","pixGetDifferenceStats","pixGetDimensions","pixGetEdgeProfile","pixGetExtremeValue","pixGetGrayHistogram","pixGetGrayHistogramInRect","pixGetGrayHistogramMasked","pixGetGrayHistogramTiled","pixGetHeight","pixGetInputFormat","pixGetInvBackgroundMap","pixGetLastOffPixelInRun","pixGetLastOnPixelInRun","pixGetLinePtrs","pixGetLocalSkewAngles","pixGetLocalSkewTransform","pixGetMaxColorIndex","pixGetMaxValueInRect","pixGetMomentByColumn","pixGetMostPopulatedColors","pixGetOuterBorder","pixGetOuterBordersPtaa","pixGetPSNR","pixGetPerceptualDiff","pixGetPixel","pixGetPixelAverage","pixGetPixelStats","pixGetRGBComponent","pixGetRGBComponentCmap","pixGetRGBHistogram","pixGetRGBLine","pixGetRGBPixel","pixGetRandomPixel","pixGetRangeValues","pixGetRankColorArray","pixGetRankValue","pixGetRankValueMasked","pixGetRankValueMaskedRGB","pixGetRasterData","pixGetRefcount","pixGetRegionsBinary","pixGetResolution","pixGetRowStats","pixGetRunCentersOnLine","pixGetRunsOnLine","pixGetSortedNeighborValues","pixGetSpp","pixGetText","pixGetTextCompNew","pixGetTileCount","pixGetWidth","pixGetWordBoxesInTextlines","pixGetWordsInTextlines","pixGetWpl","pixGetXRes","pixGetYRes","pixGlobalNormNoSatRGB","pixGlobalNormRGB","pixGrayMorphSequence","pixGrayQuantFromCmap","pixGrayQuantFromHisto","pixHDome","pixHMT","pixHMTDwa_1","pixHShear","pixHShearCenter","pixHShearCorner","pixHShearIP","pixHShearLI","pixHalfEdgeByBandpass","pixHasHighlightRed","pixHaustest","pixHolesByFilling","pixInferResolution","pixInitAccumulate","pixIntersectionOfMorphOps","pixInvert","pixItalicWords","pixLinearEdgeFade","pixLinearMapToTargetColor","pixLocToColorTransform","pixLocalExtrema","pixLocateBarcodes","pixMakeAlphaFromMask","pixMakeArbMaskFromRGB","pixMakeColorSquare","pixMakeCoveringOfRectangles","pixMakeFrameMask","pixMakeGamutRGB","pixMakeHistoHS","pixMakeHistoHV","pixMakeHistoSV","pixMakeMaskFromLUT","pixMakeMaskFromVal","pixMakeRangeMaskHS","pixMakeRangeMaskHV","pixMakeRangeMaskSV","pixMakeSymmetricMask","pixMapWithInvariantHue","pixMaskBoxa","pixMaskConnComp","pixMaskOverColorPixels","pixMaskOverColorRange","pixMaskOverGrayPixels","pixMaskedThreshOnBackgroundNorm","pixMaxAspectRatio","pixMaxDynamicRange","pixMaxDynamicRangeRGB","pixMeanInRectangle","pixMeanSquareAccum","pixMeasureEdgeSmoothness","pixMeasureSaturation","pixMedianCutHisto","pixMedianCutQuant","pixMedianCutQuantGeneral","pixMedianCutQuantMixed","pixMedianFilter","pixMinMaxNearLine","pixMinOrMax","pixMirrorDetect","pixMirroredTiling","pixModifyBrightness","pixModifyHue","pixModifySaturation","pixModifyStrokeWidth","pixMorphCompSequence","pixMorphCompSequenceDwa","pixMorphDwa_1","pixMorphDwa_2","pixMorphGradient","pixMorphSequence","pixMorphSequenceByComponent","pixMorphSequenceByRegion","pixMorphSequenceDwa","pixMorphSequenceMasked","pixMosaicColorShiftRGB","pixMultConstAccumulate","pixMultConstantColor","pixMultConstantGray","pixMultMatrixColor","pixMultiplyByColor","pixMultiplyGray","pixNumColors","pixNumSignificantGrayColors","pixNumberOccupiedOctcubes","pixOctcubeHistogram","pixOctcubeQuantFromCmap","pixOctcubeQuantMixedWithGray","pixOctreeColorQuant","pixOctreeColorQuantGeneral","pixOctreeQuantByPopulation","pixOctreeQuantNumColors","pixOpen","pixOpenBrick","pixOpenBrickDwa","pixOpenCompBrick","pixOpenCompBrickDwa","pixOpenCompBrickExtendDwa","pixOpenGeneralized","pixOpenGray","pixOpenGray3","pixOr","pixOrientCorrect","pixOrientDetect","pixOtsuAdaptiveThreshold","pixOtsuThreshOnBackgroundNorm","pixPadToCenterCentroid","pixPaintBoxa","pixPaintBoxaRandom","pixPaintSelfThroughMask","pixPaintThroughMask","pixPlotAlongPta","pixPrepare1bpp","pixPrintStreamInfo","pixProcessBarcodes","pixProjective","pixProjectiveColor","pixProjectiveGray","pixProjectivePta","pixProjectivePtaColor","pixProjectivePtaGray","pixProjectivePtaWithAlpha","pixProjectiveSampled","pixProjectiveSampledPta","pixQuadraticVShear","pixQuadraticVShearLI","pixQuadraticVShearSampled","pixQuadtreeMean","pixQuadtreeVariance","pixQuantFromCmap","pixQuantizeIfFewColors","pixRandomHarmonicWarp","pixRankBinByStrip","pixRankColumnTransform","pixRankFilter","pixRankFilterGray","pixRankFilterRGB","pixRankFilterWithScaling","pixRankHaustest","pixRankRowTransform","pixRasterop","pixRasteropFullImage","pixRasteropHip","pixRasteropIP","pixRasteropVip","pixRead","pixReadBarcodeWidths","pixReadBarcodes","pixReadFromMultipageTiff","pixReadHeader","pixReadHeaderMem","pixReadIndexed","pixReadJp2k","pixReadJpeg","pixReadMem","pixReadMemBmp","pixReadMemFromMultipageTiff","pixReadMemGif","pixReadMemJp2k","pixReadMemJpeg","pixReadMemPng","pixReadMemPnm","pixReadMemSpix","pixReadMemTiff","pixReadMemWebP","pixReadStream","pixReadStreamBmp","pixReadStreamGif","pixReadStreamJp2k","pixReadStreamJpeg","pixReadStreamPng","pixReadStreamPnm","pixReadStreamSpix","pixReadStreamTiff","pixReadStreamWebP","pixReadTiff","pixReadWithHint","pixReduceBinary2","pixReduceRankBinary2","pixReduceRankBinaryCascade","pixRemoveAlpha","pixRemoveBorder","pixRemoveBorderConnComps","pixRemoveBorderGeneral","pixRemoveBorderToSize","pixRemoveColormap","pixRemoveColormapGeneral","pixRemoveMatchedPattern","pixRemoveSeededComponents","pixRemoveUnusedColors","pixRemoveWithIndicator","pixRenderBox","pixRenderBoxArb","pixRenderBoxBlend","pixRenderBoxa","pixRenderBoxaArb","pixRenderBoxaBlend","pixRenderContours","pixRenderGridArb","pixRenderHashBox","pixRenderHashBoxArb","pixRenderHashBoxBlend","pixRenderHashBoxa","pixRenderHashBoxaArb","pixRenderHashBoxaBlend","pixRenderHashMaskArb","pixRenderLine","pixRenderLineArb","pixRenderLineBlend","pixRenderPlotFromNuma","pixRenderPlotFromNumaGen","pixRenderPolygon","pixRenderPolyline","pixRenderPolylineArb","pixRenderPolylineBlend","pixRenderPta","pixRenderPtaArb","pixRenderPtaBlend","pixRenderRandomCmapPtaa","pixResizeImageData","pixResizeToMatch","pixReversalProfile","pixRotate","pixRotate180","pixRotate2Shear","pixRotate3Shear","pixRotate90","pixRotateAM","pixRotateAMColor","pixRotateAMColorCorner","pixRotateAMColorFast","pixRotateAMCorner","pixRotateAMGray","pixRotateAMGrayCorner","pixRotateBinaryNice","pixRotateBySampling","pixRotateOrth","pixRotateShear","pixRotateShearCenter","pixRotateShearCenterIP","pixRotateShearIP","pixRotateWithAlpha","pixRowStats","pixRunHistogramMorph","pixRunlengthTransform","pixSauvolaBinarize","pixSauvolaBinarizeTiled","pixSauvolaOnContrastNorm","pixScale","pixScaleAndTransferAlpha","pixScaleAreaMap","pixScaleAreaMap2","pixScaleAreaMapToSize","pixScaleBinary","pixScaleByIntSampling","pixScaleBySampling","pixScaleBySamplingToSize","pixScaleColor2xLI","pixScaleColor4xLI","pixScaleColorLI","pixScaleGeneral","pixScaleGray2xLI","pixScaleGray2xLIDither","pixScaleGray2xLIThresh","pixScaleGray4xLI","pixScaleGray4xLIDither","pixScaleGray4xLIThresh","pixScaleGrayLI","pixScaleGrayMinMax","pixScaleGrayMinMax2","pixScaleGrayRank2","pixScaleGrayRankCascade","pixScaleGrayToBinaryFast","pixScaleLI","pixScaleMipmap","pixScaleRGBToBinaryFast","pixScaleRGBToGray2","pixScaleRGBToGrayFast","pixScaleResolution","pixScaleSmooth","pixScaleSmoothToSize","pixScaleToGray","pixScaleToGray16","pixScaleToGray2","pixScaleToGray3","pixScaleToGray4","pixScaleToGray6","pixScaleToGray8","pixScaleToGrayFast","pixScaleToGrayMipmap","pixScaleToResolution","pixScaleToSize","pixScaleToSizeRel","pixScaleWithAlpha","pixScanForEdge","pixScanForForeground","pixSearchBinaryMaze","pixSearchGrayMaze","pixSeedfill","pixSeedfill4","pixSeedfill4BB","pixSeedfill8","pixSeedfill8BB","pixSeedfillBB","pixSeedfillBinary","pixSeedfillBinaryRestricted","pixSeedfillGray","pixSeedfillGrayBasin","pixSeedfillGrayInv","pixSeedfillGrayInvSimple","pixSeedfillGraySimple","pixSeedfillMorph","pixSeedspread","pixSelectByArea","pixSelectByAreaFraction","pixSelectByPerimSizeRatio","pixSelectByPerimToAreaRatio","pixSelectBySize","pixSelectByWidthHeightRatio","pixSelectComponentBySize","pixSelectLargeULComp","pixSelectMinInConnComp","pixSelectedLocalExtrema","pixSelectiveConnCompFill","pixSerializeToMemory","pixSetAll","pixSetAllArbitrary","pixSetAllGray","pixSetAlphaOverWhite","pixSetBlackOrWhite","pixSetBlackOrWhiteBoxa","pixSetBorderRingVal","pixSetBorderVal","pixSetChromaSampling","pixSetCmapPixel","pixSetColormap","pixSetComponentArbitrary","pixSetData","pixSetDepth","pixSetDimensions","pixSetHeight","pixSetInRect","pixSetInRectArbitrary","pixSetInputFormat","pixSetMasked","pixSetMaskedCmap","pixSetMaskedGeneral","pixSetMirroredBorder","pixSetOrClearBorder","pixSetPadBits","pixSetPadBitsBand","pixSetPixel","pixSetPixelColumn","pixSetRGBComponent","pixSetRGBPixel","pixSetResolution","pixSetSelectCmap","pixSetSelectMaskedCmap","pixSetSpecial","pixSetSpp","pixSetStrokeWidth","pixSetText","pixSetTextCompNew","pixSetTextblock","pixSetTextline","pixSetUnderTransparency","pixSetWidth","pixSetWpl","pixSetXRes","pixSetYRes","pixSetZlibCompression","pixSetupByteProcessing","pixShiftAndTransferAlpha","pixShiftByComponent","pixSimpleCaptcha","pixSimpleColorQuantize","pixSizesEqual","pixSmoothConnectedRegions","pixSnapColor","pixSnapColorCmap","pixSobelEdgeFilter","pixSplitComponentIntoBoxa","pixSplitComponentWithProfile","pixSplitDistributionFgBg","pixSplitIntoBoxa","pixSplitIntoCharacters","pixStereoFromPair","pixStretchHorizontal","pixStretchHorizontalLI","pixStretchHorizontalSampled","pixStrokeWidthTransform","pixSubsampleBoundaryPixels","pixSubtract","pixSubtractGray","pixSwapAndDestroy","pixTRCMap","pixTRCMapGeneral","pixTestClipToForeground","pixTestForSimilarity","pixThinConnected","pixThinConnectedBySet","pixThreshOnDoubleNorm","pixThreshold8","pixThresholdByConnComp","pixThresholdByHisto","pixThresholdForFgBg","pixThresholdGrayArb","pixThresholdOn8bpp","pixThresholdPixelSum","pixThresholdSpreadNorm","pixThresholdTo2bpp","pixThresholdTo4bpp","pixThresholdToBinary","pixThresholdToValue","pixTilingCreate","pixTilingDestroy","pixTilingGetCount","pixTilingGetSize","pixTilingGetTile","pixTilingNoStripOnPaint","pixTilingPaintTile","pixTophat","pixTransferAllData","pixTranslate","pixTwoSidedEdgeFilter","pixUnionOfMorphOps","pixUnpackBinary","pixUnsharpMasking","pixUnsharpMaskingFast","pixUnsharpMaskingGray","pixUnsharpMaskingGray1D","pixUnsharpMaskingGray2D","pixUnsharpMaskingGrayFast","pixUpDownDetect","pixUsesCmapColor","pixVShear","pixVShearCenter","pixVShearCorner","pixVShearIP","pixVShearLI","pixVarThresholdToBinary","pixVarianceByColumn","pixVarianceByRow","pixVarianceInRect","pixVarianceInRectangle","pixWarpStereoscopic","pixWindowedMean","pixWindowedMeanSquare","pixWindowedStats","pixWindowedVariance","pixWindowedVarianceOnLine","pixWordBoxesByDilation","pixWordMaskByDilation","pixWrite","pixWriteAutoFormat","pixWriteCompressedToPS","pixWriteDebug","pixWriteImpliedFormat","pixWriteJp2k","pixWriteJpeg","pixWriteMem","pixWriteMemBmp","pixWriteMemGif","pixWriteMemJp2k","pixWriteMemJpeg","pixWriteMemPS","pixWriteMemPam","pixWriteMemPdf","pixWriteMemPng","pixWriteMemPnm","pixWriteMemSpix","pixWriteMemTiff","pixWriteMemTiffCustom","pixWriteMemWebP","pixWriteMixedToPS","pixWritePSEmbed","pixWritePng","pixWriteSegmentedPageToPS","pixWriteStream","pixWriteStreamAsciiPnm","pixWriteStreamBmp","pixWriteStreamGif","pixWriteStreamJp2k","pixWriteStreamJpeg","pixWriteStreamPS","pixWriteStreamPam","pixWriteStreamPdf","pixWriteStreamPng","pixWriteStreamPnm","pixWriteStreamSpix","pixWriteStreamTiff","pixWriteStreamTiffWA","pixWriteStreamWebP","pixWriteStringPS","pixWriteTiff","pixWriteTiffCustom","pixWriteWebP","pixXor","pixZero","pixa","pixa","pixa","pixaAccumulateSamples","pixaAddBorderGeneral","pixaAddBox","pixaAddPix","pixaAddPixWithText","pixaAddTextNumber","pixaAddTextlines","pixaAnyColormaps","pixaBinSort","pixaCentroids","pixaChangeRefcount","pixaClear","pixaClipToForeground","pixaClipToPix","pixaCompareInPdf","pixaComparePhotoRegionsByHisto","pixaConstrainedSelect","pixaConvertTo1","pixaConvertTo32","pixaConvertTo8","pixaConvertTo8Colormap","pixaConvertToGivenDepth","pixaConvertToNUpPixa","pixaConvertToPdf","pixaConvertToPdfData","pixaConvertToSameDepth","pixaCopy","pixaCountPixels","pixaCountText","pixaCreate","pixaCreateFromBoxa","pixaCreateFromPix","pixaCreateFromPixacomp","pixaDestroy","pixaDisplay","pixaDisplayBoxaa","pixaDisplayLinearly","pixaDisplayMultiTiled","pixaDisplayOnLattice","pixaDisplayPairTiledInColumns","pixaDisplayRandomCmap","pixaDisplayTiled","pixaDisplayTiledAndScaled","pixaDisplayTiledByIndex","pixaDisplayTiledInColumns","pixaDisplayTiledInRows","pixaDisplayTiledWithText","pixaDisplayUnsplit","pixaEqual","pixaExtendArrayToSize","pixaExtendByMorph","pixaExtendByScaling","pixaExtractColumnFromEachPix","pixaFindAreaFraction","pixaFindAreaFractionMasked","pixaFindDimensions","pixaFindPerimSizeRatio","pixaFindPerimToAreaRatio","pixaFindStrokeWidth","pixaFindWidthHeightProduct","pixaFindWidthHeightRatio","pixaGetAlignedStats","pixaGetBox","pixaGetBoxGeometry","pixaGetBoxa","pixaGetBoxaCount","pixaGetCount","pixaGetDepthInfo","pixaGetFont","pixaGetLinePtrs","pixaGetPix","pixaGetPixArray","pixaGetPixDimensions","pixaGetRenderingDepth","pixaHasColor","pixaInitFull","pixaInsertPix","pixaInterleave","pixaIsFull","pixaJoin","pixaMakeFromTiledPix","pixaMakeFromTiledPixa","pixaMakeSizeIndicator","pixaModifyStrokeWidth","pixaMorphSequenceByComponent","pixaMorphSequenceByRegion","pixaRead","pixaReadBoth","pixaReadFiles","pixaReadFilesSA","pixaReadMem","pixaReadMemMultipageTiff","pixaReadMultipageTiff","pixaReadStream","pixaRemoveOutliers1","pixaRemoveOutliers2","pixaRemovePix","pixaRemovePixAndSave","pixaRemoveSelected","pixaRenderComponent","pixaReplacePix","pixaRotate","pixaRotateOrth","pixaSaveFont","pixaScale","pixaScaleBySampling","pixaScaleToSize","pixaScaleToSizeRel","pixaSelectByArea","pixaSelectByAreaFraction","pixaSelectByNumConnComp","pixaSelectByPerimSizeRatio","pixaSelectByPerimToAreaRatio","pixaSelectBySize","pixaSelectByWidthHeightRatio","pixaSelectRange","pixaSelectToPdf","pixaSelectWithIndicator","pixaSelectWithString","pixaSetBoxa","pixaSetFullSizeBoxa","pixaSetStrokeWidth","pixaSetText","pixaSizeRange","pixaSort","pixaSort2dByIndex","pixaSortByIndex","pixaSplitIntoFiles","pixaSplitPix","pixaThinConnected","pixaTranslate","pixaVerifyDepth","pixaVerifyDimensions","pixaWrite","pixaWriteCompressedToPS","pixaWriteDebug","pixaWriteFiles","pixaWriteMem","pixaWriteMemMultipageTiff","pixaWriteMemWebPAnim","pixaWriteMultipageTiff","pixaWriteStream","pixaWriteStreamInfo","pixaWriteStreamWebPAnim","pixaWriteWebPAnim","pixa_id","pixa_tr","pixa_u","pixaa","pixaa","pixaaAddBox","pixaaAddPix","pixaaAddPixa","pixaaClear","pixaaCreate","pixaaCreateFromPixa","pixaaDestroy","pixaaDisplay","pixaaDisplayByPixa","pixaaDisplayTiledAndScaled","pixaaFlattenToPixa","pixaaGetBoxa","pixaaGetCount","pixaaGetPix","pixaaGetPixa","pixaaInitFull","pixaaIsFull","pixaaJoin","pixaaRead","pixaaReadFromFiles","pixaaReadMem","pixaaReadStream","pixaaReplacePixa","pixaaScaleToSize","pixaaScaleToSizeVar","pixaaSelectRange","pixaaSizeRange","pixaaTruncate","pixaaVerifyDepth","pixaaVerifyDimensions","pixaaWrite","pixaaWriteMem","pixaaWriteStream","pixaa_u","pixaccAdd","pixaccCreate","pixaccCreateFromPix","pixaccDestroy","pixaccFinal","pixaccGetOffset","pixaccGetPix","pixaccMultConst","pixaccMultConstAccumulate","pixaccSubtract","pixacompAddBox","pixacompAddPix","pixacompAddPixcomp","pixacompConvertToPdf","pixacompConvertToPdfData","pixacompCreate","pixacompCreateFromFiles","pixacompCreateFromPixa","pixacompCreateFromSA","pixacompCreateWithInit","pixacompDestroy","pixacompDisplayTiledAndScaled","pixacompFastConvertToPdfData","pixacompGetBox","pixacompGetBoxGeometry","pixacompGetBoxa","pixacompGetBoxaCount","pixacompGetCount","pixacompGetOffset","pixacompGetPix","pixacompGetPixDimensions","pixacompGetPixcomp","pixacompInterleave","pixacompJoin","pixacompRead","pixacompReadMem","pixacompReadStream","pixacompReplacePix","pixacompReplacePixcomp","pixacompSetOffset","pixacompWrite","pixacompWriteFiles","pixacompWriteMem","pixacompWriteStream","pixacompWriteStreamInfo","pixad","pixadb","pixadb_ave","pixadb_boot","pixadb_split","pixam","pixas","pixat","pixatd","pixc","pixcmapAddBlackOrWhite","pixcmapAddColor","pixcmapAddNearestColor","pixcmapAddNewColor","pixcmapAddRGBA","pixcmapClear","pixcmapColorToGray","pixcmapContrastTRC","pixcmapConvertHSVToRGB","pixcmapConvertRGBToHSV","pixcmapConvertRGBToYUV","pixcmapConvertTo4","pixcmapConvertTo8","pixcmapConvertToHex","pixcmapConvertYUVToRGB","pixcmapCopy","pixcmapCountGrayColors","pixcmapCreate","pixcmapCreateLinear","pixcmapCreateRandom","pixcmapDeserializeFromMemory","pixcmapDestroy","pixcmapGammaTRC","pixcmapGetColor","pixcmapGetColor32","pixcmapGetCount","pixcmapGetDepth","pixcmapGetDistanceToColor","pixcmapGetFreeCount","pixcmapGetIndex","pixcmapGetMinDepth","pixcmapGetNearestGrayIndex","pixcmapGetNearestIndex","pixcmapGetRGBA","pixcmapGetRGBA32","pixcmapGetRangeValues","pixcmapGetRankIntensity","pixcmapGrayToColor","pixcmapGrayToFalseColor","pixcmapHasColor","pixcmapIsBlackAndWhite","pixcmapIsOpaque","pixcmapIsValid","pixcmapNonOpaqueColorsInfo","pixcmapRead","pixcmapReadMem","pixcmapReadStream","pixcmapResetColor","pixcmapSerializeToMemory","pixcmapSetAlpha","pixcmapSetBlackAndWhite","pixcmapShiftByComponent","pixcmapShiftIntensity","pixcmapToArrays","pixcmapToOctcubeLUT","pixcmapToRGBTable","pixcmapUsableColor","pixcmapWrite","pixcmapWriteMem","pixcmapWriteStream","pixcompCopy","pixcompCreateFromFile","pixcompCreateFromPix","pixcompCreateFromString","pixcompDestroy","pixcompDetermineFormat","pixcompGetDimensions","pixcompGetParameters","pixcompWriteFile","pixcompWriteStreamInfo","pixdb_ave","pixdb_range","pixelFractionalShift","pixelLinearMapToTargetColor","pixelShiftByComponent","pixlab","pixm","pixs","pixs","pixs","pixs","pixst","pixt","plotdata","plotlabels","plotstyles","pmsCreate","pmsCustomAlloc","pmsCustomDealloc","pmsDestroy","pmsGetAlloc","pmsGetLevelForAlloc","pmsGetLevelForDealloc","pmsLogInfo","popen","posix_memalign","poststream","predictor","prev","printf","projectiveXformPt","projectiveXformSampledPt","pselect","pta","pta","ptaAddPt","ptaAffineTransform","ptaChangeRefcount","ptaClone","ptaContainsPt","ptaConvertToBox","ptaConvertToBoxa","ptaConvertToNuma","ptaCopy","ptaCopyRange","ptaCreate","ptaCreateFromNuma","ptaCropToMask","ptaCyclicPerm","ptaDestroy","ptaEmpty","ptaEqual","ptaGetArrays","ptaGetBoundaryPixels","ptaGetBoundingRegion","ptaGetCount","ptaGetCubicLSF","ptaGetIPt","ptaGetInsideBox","ptaGetLinearLSF","ptaGetMinMax","ptaGetNeighborPixLocs","ptaGetPixelsFromPix","ptaGetPt","ptaGetQuadraticLSF","ptaGetQuarticLSF","ptaGetRange","ptaGetRankValue","ptaGetRefcount","ptaGetSortIndex","ptaInsertPt","ptaIntersectionByAset","ptaIntersectionByHmap","ptaJoin","ptaNoisyLinearLSF","ptaNoisyQuadraticLSF","ptaPolygonIsConvex","ptaPtInsidePolygon","ptaRead","ptaReadMem","ptaReadStream","ptaRemoveDupsByAset","ptaRemoveDupsByHmap","ptaRemovePt","ptaReplicatePattern","ptaReverse","ptaRotate","ptaScale","ptaSelectByValue","ptaSelectRange","ptaSetPt","ptaSort","ptaSort2d","ptaSortByIndex","ptaSubsample","ptaTestIntersection","ptaTransform","ptaTranslate","ptaTranspose","ptaUnionByAset","ptaUnionByHmap","ptaWrite","ptaWriteDebug","ptaWriteMem","ptaWriteStream","pta_u","ptaa","ptaaAddPt","ptaaAddPta","ptaaCreate","ptaaDestroy","ptaaGetBoundaryPixels","ptaaGetCount","ptaaGetPt","ptaaGetPta","ptaaIndexLabeledPixels","ptaaInitFull","ptaaJoin","ptaaRead","ptaaReadMem","ptaaReadStream","ptaaReplacePta","ptaaSortByIndex","ptaaTruncate","ptaaWrite","ptaaWriteDebug","ptaaWriteMem","ptaaWriteStream","ptaa_u","ptac","ptact","ptall","ptas","ptaul","ptaul","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","ptra","ptraAdd","ptraCompactArray","ptraConcatenatePdf","ptraConcatenatePdfToData","ptraCreate","ptraDestroy","ptraGetActualCount","ptraGetMaxIndex","ptraGetPtrToItem","ptraInsert","ptraJoin","ptraRemove","ptraRemoveLast","ptraReplace","ptraReverse","ptraSwap","ptraaCreate","ptraaDestroy","ptraaFlattenToPtra","ptraaGetPtra","ptraaGetSize","ptraaInsertPtra","ptype","putc","putc_unlocked","putchar","putchar_unlocked","putenv","puts","putw","qecvt","qecvt_r","qfcvt","qfcvt_r","qgcvt","qsort","quad_t","quadtreeGetChildren","quadtreeGetParent","quadtreeMaxLevels","quick_exit","quot","quot","quot","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rankhaus","rasteropHipLow","rasteropLow","rasteropUniLow","rasteropVipLow","rch","rchDestroy","rchExtract","rcha","rchaDestroy","rchaExtract","readHeaderJp2k","readHeaderJpeg","readHeaderMemJp2k","readHeaderMemJpeg","readHeaderMemPng","readHeaderMemPnm","readHeaderMemTiff","readHeaderMemWebP","readHeaderPng","readHeaderPnm","readHeaderSpix","readHeaderTiff","readHeaderWebP","readResolutionMemJpeg","realloc","reallocNew","reallocarray","realpath","recogAddDigitPadTemplates","recogAddSample","recogAverageSamples","recogCorrelationBestChar","recogCorrelationBestRow","recogCreate","recogCreateDid","recogCreateFromPixa","recogCreateFromPixaNoFinish","recogCreateFromRecog","recogDebugAverages","recogDecode","recogDestroy","recogDestroyDid","recogDidExists","recogExtractNumbers","recogExtractPixa","recogFilterPixaBySize","recogGetClassIndex","recogGetClassString","recogGetCount","recogGetDid","recogIdentifyMultiple","recogIdentifyPix","recogIdentifyPixa","recogIsPaddingNeeded","recogMakeBootDigitRecog","recogMakeBootDigitTemplates","recogModifyTemplate","recogPadDigitTrainingSet","recogProcessLabeled","recogProcessToIdentify","recogRead","recogReadMem","recogReadStream","recogRemoveOutliers1","recogRemoveOutliers2","recogSetChannelParams","recogSetParams","recogShowAverageTemplates","recogShowContent","recogShowMatch","recogShowMatchesInRange","recogSkipIdentify","recogSortPixaByClass","recogSplitIntoCharacters","recogStringToIndex","recogTrainFromBoot","recogTrainLabeled","recogTrainingFinished","recogWrite","recogWriteMem","recogWriteStream","red","redfactor","redfactor","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","refcount","reformatPacked64","refpage","regTestCheckFile","regTestCleanup","regTestCompareFiles","regTestComparePix","regTestCompareSimilarPix","regTestCompareStrings","regTestCompareValues","regTestGenLocalFilename","regTestSetup","regTestWriteDataAndCheck","regTestWritePixAndCheck","reg_save_area","register_t","rem","rem","rem","remove","rename","renameat","res","resetMorphBoundaryCondition","returnErrorFloat","returnErrorInt","returnErrorPtr","rewind","right","rightcurv","rightslope","root","rootname","rpmatch","rptr","runlengthMembershipOnLine","saConcatenatePdf","saConcatenatePdfToData","saConvertFilesToPdf","saConvertFilesToPdfData","saConvertUnscaledFilesToPdf","saConvertUnscaledFilesToPdfData","sa_text","sacmap","safiles","samphdispar","sample","sampling","sampling","sampvdispar","sampydispar","saprex","sarrayAddString","sarrayAppend","sarrayAppendRange","sarrayChangeRefcount","sarrayClear","sarrayClone","sarrayConcatUniformly","sarrayConvertFilesFittedToPS","sarrayConvertFilesToPS","sarrayConvertWordsToLines","sarrayCopy","sarrayCreate","sarrayCreateInitialized","sarrayCreateLinesFromString","sarrayCreateWordsFromString","sarrayDestroy","sarrayGenerateIntegers","sarrayGetArray","sarrayGetCount","sarrayGetRefcount","sarrayGetString","sarrayIntersectionByAset","sarrayIntersectionByHmap","sarrayJoin","sarrayLookupCSKV","sarrayPadToSameSize","sarrayParseRange","sarrayRead","sarrayReadMem","sarrayReadStream","sarrayRemoveDupsByAset","sarrayRemoveDupsByHmap","sarrayRemoveString","sarrayReplaceString","sarraySelectBySubstring","sarraySelectRange","sarraySort","sarraySortByIndex","sarraySplitString","sarrayToString","sarrayToStringRange","sarrayUnionByAset","sarrayUnionByHmap","sarrayWrite","sarrayWriteMem","sarrayWriteStderr","sarrayWriteStream","satext","scaleh","scalew","scaling","scanf","scanf1","score","seed48","seed48_r","sel","selCopy","selCreate","selCreateBrick","selCreateComb","selCreateFromColorPix","selCreateFromPix","selCreateFromPta","selCreateFromString","selDestroy","selDisplayInPix","selFindMaxTranslations","selGetElement","selGetName","selGetParameters","selGetTypeAtOrigin","selMakePlusSign","selPrintToString","selRead","selReadFromColorImage","selReadStream","selRotateOrth","selSetElement","selSetName","selSetOrigin","selWrite","selWriteStream","sela4and8ccThin","sela4ccThin","sela8ccThin","selaAddBasic","selaAddCrossJunctions","selaAddDwaCombs","selaAddDwaLinear","selaAddHitMiss","selaAddSel","selaAddTJunctions","selaCreate","selaCreateFromColorPixa","selaCreateFromFile","selaDestroy","selaDisplayInPix","selaFindSelByName","selaGetBrickName","selaGetCombName","selaGetCount","selaGetSel","selaGetSelnames","selaMakeThinSets","selaRead","selaReadStream","selaWrite","selaWriteStream","select","selectComposableSels","selectComposableSizes","selectDefaultPdfEncoding","setLeptDebugOK","setLineDataVal","setMsgSeverity","setPixMemoryManager","setPixelLow","setbuf","setbuffer","setenv","setlinebuf","setsize","setstate","setstate_r","setvbuf","setwidth","showExtractNumbers","sigset_t","size","size","size","size","sizehaus","skip_horiz","snprintf","spacewidth","special","spglobal","splitPathAtDirectory","splitPathAtExtension","splitStringToParagraphs","splocal","spp","spp","sprintf","srand","srand48","srand48_r","srandom","srandom_r","sreadHeaderSpix","sscanf","sscanf1","stack","start","startTimer","startTimerNested","startWallTimer","start_sec","start_usec","startx","startx","state","state","stderr","stdin","stdout","step","stopTimer","stopTimerNested","stopWallTimer","stop_sec","stop_usec","strcodeCreate","strcodeCreateFromFile","strcodeFinalize","strcodeGenerate","stringCat","stringCheckForChars","stringCompareLexical","stringConcatNew","stringCopy","stringCopySegment","stringFindEachSubstr","stringFindSubstr","stringJoin","stringJoinIP","stringLength","stringNew","stringRemoveChars","stringReplace","stringReplaceEachSubstr","stringReplaceSubstr","stringReverse","stringSplitOnToken","strip","strtod","strtof","strtokSafe","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtouq","success","sudokuCreate","sudokuDestroy","sudokuGenerate","sudokuOutput","sudokuReadFile","sudokuReadString","sudokuSolve","sudokuTestUniqueness","sumtab","suseconds_t","sx","sx","sy","sy","system","tabsize","tempfile","templ_use","tempnam","testname","text","text","text","th","thresh","threshold","thresholdToBinaryLineLow","tiffGetCount","time_t","timer_t","timespec","timeval","title","title","tmpfile","tmpnam","tmpnam_r","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trailer","train_done","trellisscore","trellistempl","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstart","tv_nsec","tv_sec","tv_sec","tv_usec","tw","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","ungetc","unsetenv","useboth","ushort","utype","va_list","val","valloc","value","vdprintf","vertlinesep","vfprintf","vfscanf","vfscanf1","vprintf","vscanf","vscanf1","vsnprintf","vsprintf","vsscanf","vsscanf1","vsuccess","vvalid","w","w","w","w","w","w","w","w","w","w","w","w","wchar_t","wcstombs","wctomb","weightfactor","wh","width","widthtab","wpl","wpl","wpl","writeImageCompressedToPSFile","writeImageFileInfo","writeMultipageTiff","writeMultipageTiffSA","wshedApply","wshedBasins","wshedCreate","wshedDestroy","wshedRenderColors","wshedRenderFill","x","x","xlabel","xloc","xoverlap","xrefloc","xres","xres","xres","xres","xy","y","y","ylabel","yloc","yoverlap","yres","yres","yres","yres","ysuccess","zlibCompress","zlibUncompress"],"q":[[0,"leptonica_sys"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,9,9,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,25,26,27,28,29,30,31,32,33,0,0,0,0,0,0,35,0,0,0,0,0,0,2,21,0,22,0,24,28,29,30,0,21,0,16,22,0,0,0,0,0,0,0,0,23,23,23,23,23,0,0,0,0,0,18,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,21,0,21,0,18,0,0,0,19,20,0,21,0,0,35,0,0,21,22,22,22,22,9,0,4,5,19,0,0,0,0,0,0,0,0,22,0,0,22,22,0,0,0,25,26,27,28,29,30,31,32,33,0,21,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,2,17,17,3,3,23,22,22,22,23,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,37,39,42,44,47,49,51,55,71,0,0,0,94,0,0,0,0,0,0,55,87,0,0,65,56,56,56,56,0,0,0,0,0,0,0,0,90,0,0,0,0,72,87,0,0,0,0,0,0,0,0,87,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,57,73,74,77,86,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,63,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,87,87,60,0,64,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,63,63,85,62,62,54,70,0,65,0,0,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,90,0,0,0,0,0,0,93,67,69,67,69,70,85,0,65,43,48,67,69,70,82,84,85,92,63,63,62,0,61,94,0,0,0,37,39,90,71,92,0,61,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,87,47,56,91,0,0,0,0,40,41,87,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,1,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,24,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,56,0,0,0,0,0,91,95,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,52,90,61,61,61,92,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,58,61,63,65,66,70,75,80,81,82,84,85,45,61,61,61,64,0,92,49,88,91,70,93,41,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,46,54,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,54,61,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,94,94,94,94,87,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,87,60,87,87,87,61,60,65,87,45,60,65,87,87,87,0,0,0,64,65,60,87,87,59,61,94,87,63,60,61,87,87,0,0,0,0,91,0,60,0,0,0,0,37,38,39,40,42,44,47,55,58,64,68,71,73,74,76,77,78,79,83,86,92,59,65,87,87,65,66,65,49,61,90,90,65,89,94,37,38,39,40,42,43,44,47,49,50,51,55,58,60,68,71,73,74,76,77,78,79,83,86,67,94,61,60,90,65,66,60,90,89,90,89,90,90,94,94,87,90,87,90,90,89,90,90,89,90,90,89,41,63,63,0,63,65,66,64,63,51,46,48,0,93,51,45,61,0,94,65,66,62,0,0,94,45,93,87,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,59,61,81,59,61,81,64,64,64,64,64,64,64,0,80,86,0,0,62,62,95,61,54,0,0,0,0,0,0,0,0,57,58,66,73,80,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,74,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,87,87,65,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,59,87,87,87,59,59,65,65,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,87,0,0,0,94,94,59,61,90,94,59,94,62,62,62,0,0,0,0,0,0,0,0,0,0,64,63,48,0,0,0,0,79,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,65,65,65,94,65,66,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,11,12,0,34,0,34,34,0,0,0,65,0,0,0,0,87,0,0,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,60,61,37,39,42,43,57,70,73,75,76,78,82,83,84,0,61,0,0,0,0,0,0,0,0,0,0,0,95,0,10,11,12,0,0,0,63,0,0,0,0,0,54,61,61,53,62,0,34,0,0,0,0,0,0,0,87,64,65,61,88,60,61,61,61,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,87,87,62,0,0,88,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,0,0,90,0,0,43,56,85,90,65,61,0,56,70,57,0,0,0,57,63,70,0,0,0,0,0,0,0,0,0,51,57,0,0,0,36,36,37,39,34,93,0,0,0,57,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,87,0,67,69,67,69,0,45,91,87,0,91,70,85,88,59,65,87,0,0,0,0,0,0,62,64,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,64,87,90,90,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,91,15,14,15,14,59,63,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,52,0,46,0,54,0,56,0,0,0,0,0,0,0,0,0,0,61,61,58,61,63,65,66,70,75,80,81,82,84,85,0,0,0,65,64,88,56,70,82,84,0,0,0,0,0,0,0,0,0,0,75,78,62,88,81,64,70,82,84,85,64,75,78,62,88,81,70,82,84,85,61,0,0],"fc":[],"p":[[3,"__fsid_t"],[3,"__mbstate_t"],[19,"__mbstate_t__bindgen_ty_1"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"_IO_marker"],[3,"_IO_codecvt"],[3,"_IO_wide_data"],[3,"_IO_FILE"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[19,"__atomic_wide_counter"],[3,"__atomic_wide_counter__bindgen_ty_1"],[3,"__pthread_internal_list"],[3,"__pthread_internal_slist"],[3,"__pthread_mutex_s"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_cond_s"],[3,"__once_flag"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"random_data"],[3,"drand48_data"],[3,"L_WallTimer"],[3,"Numa"],[3,"Numaa"],[3,"L_Dna"],[3,"L_Dnaa"],[3,"L_DnaHash"],[3,"Sarray"],[3,"L_Bytea"],[3,"L_ByteBuffer"],[3,"L_Hashmap"],[3,"L_Hashitem"],[3,"L_Heap"],[3,"DoubleLinkedList"],[3,"L_Ptra"],[3,"L_Ptraa"],[3,"L_Queue"],[19,"Rb_Type"],[3,"L_Rbtree"],[3,"L_Rbtree_Node"],[3,"L_Stack"],[3,"L_Bmf"],[3,"CCBord"],[3,"CCBorda"],[3,"L_Colorfill"],[3,"L_Dewarpa"],[3,"L_Dewarp"],[3,"GPlot"],[3,"L_Compressed_Data"],[3,"L_Pdf_Data"],[3,"JbClasser"],[3,"JbData"],[3,"Sel"],[3,"Sela"],[3,"L_Kernel"],[3,"Pix"],[3,"PixColormap"],[3,"RGBA_Quad"],[3,"Pixa"],[3,"Pixaa"],[3,"Box"],[3,"Boxa"],[3,"Boxaa"],[3,"Pta"],[3,"Ptaa"],[3,"Pixacc"],[3,"PixTiling"],[3,"FPix"],[3,"FPixa"],[3,"DPix"],[3,"PixComp"],[3,"PixaComp"],[3,"L_Recog"],[3,"L_Rch"],[3,"L_Rcha"],[3,"L_Rdid"],[3,"L_RegParams"],[3,"L_StrCode"],[3,"L_Sudoku"],[3,"L_WShed"],[3,"__va_list_tag"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_IV","ALG_SET_KEY","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKIOMIN","BLKIOOPT","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_FS_MAGIC","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_JUMP","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MISC","BPF_MISCOP","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_RVAL","BPF_ST","BPF_STMT","BPF_STX","BPF_SUB","BPF_W","BPF_X","BPF_XOR","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CANXL_HDR_SIZE","CANXL_MAX_DLC","CANXL_MAX_DLC_MASK","CANXL_MAX_DLEN","CANXL_MAX_MTU","CANXL_MIN_DLC","CANXL_MIN_DLEN","CANXL_MIN_MTU","CANXL_MTU","CANXL_PRIO_BITS","CANXL_PRIO_MASK","CANXL_SEC","CANXL_XLF","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RAW_XL_FRAMES","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCLASSNUM","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFDATANUM","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_OPENBSD","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","EM_386","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ARC","EM_ARC_A5","EM_ARM","EM_AVR","EM_COLDFIRE","EM_CRIS","EM_D10V","EM_D30V","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IA_64","EM_JAVELIN","EM_M32","EM_M32R","EM_ME16","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMIX","EM_MN10200","EM_MN10300","EM_NCPU","EM_NDR1","EM_NONE","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_RCE","EM_RH32","EM_S370","EM_S390","EM_SH","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_ST100","EM_ST19","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_SVX","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TRICORE","EM_V800","EM_V850","EM_VAX","EM_VPP500","EM_X86_64","EM_XTENSA","EM_ZSP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_NUM","ET_REL","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_CURRENT","EV_MAX","EV_NONE","EV_NUM","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_DENY","FAN_EVENT_ON_CHILD","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FICLONE","FICLONERANGE","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_OP","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","HWTSTAMP_FILTER_ALL","HWTSTAMP_FILTER_NONE","HWTSTAMP_FILTER_NTP_ALL","HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V1_L4_EVENT","HWTSTAMP_FILTER_PTP_V1_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_SYNC","HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L4_EVENT","HWTSTAMP_FILTER_PTP_V2_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_SYNC","HWTSTAMP_FILTER_SOME","HWTSTAMP_TX_OFF","HWTSTAMP_TX_ON","HWTSTAMP_TX_ONESTEP_P2P","HWTSTAMP_TX_ONESTEP_SYNC","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALLMULTI","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GRO_MAX_SIZE","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_NAME","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SIZE","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_TESTING","IF_NAMESIZE","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UP","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","J1939_EE_INFO_NONE","J1939_EE_INFO_RX_ABORT","J1939_EE_INFO_RX_DPO","J1939_EE_INFO_RX_RTS","J1939_EE_INFO_TX_ABORT","J1939_FILTER_MAX","J1939_IDLE_ADDR","J1939_MAX_UNICAST_ADDR","J1939_NLA_BYTES_ACKED","J1939_NLA_DEST_ADDR","J1939_NLA_DEST_NAME","J1939_NLA_PAD","J1939_NLA_PGN","J1939_NLA_SRC_ADDR","J1939_NLA_SRC_NAME","J1939_NLA_TOTAL_SIZE","J1939_NO_ADDR","J1939_NO_NAME","J1939_NO_PGN","J1939_PGN_ADDRESS_CLAIMED","J1939_PGN_ADDRESS_COMMANDED","J1939_PGN_MAX","J1939_PGN_PDU1_MAX","J1939_PGN_REQUEST","JFFS2_SUPER_MAGIC","KERNEL_VERSION","KEXEC_ARCH_MASK","KEXEC_FILE_NO_INITRAMFS","KEXEC_FILE_ON_CRASH","KEXEC_FILE_UNLOAD","KEXEC_ON_CRASH","KEXEC_PRESERVE_CONTEXT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_COLD","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MPOL_BIND","MPOL_DEFAULT","MPOL_F_NUMA_BALANCING","MPOL_F_RELATIVE_NODES","MPOL_F_STATIC_NODES","MPOL_INTERLEAVE","MPOL_LOCAL","MPOL_PREFERRED","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_NOTIFICATION","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NFTRACE","NFNLGRP_NONE","NFNL_BATCH_GENID","NFNL_BATCH_UNSPEC","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_HOOK","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_L2HDR","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_PRIORITY","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQA_VLAN","NFQA_VLAN_PROTO","NFQA_VLAN_TCI","NFQA_VLAN_UNSPEC","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_L2HDR","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULA_VLAN","NFULA_VLAN_PROTO","NFULA_VLAN_TCI","NFULA_VLAN_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NSFS_MAGIC","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MASKOS","PF_MASKPROC","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_R","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_W","PF_WANPIPE","PF_X","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSID","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SCHED_CORE","PR_SCHED_CORE_CREATE","PR_SCHED_CORE_GET","PR_SCHED_CORE_MAX","PR_SCHED_CORE_SCOPE_PROCESS_GROUP","PR_SCHED_CORE_SCOPE_THREAD","PR_SCHED_CORE_SCOPE_THREAD_GROUP","PR_SCHED_CORE_SHARE_FROM","PR_SCHED_CORE_SHARE_TO","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_PTRACER_ANY","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_PRIO_INHERIT","PTHREAD_PRIO_NONE","PTHREAD_PRIO_PROTECT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_GET_RSEQ_CONFIGURATION","PTRACE_GET_SYSCALL_INFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSCALL_INFO_ENTRY","PTRACE_SYSCALL_INFO_EXIT","PTRACE_SYSCALL_INFO_NONE","PTRACE_SYSCALL_INFO_SECCOMP","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HISUNW","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_LOSUNW","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_SUNWBSS","PT_SUNWSTACK","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTEXT_FILTER_BRVLAN","RTEXT_FILTER_BRVLAN_COMPRESSED","RTEXT_FILTER_CFM_CONFIG","RTEXT_FILTER_CFM_STATUS","RTEXT_FILTER_MRP","RTEXT_FILTER_SKIP_STATS","RTEXT_FILTER_VF","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_J1939_DEST_ADDR","SCM_J1939_DEST_NAME","SCM_J1939_ERRQUEUE","SCM_J1939_PRIO","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SCTP_ABORT","SCTP_ADAPTATION_LAYER","SCTP_ADDR_OVER","SCTP_ALL_ASSOC","SCTP_ASSOCINFO","SCTP_AUTHINFO","SCTP_AUTH_ACTIVE_KEY","SCTP_AUTH_CHUNK","SCTP_AUTH_DEACTIVATE_KEY","SCTP_AUTH_DELETE_KEY","SCTP_AUTH_KEY","SCTP_AUTOCLOSE","SCTP_AUTO_ASCONF","SCTP_CONTEXT","SCTP_CURRENT_ASSOC","SCTP_DEFAULT_SEND_PARAM","SCTP_DEFAULT_SNDINFO","SCTP_DELAYED_ACK","SCTP_DELAYED_ACK_TIME","SCTP_DELAYED_SACK","SCTP_DISABLE_FRAGMENTS","SCTP_DSTADDRV4","SCTP_DSTADDRV6","SCTP_ENABLE_CHANGE_ASSOC_REQ","SCTP_ENABLE_RESET_ASSOC_REQ","SCTP_ENABLE_RESET_STREAM_REQ","SCTP_ENABLE_STRRESET_MASK","SCTP_EOF","SCTP_EVENTS","SCTP_FRAGMENT_INTERLEAVE","SCTP_FUTURE_ASSOC","SCTP_GET_ASSOC_ID_LIST","SCTP_GET_ASSOC_NUMBER","SCTP_GET_PEER_ADDR_INFO","SCTP_HMAC_IDENT","SCTP_INIT","SCTP_INITMSG","SCTP_I_WANT_MAPPED_V4_ADDR","SCTP_LOCAL_AUTH_CHUNKS","SCTP_MAXSEG","SCTP_MAX_BURST","SCTP_NODELAY","SCTP_NOTIFICATION","SCTP_NXTINFO","SCTP_PARTIAL_DELIVERY_POINT","SCTP_PEER_ADDR_PARAMS","SCTP_PEER_ADDR_THLDS","SCTP_PEER_ADDR_THLDS_V2","SCTP_PEER_AUTH_CHUNKS","SCTP_PRIMARY_ADDR","SCTP_PRINFO","SCTP_PR_INDEX","SCTP_PR_POLICY","SCTP_PR_PRIO_ENABLED","SCTP_PR_RTX_ENABLED","SCTP_PR_SCTP_ALL","SCTP_PR_SCTP_MASK","SCTP_PR_SCTP_MAX","SCTP_PR_SCTP_NONE","SCTP_PR_SCTP_PRIO","SCTP_PR_SCTP_RTX","SCTP_PR_SCTP_TTL","SCTP_PR_SET_POLICY","SCTP_PR_TTL_ENABLED","SCTP_RCVINFO","SCTP_RECVNXTINFO","SCTP_RECVRCVINFO","SCTP_REUSE_PORT","SCTP_RTOINFO","SCTP_SACK_IMMEDIATELY","SCTP_SENDALL","SCTP_SET_PEER_PRIMARY_ADDR","SCTP_SNDINFO","SCTP_SNDRCV","SCTP_STATUS","SCTP_STREAM_RESET_INCOMING","SCTP_STREAM_RESET_OUTGOING","SCTP_UNORDERED","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_GET_ACTION_AVAIL","SECCOMP_GET_NOTIF_SIZES","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECCOMP_SET_MODE_FILTER","SECCOMP_SET_MODE_STRICT","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELFMAG","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGHWTSTAMP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGMIIPHY","SIOCGMIIREG","SIOCGRARP","SIOCGSKNS","SIOCOUTQNSD","SIOCSARP","SIOCSHWTSTAMP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSMIIREG","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SI_LOAD_SHIFT","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","SK_MEMINFO_BACKLOG","SK_MEMINFO_DROPS","SK_MEMINFO_FWD_ALLOC","SK_MEMINFO_OPTMEM","SK_MEMINFO_RCVBUF","SK_MEMINFO_RMEM_ALLOC","SK_MEMINFO_SNDBUF","SK_MEMINFO_WMEM_ALLOC","SK_MEMINFO_WMEM_QUEUED","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_OPT_CMSG","SOF_TIMESTAMPING_OPT_ID","SOF_TIMESTAMPING_OPT_PKTINFO","SOF_TIMESTAMPING_OPT_STATS","SOF_TIMESTAMPING_OPT_TSONLY","SOF_TIMESTAMPING_OPT_TX_SWHW","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_ACK","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SCHED","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_J1939","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_J1939_ERRQUEUE","SO_J1939_FILTER","SO_J1939_PROMISC","SO_J1939_SEND_PRIO","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futex_waitv","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_landlock_add_rule","SYS_landlock_create_ruleset","SYS_landlock_restrict_self","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_memfd_secret","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_mrelease","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_quotactl_fd","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rseq","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_mempolicy_home_node","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_MD5SIG_MAXKEYLEN","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UMOUNT_NOFOLLOW","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_ifr_ifru","__c_anonymous_ifru_map","__c_anonymous_ptrace_syscall_info_data","__c_anonymous_ptrace_syscall_info_entry","__c_anonymous_ptrace_syscall_info_exit","__c_anonymous_ptrace_syscall_info_seccomp","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__s64","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addr","addr_mask","addrinfo","adjtime","adjtimex","af","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arch","arena","arena","args","args","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","asctime_r","atexit","atof","atoi","atol","atoll","attack_length","attack_level","auth_keynumber","backtrace","base_addr","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","canxl_frame","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","cgroup","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","child_tid","chmod","chown","chroot","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","close","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","ctermid","ctime_r","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","data","deadband","decimal_point","delay","dest_offset","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dirname","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","dma","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","drand48","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","eaccess","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","entry","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","erand48","errcnt","error","es","esterror","esterror","euidaccess","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execvp","execvpe","exit","exit","exit_signal","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetgrent_r","fgetpos","fgetpos64","fgetpwent_r","fgets","fgetspent_r","fgetxattr","file_clone_range","fileno","filter","flag","flags","flags","flags","flags","flags","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getmntent_r","getnameinfo","getopt","getopt_long","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gnu_basename","gnu_get_libc_release","gnu_get_libc_version","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","has_arg","hasmntopt","hblkhd","hblkhd","hblks","hblks","hostent","hstrerror","hwtstamp_config","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifru","ifr_name","ifreq","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ifindex","ifru_map","ifru_metric","ifru_mtu","ifru_netmask","ifru_newname","ifru_slave","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_ifreq","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","irq","is_error","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","j1939_filter","jf","jitcnt","jitter","jrand48","jt","k","keepcost","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lcong48","lconv","left_coeff","left_saturation","len","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lrand48","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_trim","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_end","mem_start","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mrand48","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","name","name","name_mask","name_t","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","nr","nr","nr","nrand48","ntp_adjtime","ntp_gettime","ntptimeval","nxt_assoc_id","nxt_flags","nxt_length","nxt_ppid","nxt_sid","off","off64_t","off_t","offset","offset","old","op","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","option","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","pad","pad","parent_tid","passwd","pathconf","pause","pclose","period","perror","personality","pgn","pgn","pgn_mask","pgn_t","phase","pid","pid","pid_t","pidfd","pipe","pipe2","poll","pollfd","popen","port","positive_sign","posix_basename","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addchdir_np","posix_spawn_file_actions_addclose","posix_spawn_file_actions_addclosefrom_np","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addfchdir_np","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addtcsetpgrp_np","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","pr_policy","pr_value","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","prio","priority_t","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setstacksize","pthread_attr_t","pthread_barrier_destroy","pthread_barrier_init","pthread_barrier_t","pthread_barrier_wait","pthread_barrierattr_destroy","pthread_barrierattr_getpshared","pthread_barrierattr_init","pthread_barrierattr_setpshared","pthread_barrierattr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_sigqueue","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrace_peeksiginfo_args","ptrace_rseq_configuration","ptrace_syscall_info","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","putgrent","putpwent","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcv_assoc_id","rcv_context","rcv_cumtsn","rcv_flags","rcv_ppid","rcv_sid","rcv_ssn","rcv_tsn","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","ret_data","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rseq_abi_pointer","rseq_abi_size","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_filter","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","sctp_assoc_t","sctp_authinfo","sctp_initmsg","sctp_nxtinfo","sctp_prinfo","sctp_rcvinfo","sctp_sndinfo","sctp_sndrcvinfo","sdt","seccomp","seccomp_data","seccomp_data","seccomp_notif","seccomp_notif_resp","seccomp_notif_sizes","seed48","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","set_tid","set_tid_size","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","signature","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sinfo_assoc_id","sinfo_context","sinfo_cumtsn","sinfo_flags","sinfo_ppid","sinfo_ssn","sinfo_stream","sinfo_timetolive","sinfo_tsn","sinit_max_attempts","sinit_max_init_timeo","sinit_max_instreams","sinit_num_ostreams","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snd_assoc_id","snd_context","snd_flags","snd_ppid","snd_sid","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","srand48","src_fd","src_length","src_offset","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack","stack_pointer","stack_size","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strchrnul","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtoul","strtoull","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","sval","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tls","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","tx_type","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","val","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":[[0,"libc"]],"dmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","Ethernet-within-IPv6 encapsulation.","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GNU version of <code>basename(3)</code>, defined in <code>string.h</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interface name, e.g. “en0”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeversion of <code>basename(3)</code>, defined in <code>libgen.h</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],4],0,0,0,0,0,0,0,0,0,0,[2,2],0,0,0,0,0,0,0,0,[2,2],0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,5],[8,8],[[7,5],5],[8,8],0,0,0,[9,10],[[11,12]],[12,9],[[11,12],9],[[12,12],13],[[11,12],13],[[11,12]],0,[12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,14]],[[9,14],13],[[9,14]],0,[14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9,9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,[15,15],0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16,16],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,[16,13],0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],[9,9],[9,13],[9,13],0,0,0,0,0,0,0,[[9,9]],[9,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,13],0,[9,9],0,[9,13],[9,13],[9,13],[9,13],0,0,0,[9,9],[9,9],0,[[9,9],9],0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[18,18],[44,44],[45,45],[46,46],[47,47],[14,14],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[12,12],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[17,17],[113,113],[114,114],[115,115],[116,116],[4,4],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[7,7],[5,5],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[220,221],[[223,[222]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[224,8],0,[[8,8],224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[224,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[182,220],0,0,[182,225],0,[182,9],[182,226],[182,227],[182,226],[182,34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],[[],223],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],[[],228],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[715,1369,3347,4249,4613,6147,6148,6149,6150,6411,6412,8263,8264,8265,8266,8317],"p":[[6,"__u16"],[6,"__u32"],[6,"__u8"],[3,"sock_filter"],[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[6,"size_t"],[15,"usize"],[3,"cpu_set_t"],[15,"bool"],[3,"fd_set"],[15,"u8"],[15,"u32"],[3,"sock_extended_err"],[3,"sockaddr"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"j1939_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"file_clone_range"],[3,"__c_anonymous_ifru_map"],[3,"in6_ifreq"],[3,"option"],[3,"sctp_initmsg"],[3,"sctp_sndrcvinfo"],[3,"sctp_sndinfo"],[3,"sctp_rcvinfo"],[3,"sctp_nxtinfo"],[3,"sctp_prinfo"],[3,"sctp_authinfo"],[3,"rlimit64"],[3,"sockaddr_nl"],[3,"dirent"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_ifr_ifru"],[3,"ifreq"],[3,"hwtstamp_config"],[3,"dirent64"],[3,"sock_txtime"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"ptrace_peeksiginfo_args"],[3,"__c_anonymous_ptrace_syscall_info_entry"],[3,"__c_anonymous_ptrace_syscall_info_exit"],[3,"__c_anonymous_ptrace_syscall_info_seccomp"],[3,"ptrace_syscall_info"],[19,"__c_anonymous_ptrace_syscall_info_data"],[3,"utmpx"],[3,"sigset_t"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"seccomp_notif_sizes"],[3,"ptrace_rseq_configuration"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"clone_args"],[3,"sem_t"],[3,"termios2"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_barrierattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_barrier_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"canxl_frame"],[3,"open_how"],[3,"in6_addr"],[4,"c_void"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"dev_t"],[6,"pid_t"],[6,"c_long"],[6,"uid_t"],[3,"TypeId"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[232,"proc_macro2::extra"],[247,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,22,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,[0,[16,[18,[17]]]]],15],[[12,12],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[8,7],[[]],[25,7],[[]],[26,6],[5,8],[12,8],[[]],[1,8],[9,8],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[37],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[38]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[40,[39]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[3,5],[3,5],[6,26],[39,5],[39,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],41],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],41]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"syn":{"doc":"github crates-io docs-rs","t":"DNNNNDDNNNDNDNNEDNNDDENNNNNNNDNNDNNNNNNNNNNNNNNNNNDDNNNEDDDNNDNNNNNDENDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNDNEDDEDDDNNNNNENEDDDDNNEEDNNNNNNCDFNNNDEDDDDENDNNNNNNENDDDDDDDDDDDDDDDDNNDFNNNNDNEFNNDFDFDFDFDFDFDFDNDNNDNNNNNNNNENNEEDDNNNNNNNNNNNNNNNNNNNNNNNNNDEDDDDDDDDDDDDDDDDDNNNNNEDDDNNDNNENDNNNNNNNNNNGNENNNNDNNNNEEDNENNNNNNONNNDEEDDDDNNNNNNNDENNNNNNNNNDDDDDDDDDEDDDDDDDNENNNNNNNNDDDDDEDDNNNNNNNNNDEDENNNMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMOMMMMMMMOMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMOOMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMMMMMLMMMMLMMMLMMMMMLMMMMMMMMMMMMMMMMMLMMMMAMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMOAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFLOLLLLLLLOOLFLLLLLLLMMMMMMMMMLLMMMMMMMMMMMMMMMAMMMMMMMLMMMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALMMMMMMMMMMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMMMMMMMLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMAAMMMLLLLMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKSKDLLLLMLLFMLLLLDDDQIDGIIGDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKNDDDDEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLIFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLLFLL","n":["Abi","Add","AddAssign","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssocConst","AssocConst","AssocType","AssocType","Async","AttrStyle","Attribute","Await","BareFn","BareFnArg","BareVariadic","BinOp","Binary","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","Block","Block","Bool","BoundLifetimes","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivAssign","Enum","Enum","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprConst","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprInfer","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldMutability","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemFn","ImplItemMacro","ImplItemType","ImplRestriction","ImplTrait","Index","Index","Infer","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeParam","List","Lit","Lit","Lit","Lit","LitBool","LitBool","LitByte","LitByte","LitByteStr","LitByteStr","LitChar","LitChar","LitFloat","LitFloat","LitInt","LitInt","LitStr","LitStr","Local","Local","LocalInit","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","MetaList","MetaNameValue","MethodCall","Mod","Mul","MulAssign","Mut","Name","NameValue","Named","Named","Ne","Neg","Never","None","None","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatConst","PatIdent","PatLit","PatMacro","PatOr","PatParen","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemAssign","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Shl","ShlAssign","Shr","ShrAssign","Signature","Slice","Slice","Static","Static","StaticMutability","Stmt","StmtMacro","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubAssign","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemFn","TraitItemMacro","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","comma","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","const_token","const_token","constness","constness","content","continue_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","delimiter","discriminant","diverge","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","elems","else_branch","end","end","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","len","len","len","let_token","let_token","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","loop_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","mac","make_where_clause","match_token","member","member","member","meta","meta","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","name","named","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args","parse_args_with","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_mod_style","parse_multi","parse_multi_with_leading_vert","parse_named","parse_nested_meta","parse_nested_meta","parse_outer","parse_quote","parse_quote_spanned","parse_single","parse_str","parse_turbofish","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","punctuated","qself","qself","qself","qself","qself","qself","question_token","receiver","receiver","reference","rename","rename","require_list","require_name_value","require_path_only","rest","rest","restriction","return_token","right","right","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","start","start","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","visit","visit_mut","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_token","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","equivalent","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","ParseNestedMeta","borrow","borrow_mut","error","from","input","into","parse_nested_meta","parser","path","try_from","try_into","type_id","value","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_any_delimiter","parse_str","parse_terminated","peek","peek","peek2","peek3","provide","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AnyDelimiter","Speculative","advance_to","parse_any_delimiter","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","pop_punct","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","And","AndAnd","AndEq","As","Async","At","Auto","Await","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Comma","Const","Continue","Crate","Default","Do","Dollar","Dot","DotDot","DotDotDot","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Minus","MinusEq","Mod","Move","Mut","Ne","Not","Or","OrEq","OrOr","Override","Paren","PathSep","Percent","PercentEq","Plus","PlusEq","Pound","Priv","Pub","Question","RArrow","Ref","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Slash","SlashEq","Star","StarEq","Static","Struct","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Visit","visit_abi","visit_abi","visit_abi","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_arm","visit_arm","visit_arm","visit_assoc_const","visit_assoc_const","visit_assoc_const","visit_assoc_type","visit_assoc_type","visit_assoc_type","visit_attr_style","visit_attr_style","visit_attr_style","visit_attribute","visit_attribute","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg","visit_bare_fn_arg","visit_bare_variadic","visit_bare_variadic","visit_bare_variadic","visit_bin_op","visit_bin_op","visit_bin_op","visit_block","visit_block","visit_block","visit_bound_lifetimes","visit_bound_lifetimes","visit_bound_lifetimes","visit_const_param","visit_const_param","visit_const_param","visit_constraint","visit_constraint","visit_constraint","visit_data","visit_data","visit_data","visit_data_enum","visit_data_enum","visit_data_enum","visit_data_struct","visit_data_struct","visit_data_struct","visit_data_union","visit_data_union","visit_data_union","visit_derive_input","visit_derive_input","visit_derive_input","visit_expr","visit_expr","visit_expr","visit_expr_array","visit_expr_array","visit_expr_array","visit_expr_assign","visit_expr_assign","visit_expr_assign","visit_expr_async","visit_expr_async","visit_expr_async","visit_expr_await","visit_expr_await","visit_expr_await","visit_expr_binary","visit_expr_binary","visit_expr_binary","visit_expr_block","visit_expr_block","visit_expr_block","visit_expr_break","visit_expr_break","visit_expr_break","visit_expr_call","visit_expr_call","visit_expr_call","visit_expr_cast","visit_expr_cast","visit_expr_cast","visit_expr_closure","visit_expr_closure","visit_expr_closure","visit_expr_const","visit_expr_const","visit_expr_const","visit_expr_continue","visit_expr_continue","visit_expr_continue","visit_expr_field","visit_expr_field","visit_expr_field","visit_expr_for_loop","visit_expr_for_loop","visit_expr_for_loop","visit_expr_group","visit_expr_group","visit_expr_group","visit_expr_if","visit_expr_if","visit_expr_if","visit_expr_index","visit_expr_index","visit_expr_index","visit_expr_infer","visit_expr_infer","visit_expr_infer","visit_expr_let","visit_expr_let","visit_expr_let","visit_expr_lit","visit_expr_lit","visit_expr_lit","visit_expr_loop","visit_expr_loop","visit_expr_loop","visit_expr_macro","visit_expr_macro","visit_expr_macro","visit_expr_match","visit_expr_match","visit_expr_match","visit_expr_method_call","visit_expr_method_call","visit_expr_method_call","visit_expr_paren","visit_expr_paren","visit_expr_paren","visit_expr_path","visit_expr_path","visit_expr_path","visit_expr_range","visit_expr_range","visit_expr_range","visit_expr_reference","visit_expr_reference","visit_expr_reference","visit_expr_repeat","visit_expr_repeat","visit_expr_repeat","visit_expr_return","visit_expr_return","visit_expr_return","visit_expr_struct","visit_expr_struct","visit_expr_struct","visit_expr_try","visit_expr_try","visit_expr_try","visit_expr_try_block","visit_expr_try_block","visit_expr_try_block","visit_expr_tuple","visit_expr_tuple","visit_expr_tuple","visit_expr_unary","visit_expr_unary","visit_expr_unary","visit_expr_unsafe","visit_expr_unsafe","visit_expr_unsafe","visit_expr_while","visit_expr_while","visit_expr_while","visit_expr_yield","visit_expr_yield","visit_expr_yield","visit_field","visit_field","visit_field","visit_field_mutability","visit_field_mutability","visit_field_mutability","visit_field_pat","visit_field_pat","visit_field_pat","visit_field_value","visit_field_value","visit_field_value","visit_fields","visit_fields","visit_fields","visit_fields_named","visit_fields_named","visit_fields_named","visit_fields_unnamed","visit_fields_unnamed","visit_fields_unnamed","visit_file","visit_file","visit_file","visit_fn_arg","visit_fn_arg","visit_fn_arg","visit_foreign_item","visit_foreign_item","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_type","visit_foreign_item_type","visit_foreign_item_type","visit_generic_argument","visit_generic_argument","visit_generic_argument","visit_generic_param","visit_generic_param","visit_generic_param","visit_generics","visit_generics","visit_generics","visit_ident","visit_ident","visit_ident","visit_impl_item","visit_impl_item","visit_impl_item","visit_impl_item_const","visit_impl_item_const","visit_impl_item_const","visit_impl_item_fn","visit_impl_item_fn","visit_impl_item_fn","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_type","visit_impl_item_type","visit_impl_item_type","visit_impl_restriction","visit_impl_restriction","visit_impl_restriction","visit_index","visit_index","visit_index","visit_item","visit_item","visit_item","visit_item_const","visit_item_const","visit_item_const","visit_item_enum","visit_item_enum","visit_item_enum","visit_item_extern_crate","visit_item_extern_crate","visit_item_extern_crate","visit_item_fn","visit_item_fn","visit_item_fn","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_impl","visit_item_impl","visit_item_impl","visit_item_macro","visit_item_macro","visit_item_macro","visit_item_mod","visit_item_mod","visit_item_mod","visit_item_static","visit_item_static","visit_item_static","visit_item_struct","visit_item_struct","visit_item_struct","visit_item_trait","visit_item_trait","visit_item_trait","visit_item_trait_alias","visit_item_trait_alias","visit_item_trait_alias","visit_item_type","visit_item_type","visit_item_type","visit_item_union","visit_item_union","visit_item_union","visit_item_use","visit_item_use","visit_item_use","visit_label","visit_label","visit_label","visit_lifetime","visit_lifetime","visit_lifetime","visit_lifetime_param","visit_lifetime_param","visit_lifetime_param","visit_lit","visit_lit","visit_lit","visit_lit_bool","visit_lit_bool","visit_lit_bool","visit_lit_byte","visit_lit_byte","visit_lit_byte","visit_lit_byte_str","visit_lit_byte_str","visit_lit_byte_str","visit_lit_char","visit_lit_char","visit_lit_char","visit_lit_float","visit_lit_float","visit_lit_float","visit_lit_int","visit_lit_int","visit_lit_int","visit_lit_str","visit_lit_str","visit_lit_str","visit_local","visit_local","visit_local","visit_local_init","visit_local_init","visit_local_init","visit_macro","visit_macro","visit_macro","visit_macro_delimiter","visit_macro_delimiter","visit_macro_delimiter","visit_member","visit_member","visit_member","visit_meta","visit_meta","visit_meta","visit_meta_list","visit_meta_list","visit_meta_list","visit_meta_name_value","visit_meta_name_value","visit_meta_name_value","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_pat","visit_pat","visit_pat","visit_pat_ident","visit_pat_ident","visit_pat_ident","visit_pat_or","visit_pat_or","visit_pat_or","visit_pat_paren","visit_pat_paren","visit_pat_paren","visit_pat_reference","visit_pat_reference","visit_pat_reference","visit_pat_rest","visit_pat_rest","visit_pat_rest","visit_pat_slice","visit_pat_slice","visit_pat_slice","visit_pat_struct","visit_pat_struct","visit_pat_struct","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_type","visit_pat_type","visit_pat_type","visit_pat_wild","visit_pat_wild","visit_pat_wild","visit_path","visit_path","visit_path","visit_path_arguments","visit_path_arguments","visit_path_arguments","visit_path_segment","visit_path_segment","visit_path_segment","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_type","visit_predicate_type","visit_predicate_type","visit_qself","visit_qself","visit_qself","visit_range_limits","visit_range_limits","visit_range_limits","visit_receiver","visit_receiver","visit_receiver","visit_return_type","visit_return_type","visit_return_type","visit_signature","visit_signature","visit_signature","visit_span","visit_span","visit_span","visit_static_mutability","visit_static_mutability","visit_static_mutability","visit_stmt","visit_stmt","visit_stmt","visit_stmt_macro","visit_stmt_macro","visit_stmt_macro","visit_trait_bound","visit_trait_bound","visit_trait_bound","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_item","visit_trait_item","visit_trait_item","visit_trait_item_const","visit_trait_item_const","visit_trait_item_const","visit_trait_item_fn","visit_trait_item_fn","visit_trait_item_fn","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_type","visit_trait_item_type","visit_trait_item_type","visit_type","visit_type","visit_type","visit_type_array","visit_type_array","visit_type_array","visit_type_bare_fn","visit_type_bare_fn","visit_type_bare_fn","visit_type_group","visit_type_group","visit_type_group","visit_type_impl_trait","visit_type_impl_trait","visit_type_impl_trait","visit_type_infer","visit_type_infer","visit_type_infer","visit_type_macro","visit_type_macro","visit_type_macro","visit_type_never","visit_type_never","visit_type_never","visit_type_param","visit_type_param","visit_type_param","visit_type_param_bound","visit_type_param_bound","visit_type_param_bound","visit_type_paren","visit_type_paren","visit_type_paren","visit_type_path","visit_type_path","visit_type_path","visit_type_ptr","visit_type_ptr","visit_type_ptr","visit_type_reference","visit_type_reference","visit_type_reference","visit_type_slice","visit_type_slice","visit_type_slice","visit_type_trait_object","visit_type_trait_object","visit_type_trait_object","visit_type_tuple","visit_type_tuple","visit_type_tuple","visit_un_op","visit_un_op","visit_un_op","visit_use_glob","visit_use_glob","visit_use_glob","visit_use_group","visit_use_group","visit_use_group","visit_use_name","visit_use_name","visit_use_name","visit_use_path","visit_use_path","visit_use_path","visit_use_rename","visit_use_rename","visit_use_rename","visit_use_tree","visit_use_tree","visit_use_tree","visit_variadic","visit_variadic","visit_variadic","visit_variant","visit_variant","visit_variant","visit_vis_restricted","visit_vis_restricted","visit_vis_restricted","visit_visibility","visit_visibility","visit_visibility","visit_where_clause","visit_where_clause","visit_where_clause","visit_where_predicate","visit_where_predicate","visit_where_predicate","VisitMut","visit_abi_mut","visit_abi_mut","visit_abi_mut","visit_angle_bracketed_generic_arguments_mut","visit_angle_bracketed_generic_arguments_mut","visit_angle_bracketed_generic_arguments_mut","visit_arm_mut","visit_arm_mut","visit_arm_mut","visit_assoc_const_mut","visit_assoc_const_mut","visit_assoc_const_mut","visit_assoc_type_mut","visit_assoc_type_mut","visit_assoc_type_mut","visit_attr_style_mut","visit_attr_style_mut","visit_attr_style_mut","visit_attribute_mut","visit_attribute_mut","visit_attribute_mut","visit_bare_fn_arg_mut","visit_bare_fn_arg_mut","visit_bare_fn_arg_mut","visit_bare_variadic_mut","visit_bare_variadic_mut","visit_bare_variadic_mut","visit_bin_op_mut","visit_bin_op_mut","visit_bin_op_mut","visit_block_mut","visit_block_mut","visit_block_mut","visit_bound_lifetimes_mut","visit_bound_lifetimes_mut","visit_bound_lifetimes_mut","visit_const_param_mut","visit_const_param_mut","visit_const_param_mut","visit_constraint_mut","visit_constraint_mut","visit_constraint_mut","visit_data_enum_mut","visit_data_enum_mut","visit_data_enum_mut","visit_data_mut","visit_data_mut","visit_data_mut","visit_data_struct_mut","visit_data_struct_mut","visit_data_struct_mut","visit_data_union_mut","visit_data_union_mut","visit_data_union_mut","visit_derive_input_mut","visit_derive_input_mut","visit_derive_input_mut","visit_expr_array_mut","visit_expr_array_mut","visit_expr_array_mut","visit_expr_assign_mut","visit_expr_assign_mut","visit_expr_assign_mut","visit_expr_async_mut","visit_expr_async_mut","visit_expr_async_mut","visit_expr_await_mut","visit_expr_await_mut","visit_expr_await_mut","visit_expr_binary_mut","visit_expr_binary_mut","visit_expr_binary_mut","visit_expr_block_mut","visit_expr_block_mut","visit_expr_block_mut","visit_expr_break_mut","visit_expr_break_mut","visit_expr_break_mut","visit_expr_call_mut","visit_expr_call_mut","visit_expr_call_mut","visit_expr_cast_mut","visit_expr_cast_mut","visit_expr_cast_mut","visit_expr_closure_mut","visit_expr_closure_mut","visit_expr_closure_mut","visit_expr_const_mut","visit_expr_const_mut","visit_expr_const_mut","visit_expr_continue_mut","visit_expr_continue_mut","visit_expr_continue_mut","visit_expr_field_mut","visit_expr_field_mut","visit_expr_field_mut","visit_expr_for_loop_mut","visit_expr_for_loop_mut","visit_expr_for_loop_mut","visit_expr_group_mut","visit_expr_group_mut","visit_expr_group_mut","visit_expr_if_mut","visit_expr_if_mut","visit_expr_if_mut","visit_expr_index_mut","visit_expr_index_mut","visit_expr_index_mut","visit_expr_infer_mut","visit_expr_infer_mut","visit_expr_infer_mut","visit_expr_let_mut","visit_expr_let_mut","visit_expr_let_mut","visit_expr_lit_mut","visit_expr_lit_mut","visit_expr_lit_mut","visit_expr_loop_mut","visit_expr_loop_mut","visit_expr_loop_mut","visit_expr_macro_mut","visit_expr_macro_mut","visit_expr_macro_mut","visit_expr_match_mut","visit_expr_match_mut","visit_expr_match_mut","visit_expr_method_call_mut","visit_expr_method_call_mut","visit_expr_method_call_mut","visit_expr_mut","visit_expr_mut","visit_expr_mut","visit_expr_paren_mut","visit_expr_paren_mut","visit_expr_paren_mut","visit_expr_path_mut","visit_expr_path_mut","visit_expr_path_mut","visit_expr_range_mut","visit_expr_range_mut","visit_expr_range_mut","visit_expr_reference_mut","visit_expr_reference_mut","visit_expr_reference_mut","visit_expr_repeat_mut","visit_expr_repeat_mut","visit_expr_repeat_mut","visit_expr_return_mut","visit_expr_return_mut","visit_expr_return_mut","visit_expr_struct_mut","visit_expr_struct_mut","visit_expr_struct_mut","visit_expr_try_block_mut","visit_expr_try_block_mut","visit_expr_try_block_mut","visit_expr_try_mut","visit_expr_try_mut","visit_expr_try_mut","visit_expr_tuple_mut","visit_expr_tuple_mut","visit_expr_tuple_mut","visit_expr_unary_mut","visit_expr_unary_mut","visit_expr_unary_mut","visit_expr_unsafe_mut","visit_expr_unsafe_mut","visit_expr_unsafe_mut","visit_expr_while_mut","visit_expr_while_mut","visit_expr_while_mut","visit_expr_yield_mut","visit_expr_yield_mut","visit_expr_yield_mut","visit_field_mut","visit_field_mut","visit_field_mut","visit_field_mutability_mut","visit_field_mutability_mut","visit_field_mutability_mut","visit_field_pat_mut","visit_field_pat_mut","visit_field_pat_mut","visit_field_value_mut","visit_field_value_mut","visit_field_value_mut","visit_fields_mut","visit_fields_mut","visit_fields_mut","visit_fields_named_mut","visit_fields_named_mut","visit_fields_named_mut","visit_fields_unnamed_mut","visit_fields_unnamed_mut","visit_fields_unnamed_mut","visit_file_mut","visit_file_mut","visit_file_mut","visit_fn_arg_mut","visit_fn_arg_mut","visit_fn_arg_mut","visit_foreign_item_fn_mut","visit_foreign_item_fn_mut","visit_foreign_item_fn_mut","visit_foreign_item_macro_mut","visit_foreign_item_macro_mut","visit_foreign_item_macro_mut","visit_foreign_item_mut","visit_foreign_item_mut","visit_foreign_item_mut","visit_foreign_item_static_mut","visit_foreign_item_static_mut","visit_foreign_item_static_mut","visit_foreign_item_type_mut","visit_foreign_item_type_mut","visit_foreign_item_type_mut","visit_generic_argument_mut","visit_generic_argument_mut","visit_generic_argument_mut","visit_generic_param_mut","visit_generic_param_mut","visit_generic_param_mut","visit_generics_mut","visit_generics_mut","visit_generics_mut","visit_ident_mut","visit_ident_mut","visit_ident_mut","visit_impl_item_const_mut","visit_impl_item_const_mut","visit_impl_item_const_mut","visit_impl_item_fn_mut","visit_impl_item_fn_mut","visit_impl_item_fn_mut","visit_impl_item_macro_mut","visit_impl_item_macro_mut","visit_impl_item_macro_mut","visit_impl_item_mut","visit_impl_item_mut","visit_impl_item_mut","visit_impl_item_type_mut","visit_impl_item_type_mut","visit_impl_item_type_mut","visit_impl_restriction_mut","visit_impl_restriction_mut","visit_impl_restriction_mut","visit_index_mut","visit_index_mut","visit_index_mut","visit_item_const_mut","visit_item_const_mut","visit_item_const_mut","visit_item_enum_mut","visit_item_enum_mut","visit_item_enum_mut","visit_item_extern_crate_mut","visit_item_extern_crate_mut","visit_item_extern_crate_mut","visit_item_fn_mut","visit_item_fn_mut","visit_item_fn_mut","visit_item_foreign_mod_mut","visit_item_foreign_mod_mut","visit_item_foreign_mod_mut","visit_item_impl_mut","visit_item_impl_mut","visit_item_impl_mut","visit_item_macro_mut","visit_item_macro_mut","visit_item_macro_mut","visit_item_mod_mut","visit_item_mod_mut","visit_item_mod_mut","visit_item_mut","visit_item_mut","visit_item_mut","visit_item_static_mut","visit_item_static_mut","visit_item_static_mut","visit_item_struct_mut","visit_item_struct_mut","visit_item_struct_mut","visit_item_trait_alias_mut","visit_item_trait_alias_mut","visit_item_trait_alias_mut","visit_item_trait_mut","visit_item_trait_mut","visit_item_trait_mut","visit_item_type_mut","visit_item_type_mut","visit_item_type_mut","visit_item_union_mut","visit_item_union_mut","visit_item_union_mut","visit_item_use_mut","visit_item_use_mut","visit_item_use_mut","visit_label_mut","visit_label_mut","visit_label_mut","visit_lifetime_mut","visit_lifetime_mut","visit_lifetime_mut","visit_lifetime_param_mut","visit_lifetime_param_mut","visit_lifetime_param_mut","visit_lit_bool_mut","visit_lit_bool_mut","visit_lit_bool_mut","visit_lit_byte_mut","visit_lit_byte_mut","visit_lit_byte_mut","visit_lit_byte_str_mut","visit_lit_byte_str_mut","visit_lit_byte_str_mut","visit_lit_char_mut","visit_lit_char_mut","visit_lit_char_mut","visit_lit_float_mut","visit_lit_float_mut","visit_lit_float_mut","visit_lit_int_mut","visit_lit_int_mut","visit_lit_int_mut","visit_lit_mut","visit_lit_mut","visit_lit_mut","visit_lit_str_mut","visit_lit_str_mut","visit_lit_str_mut","visit_local_init_mut","visit_local_init_mut","visit_local_init_mut","visit_local_mut","visit_local_mut","visit_local_mut","visit_macro_delimiter_mut","visit_macro_delimiter_mut","visit_macro_delimiter_mut","visit_macro_mut","visit_macro_mut","visit_macro_mut","visit_member_mut","visit_member_mut","visit_member_mut","visit_meta_list_mut","visit_meta_list_mut","visit_meta_list_mut","visit_meta_mut","visit_meta_mut","visit_meta_mut","visit_meta_name_value_mut","visit_meta_name_value_mut","visit_meta_name_value_mut","visit_parenthesized_generic_arguments_mut","visit_parenthesized_generic_arguments_mut","visit_parenthesized_generic_arguments_mut","visit_pat_ident_mut","visit_pat_ident_mut","visit_pat_ident_mut","visit_pat_mut","visit_pat_mut","visit_pat_mut","visit_pat_or_mut","visit_pat_or_mut","visit_pat_or_mut","visit_pat_paren_mut","visit_pat_paren_mut","visit_pat_paren_mut","visit_pat_reference_mut","visit_pat_reference_mut","visit_pat_reference_mut","visit_pat_rest_mut","visit_pat_rest_mut","visit_pat_rest_mut","visit_pat_slice_mut","visit_pat_slice_mut","visit_pat_slice_mut","visit_pat_struct_mut","visit_pat_struct_mut","visit_pat_struct_mut","visit_pat_tuple_mut","visit_pat_tuple_mut","visit_pat_tuple_mut","visit_pat_tuple_struct_mut","visit_pat_tuple_struct_mut","visit_pat_tuple_struct_mut","visit_pat_type_mut","visit_pat_type_mut","visit_pat_type_mut","visit_pat_wild_mut","visit_pat_wild_mut","visit_pat_wild_mut","visit_path_arguments_mut","visit_path_arguments_mut","visit_path_arguments_mut","visit_path_mut","visit_path_mut","visit_path_mut","visit_path_segment_mut","visit_path_segment_mut","visit_path_segment_mut","visit_predicate_lifetime_mut","visit_predicate_lifetime_mut","visit_predicate_lifetime_mut","visit_predicate_type_mut","visit_predicate_type_mut","visit_predicate_type_mut","visit_qself_mut","visit_qself_mut","visit_qself_mut","visit_range_limits_mut","visit_range_limits_mut","visit_range_limits_mut","visit_receiver_mut","visit_receiver_mut","visit_receiver_mut","visit_return_type_mut","visit_return_type_mut","visit_return_type_mut","visit_signature_mut","visit_signature_mut","visit_signature_mut","visit_span_mut","visit_span_mut","visit_span_mut","visit_static_mutability_mut","visit_static_mutability_mut","visit_static_mutability_mut","visit_stmt_macro_mut","visit_stmt_macro_mut","visit_stmt_macro_mut","visit_stmt_mut","visit_stmt_mut","visit_stmt_mut","visit_trait_bound_modifier_mut","visit_trait_bound_modifier_mut","visit_trait_bound_modifier_mut","visit_trait_bound_mut","visit_trait_bound_mut","visit_trait_bound_mut","visit_trait_item_const_mut","visit_trait_item_const_mut","visit_trait_item_const_mut","visit_trait_item_fn_mut","visit_trait_item_fn_mut","visit_trait_item_fn_mut","visit_trait_item_macro_mut","visit_trait_item_macro_mut","visit_trait_item_macro_mut","visit_trait_item_mut","visit_trait_item_mut","visit_trait_item_mut","visit_trait_item_type_mut","visit_trait_item_type_mut","visit_trait_item_type_mut","visit_type_array_mut","visit_type_array_mut","visit_type_array_mut","visit_type_bare_fn_mut","visit_type_bare_fn_mut","visit_type_bare_fn_mut","visit_type_group_mut","visit_type_group_mut","visit_type_group_mut","visit_type_impl_trait_mut","visit_type_impl_trait_mut","visit_type_impl_trait_mut","visit_type_infer_mut","visit_type_infer_mut","visit_type_infer_mut","visit_type_macro_mut","visit_type_macro_mut","visit_type_macro_mut","visit_type_mut","visit_type_mut","visit_type_mut","visit_type_never_mut","visit_type_never_mut","visit_type_never_mut","visit_type_param_bound_mut","visit_type_param_bound_mut","visit_type_param_bound_mut","visit_type_param_mut","visit_type_param_mut","visit_type_param_mut","visit_type_paren_mut","visit_type_paren_mut","visit_type_paren_mut","visit_type_path_mut","visit_type_path_mut","visit_type_path_mut","visit_type_ptr_mut","visit_type_ptr_mut","visit_type_ptr_mut","visit_type_reference_mut","visit_type_reference_mut","visit_type_reference_mut","visit_type_slice_mut","visit_type_slice_mut","visit_type_slice_mut","visit_type_trait_object_mut","visit_type_trait_object_mut","visit_type_trait_object_mut","visit_type_tuple_mut","visit_type_tuple_mut","visit_type_tuple_mut","visit_un_op_mut","visit_un_op_mut","visit_un_op_mut","visit_use_glob_mut","visit_use_glob_mut","visit_use_glob_mut","visit_use_group_mut","visit_use_group_mut","visit_use_group_mut","visit_use_name_mut","visit_use_name_mut","visit_use_name_mut","visit_use_path_mut","visit_use_path_mut","visit_use_path_mut","visit_use_rename_mut","visit_use_rename_mut","visit_use_rename_mut","visit_use_tree_mut","visit_use_tree_mut","visit_use_tree_mut","visit_variadic_mut","visit_variadic_mut","visit_variadic_mut","visit_variant_mut","visit_variant_mut","visit_variant_mut","visit_vis_restricted_mut","visit_vis_restricted_mut","visit_vis_restricted_mut","visit_visibility_mut","visit_visibility_mut","visit_visibility_mut","visit_where_clause_mut","visit_where_clause_mut","visit_where_clause_mut","visit_where_predicate_mut","visit_where_predicate_mut","visit_where_predicate_mut"],"q":[[0,"syn"],[3658,"syn::buffer"],[3693,"syn::ext"],[3697,"syn::meta"],[3711,"syn::parse"],[3806,"syn::parse::discouraged"],[3810,"syn::punctuated"],[3972,"syn::spanned"],[3974,"syn::token"],[5659,"syn::visit"],[6206,"syn::visit_mut"]],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","An equality constraint on an associated constant: the …","An equality constraint on an associated constant: the …","A binding (equality constraint) on an associated type: the …","A binding (equality constraint) on an associated type: the …","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute, like <code>#[repr(transparent)]</code>.","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","The variadic argument of a function pointer like …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const block: <code>const { ... }</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expression, with or without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","A blocked scope: <code>{ ... }</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Unused, but reserved for RFC 3323 restrictions.","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An associated function within the definition of a trait.","An associated function within an impl block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","","A word of Rust code, which may be a keyword or legal …","","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","An associated function within an impl block.","A macro invocation within an impl block.","An associated type within an impl block.","Unused, but reserved for RFC 3323 restrictions.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","","A lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","","A byte literal: <code>b&#39;f&#39;</code>.","","A byte string literal: <code>b&quot;foo&quot;</code>.","","A character literal: <code>&#39;a&#39;</code>.","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","","An integer literal: <code>1</code> or <code>1u16</code>.","","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","The expression assigned in a local <code>let</code> binding, including …","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in pattern position.","A macro invocation in statement position.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","The never type: <code>!</code>.","","","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized pattern: <code>(A | B)</code>.","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A const block: <code>const { ... }</code>.","A pattern that binds a new variable: …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A pattern that matches any one of a set of cases.","A parenthesized pattern: <code>(A | B)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method.","The <code>self</code> argument of an associated method.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference pattern: <code>&amp;mut var</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A dynamically sized slice type: <code>[T]</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","The mutability of an <code>Item::Static</code> or <code>ForeignItem::Static</code>.","A statement, usually ending in a semicolon.","A macro invocation in statement position.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","An associated function within the definition of a trait.","A macro invocation within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A particular type is returned.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","","","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>(A, B)</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeParam&gt; over the …","","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeParam&gt; over the …","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","","","Facility for interpreting structured content inside of an …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","See <code>Attribute::parse_args</code>.","Parse the arguments to the attribute using the given …","See <code>Attribute::parse_args_with</code>.","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parse a <code>Path</code> containing no path arguments on any of its …","Parse a pattern, possibly involving <code>|</code>, but not a leading <code>|</code>.","Parse a pattern, possibly involving <code>|</code>, possibly including a","Parses a named (braced struct) field.","Parse the arguments to the attribute, expecting it to …","See <code>Attribute::parse_nested_meta</code>.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a pattern that does <em>not</em> involve <code>|</code> at the top level.","Parse a string of Rust code into the chosen syntax tree …","Parse <code>::&lt;…&gt;</code> with mandatory leading <code>::</code>.","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the path that identifies the interpretation of …","Returns the path that begins this structured meta item.","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","Error if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.","Error if this is a <code>Meta::Path</code> or <code>Meta::List</code>.","Error if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","","","Statements in a block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implementseturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntax tree traversal to walk a shared borrow of a syntax …","Syntax tree traversal to mutate an exclusive borrow of a …","","","","In some positions, types may not contain the <code>+</code> character, …","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Context for parsing a single property in the conventional …","","","Report that the attribute’s content did not conform to …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Used when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside …","Make a parser that is usable with <code>parse_macro_input!</code> in a …","","","","","Used when parsing <code>key = &quot;value&quot;</code> syntax.","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","","The source location of the error.","Returns the <code>Span</code> of the next token in the parse stream, or …","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support manipulating …","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Returns the delimiter, the span of the delimiter token, …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>…","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Removes the trailing punctuation from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>become</code>","<code>box</code>","<code>{</code>…<code>}</code>","<code>[</code>…<code>]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>-</code>","<code>-=</code>","<code>mod</code>","<code>move</code>","<code>mut</code>","<code>!=</code>","<code>!</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(</code>…<code>)</code>","<code>::</code>","<code>%</code>","<code>%=</code>","<code>+</code>","<code>+=</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>/</code>","<code>/=</code>","<code>*</code>","<code>*=</code>","<code>static</code>","<code>struct</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeyntax tree traversal to walk a shared borrow of a syntax …yntax tree traversal to mutate an exclusive borrow of a …i":[0,136,136,136,153,0,0,32,169,32,0,154,0,154,32,0,0,32,169,0,0,0,32,136,136,136,136,136,136,0,32,3,0,135,135,32,3,3,32,32,3,76,32,32,79,91,118,123,138,154,0,0,154,32,347,0,0,0,0,187,137,0,136,136,28,91,136,0,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,32,0,0,0,0,0,0,0,3,91,113,118,123,0,32,0,0,0,0,0,91,136,0,0,0,107,32,107,169,136,76,0,0,0,138,32,91,0,0,0,0,0,0,0,169,0,32,32,169,161,18,3,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,32,0,0,79,84,88,154,0,19,0,0,32,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,165,0,32,136,0,32,91,113,118,123,138,165,169,0,32,86,0,0,0,0,32,91,136,136,132,107,19,23,71,136,137,169,86,132,153,163,137,136,138,18,32,135,138,169,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,32,107,138,169,0,0,0,0,169,161,0,32,138,0,347,0,129,32,138,169,136,136,107,32,138,161,0,32,0,136,136,136,136,0,138,169,91,113,0,0,0,3,0,28,32,91,138,136,136,0,84,91,91,0,0,0,0,0,0,0,169,32,32,32,138,169,138,0,0,79,88,91,113,118,123,138,154,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,32,28,91,23,23,71,32,91,0,0,0,0,0,0,0,0,32,84,91,113,118,123,3,138,169,0,0,0,0,32,138,32,96,128,171,60,142,180,2,40,56,155,152,55,41,110,160,11,35,42,128,22,26,27,33,34,35,36,37,38,39,40,41,42,43,43,44,45,46,47,48,49,50,51,52,52,53,54,54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,73,75,77,80,81,82,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,114,115,116,117,119,120,121,122,124,125,126,127,130,131,139,140,141,142,143,144,145,146,147,148,149,150,166,168,185,186,102,36,134,176,36,45,9,8,9,8,35,38,43,43,65,68,95,125,42,46,53,69,75,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,90,80,81,89,90,103,121,158,173,182,24,30,55,63,93,96,97,102,112,145,164,0,17,33,49,61,144,170,181,0,39,0,139,35,42,140,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,2,108,155,26,73,74,80,81,82,89,90,92,100,102,115,119,121,124,130,148,150,158,75,131,186,48,69,78,78,43,43,82,92,119,124,179,42,128,99,44,94,0,0,27,78,83,153,81,82,119,120,121,97,124,125,126,20,134,22,167,63,143,36,45,56,131,186,182,170,172,177,179,180,181,33,66,144,146,147,183,48,59,59,30,93,1,1,2,71,72,21,34,51,81,82,92,100,103,104,124,126,156,157,167,1,2,71,72,39,41,46,47,49,51,55,57,60,61,62,64,67,70,73,92,100,124,167,0,94,184,75,22,29,31,63,101,105,145,1,1,1,2,71,72,9,8,128,171,46,83,1,1,1,1,1,1,1,16,11,12,2,17,18,19,19,19,19,20,21,22,23,23,23,24,25,26,27,27,27,27,28,29,30,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,71,71,72,72,73,74,75,76,77,78,79,79,79,79,80,81,81,82,83,84,84,84,85,86,87,88,88,88,89,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,107,107,107,107,107,108,109,110,111,112,113,113,113,113,113,114,115,116,117,118,118,118,118,118,119,120,121,122,123,123,123,123,123,124,125,126,127,128,129,129,129,130,131,132,133,3,3,3,3,3,3,3,3,10,6,5,7,9,9,8,8,4,347,134,135,136,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,140,141,142,143,144,145,146,147,148,149,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,40,27,92,93,97,101,102,103,104,105,116,119,121,124,126,128,156,157,158,151,47,172,78,83,155,160,75,1,2,71,72,2,22,26,27,81,82,92,93,94,98,99,100,101,102,103,104,105,108,109,110,115,116,119,121,124,126,128,139,152,156,157,158,48,97,173,46,162,49,72,166,42,128,159,171,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,23,23,23,23,153,151,153,77,96,97,102,112,23,23,38,39,44,46,53,69,106,151,140,34,37,23,61,170,51,166,130,80,89,180,78,42,83,85,90,171,78,59,59,52,52,53,78,83,155,160,54,54,98,117,122,127,168,175,78,55,45,73,150,0,17,56,99,85,42,26,60,100,115,130,139,142,179,180,74,184,185,186,24,1,2,80,3,10,6,5,7,9,8,4,1,37,67,42,42,42,128,159,171,78,25,40,56,57,66,85,128,141,146,147,159,162,171,177,183,0,0,0,1,2,19,20,21,22,24,25,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,3,10,10,6,5,7,9,8,4,134,136,137,151,152,154,155,159,161,164,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,0,1,17,20,17,20,134,134,0,17,0,151,138,138,26,17,20,17,0,0,138,0,155,26,10,164,32,1,2,46,51,75,131,141,142,148,150,166,17,19,20,21,58,58,63,85,134,145,147,162,178,160,17,87,162,0,58,58,63,145,147,178,64,128,56,130,94,110,19,19,19,63,145,102,62,34,37,151,130,97,99,29,61,92,94,98,100,101,103,104,106,114,115,116,117,119,120,121,122,124,126,127,166,168,170,1,2,3,10,6,5,7,9,8,4,77,95,114,120,125,1,1,1,16,11,12,2,2,17,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,3,3,10,10,6,6,5,5,7,7,9,9,8,8,4,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,72,4,0,78,111,179,59,59,100,115,164,29,101,17,139,3,10,6,5,7,9,8,102,48,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,2,9,8,1,16,11,12,2,17,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,3,10,6,5,7,9,8,4,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,10,6,5,7,9,8,4,20,134,97,102,103,106,108,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,65,56,26,41,82,92,100,104,115,119,124,126,130,148,156,160,185,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,78,78,104,116,121,126,50,149,174,31,105,25,1,68,96,97,99,102,128,171,106,10,6,5,7,4,21,4,157,128,171,30,93,26,27,92,93,94,95,99,100,101,102,103,104,105,106,114,115,116,124,125,126,0,0,78,87,69,169,173,182,187,70,0,0,223,223,224,223,224,224,224,224,224,224,224,223,224,224,224,223,224,224,224,223,223,224,224,224,224,224,224,223,224,223,224,223,224,0,348,348,348,0,226,226,226,226,226,226,226,0,226,226,226,226,226,0,0,0,217,0,0,0,0,0,0,0,229,228,231,229,230,235,228,231,229,230,235,229,228,230,228,230,228,229,230,0,229,231,229,230,228,228,228,229,229,229,228,228,231,229,230,235,228,231,229,230,235,228,228,228,229,229,228,228,214,229,217,235,217,229,217,229,231,229,229,229,228,228,229,229,228,228,230,228,229,228,231,229,230,235,228,231,229,230,235,228,231,229,230,235,0,0,349,350,244,0,0,0,0,0,0,0,0,244,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,237,237,241,242,243,207,244,237,237,241,242,243,207,244,244,237,237,237,237,237,237,237,241,246,242,243,207,208,244,237,237,237,237,237,237,241,246,242,243,207,208,244,237,237,237,241,246,242,243,207,208,237,244,244,237,237,237,237,237,237,241,246,242,243,207,208,237,244,241,246,242,243,207,208,241,246,242,243,207,208,237,237,237,237,237,237,237,237,244,244,237,237,237,241,246,242,243,207,208,237,244,237,241,242,243,207,244,237,244,237,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,244,244,0,351,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,199,296,299,300,302,303,304,305,309,313,316,317,320,321,325,327,329,330,332,337,339,341,199,296,299,300,302,303,304,305,309,313,316,317,320,321,325,327,329,330,332,337,339,341,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,342,343,344,199,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,199,249,250,251,252,253,254,255,256,257,258,196,259,260,261,262,263,201,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,197,282,283,198,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,0,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,345,345,0,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346,0,346,346],"fc":[],"p":[[3,"Ident"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[3,"LitByte"],[3,"LitByteStr"],[3,"LitChar"],[3,"LitFloat"],[3,"LitInt"],[3,"LitStr"],[3,"TypeGenerics"],[3,"Turbofish"],[15,"str"],[8,"FromStr"],[6,"Result"],[3,"ImplGenerics"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprConst"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprInfer"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[4,"Member"],[3,"Index"],[3,"FieldValue"],[3,"Label"],[3,"Arm"],[4,"RangeLimits"],[3,"File"],[3,"Generics"],[4,"GenericParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateLifetime"],[3,"PredicateType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[4,"UseTree"],[3,"UsePath"],[3,"UseName"],[3,"UseRename"],[3,"UseGlob"],[3,"UseGroup"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemFn"],[3,"TraitItemType"],[3,"TraitItemMacro"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemFn"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Signature"],[4,"FnArg"],[3,"Receiver"],[3,"Variadic"],[4,"StaticMutability"],[4,"ImplRestriction"],[3,"Macro"],[4,"MacroDelimiter"],[4,"BinOp"],[4,"UnOp"],[4,"Pat"],[3,"PatIdent"],[3,"PatOr"],[3,"PatParen"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"AssocType"],[3,"AssocConst"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Visibility"],[3,"VisRestricted"],[4,"FieldMutability"],[3,"Block"],[4,"Stmt"],[3,"Local"],[3,"LocalInit"],[3,"StmtMacro"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"BareVariadic"],[4,"ReturnType"],[4,"Ordering"],[8,"AsRef"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"Crate"],[3,"SelfValue"],[3,"Super"],[3,"Underscore"],[3,"SelfType"],[3,"Extern"],[15,"usize"],[3,"Literal"],[8,"Into"],[4,"Option"],[8,"Hasher"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"slice"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[8,"FnMut"],[3,"DelimSpan"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseNestedMeta"],[8,"Display"],[3,"Error"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Lookahead1"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Nothing"],[8,"Peek"],[3,"Punctuated"],[3,"Demand"],[8,"FnOnce"],[8,"Clone"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[8,"Default"],[3,"PairsMut"],[8,"Token"],[3,"Group"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Comma"],[3,"Dollar"],[3,"Dot"],[3,"DotDot"],[3,"DotDotDot"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"FatArrow"],[3,"Ge"],[3,"Gt"],[3,"LArrow"],[3,"Le"],[3,"Lt"],[3,"Minus"],[3,"MinusEq"],[3,"Ne"],[3,"Not"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"PathSep"],[3,"Percent"],[3,"PercentEq"],[3,"Plus"],[3,"PlusEq"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Slash"],[3,"SlashEq"],[3,"Star"],[3,"StarEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[8,"Visit"],[8,"VisitMut"],[4,"StrStyle"],[8,"IdentExt"],[8,"Speculative"],[8,"AnyDelimiter"],[8,"Spanned"]]},\
"tesseract_plumbing":{"doc":"","t":"NNNDDDDDDDDDEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["DimensionsExceedImageSize","DimensionsExceedMemory","ImageWidthExceedsBytesPerLine","TessBaseApi","TessBaseApiGetAltoTextError","TessBaseApiGetHocrTextError","TessBaseApiGetLstmBoxTextError","TessBaseApiGetTsvTextError","TessBaseApiGetUtf8TextError","TessBaseApiGetWordStrBoxTextError","TessBaseApiInitError","TessBaseApiRecogniseError","TessBaseApiSetImageSafetyError","TessBaseApiSetVariableError","Text","all_word_confidences","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","default","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_alto_text","get_component_images_1","get_hocr_text","get_input_image","get_lstm_box_text","get_source_y_resolution","get_tsv_text","get_utf8_text","get_word_str_box_text","init_2","init_4","into","into","into","into","into","into","into","into","into","into","into","into","leptonica_plumbing","leptonica_sys","mean_text_conf","new","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","recognize","set_image","set_image_2","set_rectangle","set_source_resolution","set_variable","tesseract_sys","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version"],"q":[[0,"tesseract_plumbing"]],"d":["","","","Wrapper around <code>tesseract::TessBaseAPI</code>","","","","","","","","","","","Wrapper around Tesseract’s returned strings","Wrapper for <code>TessBaseAPIAllWordConfidences</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wrapper for <code>TessBaseAPIGetAltoText</code>","Wrapper for <code>GetComponentImages 1/2</code>","Wrapper for <code>GetUTF8Text</code>","Wrapper for <code>TessBaseAPIGetInputImage</code>","Wrapper for <code>TessBaseAPIGetLSTMBoxText</code>","Wrapper for <code>TessBaseAPIGetSourceYResolution</code>","Wrapper for <code>TessBaseAPIGetTsvText</code>","Wrapper for <code>GetUTF8Text</code>","Wrapper for <code>TessBaseAPIGetWordStrBoxText</code>","Wrapper for <code>Init-2</code>","Wrapper for <code>Init-4</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Wrapper for <code>TessBaseAPIMeanTextConf</code>","Safety","","","","","","","","","","","Wrapper for <code>Recognize</code>","Wrapper for <code>SetImage-1</code>","Wrapper for <code>SetImage-2</code>","Wrapper for <code>TessBaseAPISetRectangle</code>","Wrapper for <code>SetSourceResolution</code>","Wrapper for <code>SetVariable</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper for <code>Version</code>"],"i":[5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,1,9,10,11,12,13,5,14,15,16,17,3,1,9,10,11,12,13,5,14,15,16,17,1,1,3,1,5,1,9,9,10,10,11,11,12,12,13,13,5,5,14,14,15,15,16,16,17,17,3,1,9,10,11,12,13,5,14,15,16,17,1,1,1,1,1,1,1,1,1,1,1,3,1,9,10,11,12,13,5,14,15,16,17,0,0,1,3,9,10,11,12,13,5,14,15,16,17,1,1,1,1,1,1,0,9,10,11,12,13,5,14,15,16,17,3,1,9,10,11,12,13,5,14,15,16,17,3,1,9,10,11,12,13,5,14,15,16,17,3,1,9,10,11,12,13,5,14,15,16,17,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[0,0]]]],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[3],[1],[[5,5],6],[[1,7],8],[[9,7],8],[[9,7],8],[[10,7],8],[[10,7],8],[[11,7],8],[[11,7],8],[[12,7],8],[[12,7],8],[[13,7],8],[[13,7],8],[[5,7],8],[[5,7],8],[[14,7],8],[[14,7],8],[[15,7],8],[[15,7],8],[[16,7],8],[[16,7],8],[[17,7],8],[[17,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,18],[[2,[3,14]]]],[[1,19,18],[[2,[[21,[20]],0]]]],[[1,18],[[2,[3,12]]]],[1,[[24,[[23,[22]]]]]],[[1,18],[[2,[3,16]]]],[1,18],[[1,18],[[2,[3,15]]]],[1,[[2,[3,13]]]],[[1,18],[[2,[3,17]]]],[[1,[24,[4]],[24,[4]]],[[2,[9]]]],[[1,[24,[4]],[24,[4]],25],[[2,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,18],[26,3],[27],[27],[27],[27],[27],[27],[27],[27],[27],[27],[1,[[2,[11]]]],[[1,[29,[28]],18,18,18,18],[[2,[5]]]],[[1,22]],[[1,18,18,18,18]],[[1,18]],[[1,4,4],[[2,[10]]]],0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],4]],"c":[],"p":[[3,"TessBaseApi"],[4,"Result"],[3,"Text"],[3,"CStr"],[4,"TessBaseApiSetImageSafetyError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TessBaseApiInitError"],[3,"TessBaseApiSetVariableError"],[3,"TessBaseApiRecogniseError"],[3,"TessBaseApiGetHocrTextError"],[3,"TessBaseApiGetUtf8TextError"],[3,"TessBaseApiGetAltoTextError"],[3,"TessBaseApiGetTsvTextError"],[3,"TessBaseApiGetLstmBoxTextError"],[3,"TessBaseApiGetWordStrBoxTextError"],[6,"c_int"],[6,"TessPageIteratorLevel"],[3,"Boxa"],[3,"RefCountedExclusive"],[3,"Pix"],[3,"BorrowedFrom"],[4,"Option"],[6,"TessOcrEngineMode"],[6,"c_char"],[3,"Demand"],[15,"u8"],[15,"slice"],[3,"String"],[3,"TypeId"]]},\
"tesseract_sys":{"doc":"","t":"DGFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGDFFFFFFFFFFFFFFFFFFFDGRRRRGRRRRFDFFFFFFFFFFGRRRRRFFFGRRRRRRRRRRRRRRRGRRRRGRRRRRRRRRRRRRRRRGDFFFFFFFFFFFFFFFDFFFFFFFFFGRRRFFFFGRRRGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ETEXT_DESC","FILE","TessAltoRendererCreate","TessBaseAPI","TessBaseAPIAdaptToWordStr","TessBaseAPIAllWordConfidences","TessBaseAPIAnalyseLayout","TessBaseAPIClear","TessBaseAPIClearAdaptiveClassifier","TessBaseAPICreate","TessBaseAPIDelete","TessBaseAPIEnd","TessBaseAPIGetAltoText","TessBaseAPIGetAvailableLanguagesAsVector","TessBaseAPIGetBoolVariable","TessBaseAPIGetBoxText","TessBaseAPIGetComponentImages","TessBaseAPIGetComponentImages1","TessBaseAPIGetConnectedComponents","TessBaseAPIGetDatapath","TessBaseAPIGetDoubleVariable","TessBaseAPIGetHOCRText","TessBaseAPIGetInitLanguagesAsString","TessBaseAPIGetInputImage","TessBaseAPIGetInputName","TessBaseAPIGetIntVariable","TessBaseAPIGetIterator","TessBaseAPIGetLSTMBoxText","TessBaseAPIGetLoadedLanguagesAsVector","TessBaseAPIGetMutableIterator","TessBaseAPIGetOpenCLDevice","TessBaseAPIGetPageSegMode","TessBaseAPIGetRegions","TessBaseAPIGetSourceYResolution","TessBaseAPIGetStringVariable","TessBaseAPIGetStrips","TessBaseAPIGetTextDirection","TessBaseAPIGetTextlines","TessBaseAPIGetTextlines1","TessBaseAPIGetThresholdedImage","TessBaseAPIGetThresholdedImageScaleFactor","TessBaseAPIGetTsvText","TessBaseAPIGetUNLVText","TessBaseAPIGetUTF8Text","TessBaseAPIGetUnichar","TessBaseAPIGetWordStrBoxText","TessBaseAPIGetWords","TessBaseAPIInit1","TessBaseAPIInit2","TessBaseAPIInit3","TessBaseAPIInit4","TessBaseAPIInitForAnalysePage","TessBaseAPIInitLangMod","TessBaseAPIIsValidWord","TessBaseAPIMeanTextConf","TessBaseAPIPrintVariables","TessBaseAPIPrintVariablesToFile","TessBaseAPIProcessPage","TessBaseAPIProcessPages","TessBaseAPIReadConfigFile","TessBaseAPIReadDebugConfigFile","TessBaseAPIRecognize","TessBaseAPIRecognizeForChopTest","TessBaseAPIRect","TessBaseAPISetDebugVariable","TessBaseAPISetImage","TessBaseAPISetImage2","TessBaseAPISetInputImage","TessBaseAPISetInputName","TessBaseAPISetMinOrientationMargin","TessBaseAPISetOutputName","TessBaseAPISetPageSegMode","TessBaseAPISetRectangle","TessBaseAPISetSourceResolution","TessBaseAPISetVariable","TessBoxTextRendererCreate","TessCancelFunc","TessChoiceIterator","TessChoiceIteratorConfidence","TessChoiceIteratorDelete","TessChoiceIteratorGetUTF8Text","TessChoiceIteratorNext","TessDeleteIntArray","TessDeleteResultRenderer","TessDeleteText","TessDeleteTextArray","TessHOcrRendererCreate","TessHOcrRendererCreate2","TessLSTMBoxRendererCreate","TessMonitorCreate","TessMonitorDelete","TessMonitorGetCancelThis","TessMonitorGetProgress","TessMonitorSetCancelFunc","TessMonitorSetCancelThis","TessMonitorSetDeadlineMSecs","TessMonitorSetProgressFunc","TessMutableIterator","TessOcrEngineMode","TessOcrEngineMode_OEM_DEFAULT","TessOcrEngineMode_OEM_LSTM_ONLY","TessOcrEngineMode_OEM_TESSERACT_LSTM_COMBINED","TessOcrEngineMode_OEM_TESSERACT_ONLY","TessOrientation","TessOrientation_ORIENTATION_PAGE_DOWN","TessOrientation_ORIENTATION_PAGE_LEFT","TessOrientation_ORIENTATION_PAGE_RIGHT","TessOrientation_ORIENTATION_PAGE_UP","TessPDFRendererCreate","TessPageIterator","TessPageIteratorBaseline","TessPageIteratorBegin","TessPageIteratorBlockType","TessPageIteratorBoundingBox","TessPageIteratorCopy","TessPageIteratorDelete","TessPageIteratorGetBinaryImage","TessPageIteratorGetImage","TessPageIteratorIsAtBeginningOf","TessPageIteratorIsAtFinalElement","TessPageIteratorLevel","TessPageIteratorLevel_RIL_BLOCK","TessPageIteratorLevel_RIL_PARA","TessPageIteratorLevel_RIL_SYMBOL","TessPageIteratorLevel_RIL_TEXTLINE","TessPageIteratorLevel_RIL_WORD","TessPageIteratorNext","TessPageIteratorOrientation","TessPageIteratorParagraphInfo","TessPageSegMode","TessPageSegMode_PSM_AUTO","TessPageSegMode_PSM_AUTO_ONLY","TessPageSegMode_PSM_AUTO_OSD","TessPageSegMode_PSM_CIRCLE_WORD","TessPageSegMode_PSM_COUNT","TessPageSegMode_PSM_OSD_ONLY","TessPageSegMode_PSM_RAW_LINE","TessPageSegMode_PSM_SINGLE_BLOCK","TessPageSegMode_PSM_SINGLE_BLOCK_VERT_TEXT","TessPageSegMode_PSM_SINGLE_CHAR","TessPageSegMode_PSM_SINGLE_COLUMN","TessPageSegMode_PSM_SINGLE_LINE","TessPageSegMode_PSM_SINGLE_WORD","TessPageSegMode_PSM_SPARSE_TEXT","TessPageSegMode_PSM_SPARSE_TEXT_OSD","TessParagraphJustification","TessParagraphJustification_JUSTIFICATION_CENTER","TessParagraphJustification_JUSTIFICATION_LEFT","TessParagraphJustification_JUSTIFICATION_RIGHT","TessParagraphJustification_JUSTIFICATION_UNKNOWN","TessPolyBlockType","TessPolyBlockType_PT_CAPTION_TEXT","TessPolyBlockType_PT_COUNT","TessPolyBlockType_PT_EQUATION","TessPolyBlockType_PT_FLOWING_IMAGE","TessPolyBlockType_PT_FLOWING_TEXT","TessPolyBlockType_PT_HEADING_IMAGE","TessPolyBlockType_PT_HEADING_TEXT","TessPolyBlockType_PT_HORZ_LINE","TessPolyBlockType_PT_INLINE_EQUATION","TessPolyBlockType_PT_NOISE","TessPolyBlockType_PT_PULLOUT_IMAGE","TessPolyBlockType_PT_PULLOUT_TEXT","TessPolyBlockType_PT_TABLE","TessPolyBlockType_PT_UNKNOWN","TessPolyBlockType_PT_VERTICAL_TEXT","TessPolyBlockType_PT_VERT_LINE","TessProgressFunc","TessResultIterator","TessResultIteratorConfidence","TessResultIteratorCopy","TessResultIteratorDelete","TessResultIteratorGetChoiceIterator","TessResultIteratorGetPageIterator","TessResultIteratorGetPageIteratorConst","TessResultIteratorGetUTF8Text","TessResultIteratorNext","TessResultIteratorSymbolIsDropcap","TessResultIteratorSymbolIsSubscript","TessResultIteratorSymbolIsSuperscript","TessResultIteratorWordFontAttributes","TessResultIteratorWordIsFromDictionary","TessResultIteratorWordIsNumeric","TessResultIteratorWordRecognitionLanguage","TessResultRenderer","TessResultRendererAddImage","TessResultRendererBeginDocument","TessResultRendererEndDocument","TessResultRendererExtention","TessResultRendererImageNum","TessResultRendererInsert","TessResultRendererNext","TessResultRendererTitle","TessTextRendererCreate","TessTextlineOrder","TessTextlineOrder_TEXTLINE_ORDER_LEFT_TO_RIGHT","TessTextlineOrder_TEXTLINE_ORDER_RIGHT_TO_LEFT","TessTextlineOrder_TEXTLINE_ORDER_TOP_TO_BOTTOM","TessTsvRendererCreate","TessUnlvRendererCreate","TessVersion","TessWordStrBoxRendererCreate","TessWritingDirection","TessWritingDirection_WRITING_DIRECTION_LEFT_TO_RIGHT","TessWritingDirection_WRITING_DIRECTION_RIGHT_TO_LEFT","TessWritingDirection_WRITING_DIRECTION_TOP_TO_BOTTOM","_IO_lock_t","__off64_t","__off_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","kMaxCredibleResolution","kMinCredibleResolution","kPointsPerInch","kResolutionEstimationFactor","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"tesseract_sys"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,8],9],[[2,8],9],[[3,8],9],[[4,8],9],[[5,8],9],[[6,8],9],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11]],"c":[],"p":[[3,"TessResultRenderer"],[3,"TessBaseAPI"],[3,"TessPageIterator"],[3,"TessResultIterator"],[3,"TessMutableIterator"],[3,"TessChoiceIterator"],[3,"ETEXT_DESC"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
